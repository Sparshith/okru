{"version":3,"sources":["components/followingtable.js","components/okrs.js","firebase.js","components/pomcircle.js","components/textfieldcharcount.js","components/pomcard.js","components/copom.js","components/dialog.js","screens/homescreen.js","App.js","serviceWorker.js","index.js"],"names":["FollowingTable","props","handleChangePage","event","newPage","setState","page","handleChangeRowsPerPage","rowsPerPage","target","value","handleSearch","searchValue","following","state","followingRaw","tempFollow","filter","d","includes","bind","this","classes","name","initText","Paper","elevation","TableContainer","className","root","Table","stickyHeader","aria-label","size","TableHead","TableRow","TableCell","dark","style","borderRadius","Grid","container","direction","justify","alignItems","Typography","TextField","id","variant","label","search","InputLabelProps","color","paddingLeft","InputProps","onChange","TableBody","length","align","component","scope","slice","map","row","key","Link","href","TablePagination","rowsPerPageOptions","count","onChangePage","onChangeRowsPerPage","React","Component","withStyles","theme","maxHeight","textAlign","bold","fontWeight","tableCenter","display","justifyContent","background","width","Okrs","printOKR","okrs","user","doc","jsPDF","orientation","columnWidth","x","val","y","setFont","setFontSize","text","parseInt","setTextColor","setFontStyle","rotationDirection","angle","charSpace","setDrawColor","height","forEach","okr","i","line","roundedRect","setFillColor","splitTitle","splitTextToSize","title","j","description","keyResults","kr","result","metric","failureMode","save","findWeeksinQuarter","q","d1","d2","jan1","Date","w1","Math","ceil","findWidth","idCounts","progress","f","reduce","a","v","chips","relationships","Chip","icon","fitness","work","creative","other","okrList","handleOpenDialog","selfView","isSignedIn","userBeingViewed","isFollowing","handleFollow","quarter","year","updateProgress","followText","Breadcrumbs","brumb","Fab","edit","onClick","fontSize","Box","followBox","Switch","checked","inputProps","k","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","col","heading","progressGrid","bound","category","ExpansionPanelDetails","List","ListItem","circleColor","weekLabel","circle","bubbles","descriptionPFM","Divider","marginTop","homeAdd","padding","flexDirection","goal","goalMetric","paddingBottom","borderLeft","darkBackground","boxShadow","margin","marginBottom","flex","paddingRight","paddingTop","cursor","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","PomCircle","time","status","cx","cy","outerRadius","innerRadius","startAngle","endAngle","fill","cornerRadius","dataKey","data","position","sub3","main","sub","sub2","pomInProgress","pomNotInProgress","transform","TextFieldCharCount","handleUpdateText","currentCount","required","fullWidth","multiline","rows","helperText","maxLength","FormHelperTextProps","error","right","bottom","PomCard","textEdit","pomData","startPom","pausePom","textPom","resumePom","pomArray","Array","poms","md","item","pomcards","self","outline","pommer","pomColor","e","txt","border","borderTop","CoPom","push","userID","selfPomCount","refreshAllPoms","clearInterval","inter","_isMounted","deployment","setInterval","console","log","pomProcessed","database","ref","once","dd","queryDate","toLocaleDateString","replace","child","snapshot","pomIds","latestPomStatus","latestPomModified","latestPomElapsed","latestPomStart","latestPomText","filteredPoms","selfPresent","elapsed","curPoms","pomLength","latestPom","getTime","modifiedUTC","startUTC","utc","uid","set","newPoms","elapsedNew","minHeight","minWidth","Edit","addKR","newKR","changeCategory","newCategory","objective","deleteKR","deleteID","changeTitle","changeDescription","changeFailureMode","changeKRResult","changeKRMetric","showOKR","openDialog","handleCloseDialog","Dialog","fullScreen","open","onClose","AppBar","appBar","Toolbar","toolBar","IconButton","edge","Button","startIcon","autoFocus","form","spacing","xs","sm","lg","xl","obj","FormControl","formControl","InputLabel","Select","labelId","MenuItem","Avatar","buttonify","fail","letterSpacing","dummyData","require","HomeScreen","followID","Object","keys","followlist","userRequested","curUser","remove","flag","showDialogContent","okrItem","newOKRList","curUserOKRs","splice","editOKR","showDialog","dialogContent","defaultDialogContent","allOKRs","curOKR","curKR","newProgress","p","newKRs","newAllOKRs","navHandleClick","anchorEl","currentTarget","navHandleClose","navSignin","window","location","uiConfig","signInFlow","signInOptions","auth","GoogleAuthProvider","PROVIDER_ID","callbacks","signInSuccess","mode","userlist","followerslist","URLSearchParams","get","getMonth","getFullYear","signOut","onAuthStateChanged","usersRef","email","split","exists","userToStore","displayName","firstName","photoURL","userX","find","undefined","on","values","indexOf","allUsers","all","followers","tempUserFollows","accountButton","alt","src","aria-haspopup","Menu","keepMounted","Boolean","jumbo","underline","BottomNavigation","newValue","showLabels","stickToBottom","BottomNavigationAction","firebaseAuth","flexGrow","top","zIndex","maxWidth","borderRight","createMuiTheme","palette","primary","light","contrastText","secondary","disabled","hint","App","pathname","currentPage","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.19416625.chunk.js","sourcesContent":["import React from 'react';\nimport LockIcon from '@material-ui/icons/Lock';\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\nimport { withStyles } from '@material-ui/core/styles';\nimport {\n    Paper, Typography, Table, TableBody, TableCell, TableContainer, TableHead, TableRow,\n    TablePagination, Link, TextField, Grid\n} from '@material-ui/core';\n\n\nconst styles = theme => ({\n    root: {\n        maxHeight: '220px',\n        // overflow: 'scroll'\n        textAlign: 'center'\n    },\n    bold: {\n        fontWeight: 800\n    },\n    tableCenter: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n    },\n    dark: {\n        background: \"#333\",\n        color: \"#fff\",\n        fontWeight: 800\n    },\n    search:{\n        color:'#fff',\n        // paddingLeft: '10px',\n        background: '#222',\n        borderRadius : '3px',\n        width: \"50%\"\n    }\n});\n\n\n\nclass FollowingTable extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            page: 0,\n            rowsPerPage: 5,\n            searchValue : '',\n            following: [],\n            followingRaw: []\n        }\n\n        this.handleChangePage = this.handleChangePage.bind(this);\n        this.handleChangeRowsPerPage = this.handleChangeRowsPerPage.bind(this);\n\n    }\n    handleChangePage = (event, newPage) => {\n        this.setState({ page: newPage });\n    };\n\n    handleChangeRowsPerPage = event => {\n        this.setState({ rowsPerPage: event.target.value });\n    };\n\n\n    handleSearch = event => {\n        // console.log(event.target.value);\n        this.setState({ searchValue: event.target.value });\n        if(event.target.value===''){\n            this.setState({following: this.state.followingRaw});\n        }\n        else{\n            let tempFollow = this.state.followingRaw.filter(d=>d.includes(event.target.value));\n            this.setState({following: tempFollow});\n        }\n    };\n\n    componentWillReceiveProps({ following }) {\n        // console.log(following);\n        this.setState({following:following, followingRaw:following});\n    }\n\n    render() {\n        const { classes, following, name, initText } = this.props;\n        // console.log(this.state);\n     \n        \n        return (\n            <Paper elevation={0}>\n                <TableContainer className={classes.root}>\n                    <Table stickyHeader aria-label=\"simple table\" size=\"small\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell className={classes.dark}  style={{borderRadius: \"5px\"}}>\n                                <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\n                                <Typography>{name}</Typography>\n                                    \n                                    <TextField id=\"standard-basic\" variant=\"outlined\" size=\"small\" label=\"Search\" className = {classes.search}\n                                    InputLabelProps={{style:{ color: \"#fff\", paddingLeft:\"10px\"}}} \n                                    InputProps={{style:{ color: \"#fff\"}}}\n                                    value={this.state.searchValue}\n                                    onChange={this.handleSearch}\n                                    />\n                                \n                                </Grid>\n                                    \n                                </TableCell>\n\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {(this.state.following.length === 0 ?\n                                <TableRow><TableCell align=\"center\" component=\"th\" scope=\"row\">\n                                    <Typography>{initText}</Typography>\n                                </TableCell>\n                                </TableRow>\n                                :\n                                (this.state.following.slice(this.state.page * this.state.rowsPerPage, (this.state.page + 1) * this.state.rowsPerPage).map(row => (\n                                    <TableRow key={row}>\n\n                                        <TableCell align=\"center\" component=\"th\" scope=\"row\">\n                                            <Link color=\"inherit\" href={\"/?user=\" + row}>{row}</Link>\n                                        </TableCell>\n                                    </TableRow>\n                                ))))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[5]}\n                    component=\"div\"\n                    count={this.state.following.length}\n                    rowsPerPage={this.state.rowsPerPage}\n                    page={this.state.page}\n                    onChangePage={this.handleChangePage}\n                    onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                // labelRowsPerPage=\"Rows/Page\"\n                />\n            </Paper>\n\n        )\n    }\n}\n\nexport default withStyles(styles)(FollowingTable);\n","import React from 'react';\n// import LockIcon from '@material-ui/icons/Lock';\n// import LockOpenIcon from '@material-ui/icons/LockOpen';\nimport { withStyles } from '@material-ui/core/styles';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n// import EmojiObjectsOutlinedIcon from '@material-ui/icons/EmojiObjectsOutlined';\n\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport WorkIcon from '@material-ui/icons/Work';\nimport FitnessCenterIcon from '@material-ui/icons/FitnessCenter';\n// import MenuBookIcon from '@material-ui/icons/MenuBook';\nimport EditIcon from '@material-ui/icons/Edit';\n// import FlightTakeoffIcon from '@material-ui/icons/FlightTakeoff';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport TrendingUpIcon from '@material-ui/icons/TrendingUp';\nimport PaletteIcon from '@material-ui/icons/Palette';\nimport AddIcon from '@material-ui/icons/Add';\nimport PrintIcon from '@material-ui/icons/Print';\nimport SpeedIcon from '@material-ui/icons/Speed';\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\nimport FiberManualRecordOutlinedIcon from '@material-ui/icons/FiberManualRecordOutlined';\n\nimport {\n    Paper, Grid, Typography, ListItem, Button,\n    ExpansionPanel, ExpansionPanelDetails, ExpansionPanelSummary, Box, Breadcrumbs, Chip,\n    List, ListItemAvatar, Avatar, ListItemText, Fab, Divider, Switch\n} from '@material-ui/core';\n\nimport jsPDF from 'jspdf';\n\nimport { textAlign } from '@material-ui/system';\n\n\nconst styles = theme => ({\n    root: {\n        background: '#fff',\n        padding: '12px'\n    },\n    bold: {\n        fontWeight: 800,\n    },\n    tableCenter: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n    },\n    heading: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"flex-start\",\n        flexDirection: 'column'\n    },\n    col: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        flexDirection: \"row\",\n        width: '100%'\n    },\n    row: {\n        display: \"flex\",\n        // padding: \"10px\",\n        flexDirection: \"column\",\n        alignItems: 'flex-start'\n    },\n    brumb: {\n        padding: 20,\n    },\n    bound: {\n        // borderRadius: \"5px\",\n        // border: \"1px solid #aaa\",\n        // padding: \"10px\"\n    },\n    goal: {\n        fontWeight: 800,\n        fontSize: 15\n    },\n    goalMetric: {\n        fontSize: 10\n    },\n    description: {\n        paddingBottom: \"10px\",\n        textAlign: 'left'\n    },\n    descriptionPFM:{\n        paddingBottom: \"10px\",\n        textAlign: 'left',\n        borderLeft: \"5px #c0392b solid\",\n        paddingLeft: \"20px\",\n        \n    },\n    darkBackground: {\n        background: \"#333\"\n    },\n    dark: {\n        background: \"#333\",\n        color: '#fff'\n    },\n    edit: {\n        background: \"#333\",\n        color: '#fff',\n        boxShadow: \"none\",\n        \"&:hover\": {\n            color: \"#333\",\n            background: '#fff'\n        },\n    },\n    followBox: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flexDirection: \"column\"\n    },\n    homeAdd: {\n        margin: \"50px\"\n    },\n    kr: {\n        borderLeft: \"5px #000 solid\",\n        paddingLeft: \"20px\",\n        marginBottom: \"10px\"\n    },\n    bubbles:{\n        flex:0,\n        paddingRight: \"10px\",\n        paddingTop: \"10px\",\n        cursor: 'pointer'\n    },\n    progressGrid:{\n        height: \"5px\",\n        borderRadius: \"5px\"\n    }\n});\n\n\n\nclass Okrs extends React.Component {\n\n    constructor(props) {\n        super(props);\n        const chipColor = '#eee';\n        const chipTextColor = '#000';\n\n\n        this.state = {\n            chips: {\n\n                relationships: <Chip\n                    style={{ background: chipColor, color: chipTextColor }}\n                    // variant=\"outlined\"\n                    size=\"small\"\n                    icon={<FavoriteIcon style={{ color: chipTextColor }} />}\n                    label=\"Relationships\"\n                />,\n                fitness: <Chip\n                    size=\"small\"\n                    // variant=\"outlined\"\n                    style={{ background: chipColor, color: chipTextColor }}\n                    icon={<FitnessCenterIcon style={{ color: chipTextColor }} />}\n                    label=\"Fitness\"\n                />,\n                work:\n                    <Chip\n                        style={{ background: chipColor, color: chipTextColor }}\n                        size=\"small\"\n                        // variant=\"outlined\"\n                        icon={<WorkIcon style={{ color: chipTextColor }} />}\n                        label=\"Work\"\n                    />,\n                creative:\n                    <Chip\n                        size=\"small\"\n                        // variant=\"outlined\"\n                        style={{ background: chipColor, color: chipTextColor }}\n                        icon={<PaletteIcon style={{ color: chipTextColor }} />}\n                        label=\"Creative\"\n                    />,\n                other:\n                    <Chip\n                        size=\"small\"\n                        // variant=\"outlined\"\n                        style={{ background: chipColor, color: chipTextColor }}\n                        icon={<SettingsIcon style={{ color: chipTextColor }} />}\n                        label=\"Other\"\n                    />\n            }\n\n\n        }\n        this.printOKR = this.printOKR.bind(this);\n        this.findWeeksinQuarter = this.findWeeksinQuarter.bind(this);\n        // this.updateProgressBubble = this.updateProgressBubble.bind(this);\n\n\n    }\n\n\n    printOKR = (okrs, user) => {\n        // console.log(\"print\");\n        var doc = new jsPDF({\n            orientation: 'landscape'\n        });\n\n\n\n        const width = 297\n        const height = 210\n        const paddingHorizontal = 20\n        const paddingVertical = 20\n        const gutter = 2\n        const columnPad = 3\n\n\n        const columnWidth = (width - 2 * paddingHorizontal - (okrs.length - 1) * gutter) / okrs.length;\n        const columnHeight = height - 2 * paddingVertical;\n\n        function x(val) {\n            return val + paddingHorizontal\n        }\n        function y(val) {\n            return val + paddingVertical\n        }\n\n        // console.log(columnWidth, columnHeight, doc.getFontList())\n\n        doc.setFont('helvetica')\n        doc.setFontSize(70)\n        doc.text(parseInt(width / 2), y(0), 'okru', { align: 'center' })\n        doc.setTextColor('#999')\n        doc.setFontSize(15)\n        doc.setFont('courier')\n        doc.text(parseInt(width / 2), y(10), user + '/2020/Q1', { align: 'center' })\n        doc.setFont('helvetica')\n        doc.setTextColor('#000')\n\n        doc.setFontStyle('bold')\n        doc.setFontSize(10)\n        doc.text(17, y(60), 'OBJECTIVES', { rotationDirection: 1, angle: 90, charSpace: 2 })\n        doc.text(17, y(140), 'KEY RESULTS', { rotationDirection: 1, angle: 90, charSpace: 2 })\n        doc.setDrawColor('#aaa')\n        doc.setFontSize(7)\n        doc.setFont('courier')\n        doc.text(width - 80, height - 2, ('https://okru.app/?user=' + user), { charSpace: 0 })\n\n\n        okrs.forEach((okr, i) => {\n            let line = 25\n            let step = 5\n\n            doc.setTextColor('#fff')\n            doc.setFont('helvetica')\n            doc.setDrawColor('#000')\n            doc.setFontSize(15)\n            doc.roundedRect(x(i * (columnWidth + gutter)), y(15), columnWidth, columnHeight, 3, 3, 'S')\n            doc.setFillColor('#333')\n            doc.roundedRect(x(i * (columnWidth + gutter)), y(15), columnWidth, 50, 3, 3, 'F')\n            doc.setFontStyle('bold')\n            var splitTitle = doc.splitTextToSize(okr.title, columnWidth - 2 * columnPad);\n            for (var j = 0; j < splitTitle.length; j++) {\n\n                doc.text(x(i * (columnWidth + gutter) + columnWidth / 2), y(line), splitTitle[j], { align: 'center', charSpace: 0 });\n                line = line + step\n            }\n            doc.setFontStyle('normal')\n            doc.setFontSize(10)\n            var splitTitle = doc.splitTextToSize(okr.description, columnWidth - 2 * columnPad);\n            for (var j = 0; j < splitTitle.length; j++) {\n\n                doc.text(x(i * (columnWidth + gutter) + columnWidth / 2), y(line), splitTitle[j], { align: 'center', charSpace: 0 });\n                line = line + step\n            }\n            line = 75;\n            doc.setTextColor('#000')\n            okr.keyResults.forEach((kr) => {\n                var splitTitle = doc.splitTextToSize((kr.result + ' [System Metric : ' + kr.metric + '] '), columnWidth - 2 * columnPad);\n                for (var j = 0; j < splitTitle.length; j++) {\n\n                    doc.text(x(i * (columnWidth + gutter) + columnWidth / 2), y(line), splitTitle[j], { align: 'center', charSpace: 0 });\n                    line = line + step\n                }\n                doc.setDrawColor('#aaa')\n                doc.line(x(i * (columnWidth + gutter) + columnPad), y(line), x(i * (columnWidth + gutter) + columnWidth - columnPad), y(line), 'F')\n                line = line + 8;\n            });\n            var splitTitle = doc.splitTextToSize(('Possible Failure Mode : ' + okr.failureMode), columnWidth - 2 * columnPad);\n            for (var j = 0; j < splitTitle.length; j++) {\n\n                doc.text(x(i * (columnWidth + gutter) + columnWidth / 2), y(line), splitTitle[j], { align: 'center', charSpace: 0 });\n                line = line + step\n            }\n\n\n\n        })\n\n        // Save the Data\n        doc.save('okru.pdf')\n\n        // var string = doc.output('datauristring');\n        // var iframe = \"<iframe width='100%' height='100%' src='\" + string + \"'></iframe>\"\n        // var x = window.open();\n        // x.document.open();\n        // x.document.write(iframe);\n        // x.document.close();\n\n\n\n\n\n    }\n\n\n    findWeeksinQuarter = (q,y) =>{\n        let jan1 = new Date(y,0,1)\n        let d1,d2;\n        if (q==='Q1'){\n            d1 = new Date(y,0,1)\n            d2 = new Date(y,2,31)\n        }\n        else if (q==='Q2'){\n            d1 = new Date(y,3,1)\n            d2 = new Date(y,5,30)\n        }\n        else if (q==='Q3'){\n            d1 = new Date(y,6,1)\n            d2 = new Date(y,8,30)\n        }\n        else if (q==='Q4'){\n            d1 = new Date(y,9,1)\n            d2 = new Date(y,11,31)\n        }\n\n        let w1 = Math.ceil(((d1 - jan1 + 86400000)/86400000)/7);\n        let w2 = Math.ceil(((d2 - jan1 + 86400000)/86400000)/7)\n\n        return (w2-w1+1);\n        \n    }\n\n\n    findWidth = (okr,id) => {\n        let idCounts = [0,0,0,0];\n\n        okr.keyResults.map(d=>{\n            d.progress.map(f=>{\n                idCounts[f]+=1;\n            })\n        })\n\n        \n        return idCounts[id]*200/idCounts.reduce((a, v) => a + v);\n\n    }\n\n\n    render() {\n        const { classes, okrList, handleOpenDialog, selfView, isSignedIn, userBeingViewed, isFollowing, handleFollow, quarter, year, updateProgress } = this.props;\n        // console.log('in okr component',okrList);\n        // this.setState({okrList});\n        const followText = (isFollowing ? <Typography variant=\"caption\">Unfollow</Typography>\n            : <Typography variant=\"caption\">Follow</Typography>)\n\n        // let weeks = new Array(this.findWeeksinQuarter(quarter,year)).fill(-1);\n        \n        // console.log(weeks);\n        \n\n\n        return (\n            <Paper className={classes.root} elevation={0}>\n                <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\n                    <Breadcrumbs className={classes.brumb} aria-label=\"breadcrumb\">\n                        <Typography color=\"inherit\">OKRs</Typography>\n                        <Typography color=\"inherit\">{userBeingViewed}</Typography>\n                        <Typography color=\"inherit\">{year}</Typography>\n                        <Typography color=\"textPrimary\">{quarter}</Typography>\n                    </Breadcrumbs>\n\n                    {selfView && isSignedIn ?\n\n                        <Fab color=\"primary\" aria-label=\"add\" size=\"small\" className={classes.edit} onClick={() => this.printOKR(okrList, userBeingViewed)}>\n                            <PrintIcon fontSize=\"small\" />\n                        </Fab>\n                        : (isSignedIn ? <Box className={classes.followBox}><Switch\n                            checked={isFollowing}\n                            onChange={handleFollow}\n                            value=\"follow\"\n                            color=\"primary\"\n                            inputProps={{ 'aria-label': 'default checkbox' }}\n\n\n                        />{followText}</Box> : '')}\n\n                </Grid>\n                {okrList.length > 0 ? (okrList.map((okr,k) => (<ExpansionPanel key={okr.id} elevation={0}>\n                    <ExpansionPanelSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls={\"panel-\" + okr.id + \"-content\"}\n                        id={\"panel-\" + okr.id + \"-header\"}\n                    >\n                        <Box className={classes.col}>\n                            <Box className={classes.heading}>\n                                {/* <EmojiObjectsOutlinedIcon fontSize=\"large\" /> */}\n                                <Grid container direction=\"row\">\n                                    <Typography className={classes.bold}>{okr.title}</Typography>\n                                    <Grid container direction=\"row\">\n                                        \n                                        <Grid className={classes.progressGrid} style={{background:\"#c0392b\",width:this.findWidth(okr,1)}}></Grid>\n                                        <Grid className={classes.progressGrid} style={{background:\"#f1c40f\",width:this.findWidth(okr,2)}}></Grid>\n                                        <Grid className={classes.progressGrid} style={{background:\"#27ae60\",width:this.findWidth(okr,3)}}></Grid>\n                                        <Grid className={classes.progressGrid} style={{background:\"#bdc3c7\",width:this.findWidth(okr,0)}}></Grid>\n                                                \n                                    </Grid>\n                                </Grid>\n                                <Typography variant=\"body2\" className={classes.description}>\n                                    {okr.description}\n                                </Typography>\n                            </Box>\n                            <Box className={classes.bound}>\n                                {this.state.chips[okr.category]}\n\n                            </Box>\n\n\n                        </Box>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails className={classes.row}>\n\n                        <List>\n\n                            {okr.keyResults.map((kr, i) => (\n                                <ListItem key={i} className={classes.kr}>\n                                    {/* <ListItemAvatar>\n                                        <Avatar variant=\"rounded\" className={classes.darkBackground}>\n                                            <TrendingUpIcon />\n                                        </Avatar>\n                                    </ListItemAvatar> \n\n                                    <ListItemText primary={kr.result} secondary={\"System Metric : \" + kr.metric} className={classes.kr}/>\n                                    */}\n                                    <Grid container direction=\"column\" justify=\"center\" alignItems=\"flex-start\">\n                                    <Typography>{kr.result}</Typography>\n                                    <Chip\n                                        icon={<SpeedIcon />}\n                                        label={<Typography variant=\"caption\">System Metric : <Typography variant=\"button\">{kr.metric}</Typography></Typography>}                                   \n                                        size=\"small\"\n                                        color=\"default\"\n                                        // variant=\"outlined\"\n                                    />\n                                    <Grid container direction=\"row\">\n                                        {   \n                                            kr.progress.map((d,j)=>{\n                                                let weekLabel = <Typography variant=\"caption\">{'W'+(j+1)}</Typography>;\n                                                let circleColor;\n                                                if(d===0) circleColor = \"#bdc3c7\";\n                                                else if(d===1)  circleColor =  \"#c0392b\";\n                                                else if(d===2)  circleColor =  \"#f1c40f\";\n                                                else  circleColor =  \"#27ae60\";\n                                                let circle = <FiberManualRecordIcon \n                                                onClick={()=>updateProgress(k,i,j)} \n                                                fontSize=\"small\"  key={k*100 + i * 10 + j} style={{color:circleColor}}/>\n                                                return (\n                                                    <Grid container direction=\"column\"  key={k*100 + i * 10 + j} className={classes.bubbles} alignItems=\"center\">\n                                                        \n                                                        {circle}\n                                                        {weekLabel}\n                                                    </Grid>\n                                                )\n                                            })\n                                        }\n                                    </Grid>\n\n                                    </Grid>\n                                    \n                                    \n                                </ListItem>\n                            ))}\n                        </List>\n                        \n                        {/* <Grid container direction=\"row\">\n                            <Chip\n                                        label={<Typography variant=\"overline\">Possible Failure Mode</Typography>}                                   \n                                        size=\"small\"\n                                        color=\"secondary\"\n                                        // variant=\"outlined\"\n                                    /> */}\n                        <Typography variant=\"body2\" className={classes.descriptionPFM}>\n                        <b>Possible Failure Mode : </b>\n                        {okr.failureMode}\n                        </Typography>\n                        {/* </Grid> */}\n                        <Grid container direction=\"row\" justify=\"flex-end\" style={{ width: '100%', display: \"flex\" }}>\n                            {selfView && isSignedIn ? <Fab size=\"small\" color=\"primary\" aria-label=\"add\" className={classes.edit}\n                                onClick={() => handleOpenDialog(okr.id)}>\n                                <EditIcon fontSize=\"small\" />\n                            </Fab> : ''}\n\n                            <Divider style={{ marginTop: \"20px\", width: \"100%\" }} />\n                        </Grid>\n\n\n\n                    </ExpansionPanelDetails>\n                </ExpansionPanel>))) :\n                    <Typography>No OKRs yet!</Typography>\n                }\n                {selfView && isSignedIn ? <Grid container direction=\"column\" alignItems=\"center\" justify=\"center\" className={classes.homeAdd}>\n                    <Fab color=\"primary\" aria-label=\"add\" className={classes.edit} onClick={() => handleOpenDialog(null)}>\n\n                        <AddIcon />\n                    </Fab>\n                    <Typography variant=\"caption\">Add New OKR</Typography>\n                </Grid> : ''}\n            </Paper>\n\n        )\n    }\n}\n\nexport default withStyles(styles)(Okrs);\n","import firebase from 'firebase'\n\nconst config = {\n    apiKey: \"AIzaSyAHL0vbcWUxeE542F-ROGxw-4IG2OLM9EM\",\n    authDomain: \"okru-4036a.firebaseapp.com\",\n    databaseURL: \"https://okru-4036a.firebaseio.com\",\n    projectId: \"okru-4036a\",\n    storageBucket: \"okru-4036a.appspot.com\",\n    messagingSenderId: \"323122678619\",\n    appId: \"1:323122678619:web:f0624f8e6e26013509287e\",\n    measurementId: \"G-LGV47H0SJQ\"\n};\n\nfirebase.initializeApp(config);\nfirebase.analytics();\nexport default firebase;","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport {\n    Paper, Typography, Link, TextField, Grid, Breadcrumbs\n} from '@material-ui/core';\n\nimport { Sector, PieChart, Pie, Label } from 'recharts';\n\nconst styles = theme => ({\n    pomInProgress:{\n        width:'100px',\n        height:'100px',\n        borderRadius:'50px',\n        background: '#c0392b'\n\n    },\n    pomNotInProgress:{\n        width:'100px',\n        height:'100px',\n        borderRadius:'50px',\n        background: '#eee'\n\n    },\n    main:{\n        fontSize:'60px',\n        fontWeight:'500',\n        fill: '#333'\n    },\n    sub:{\n        fontSize:'10px',\n        transform: 'translate(0px,30px)',\n        fill: '#333'\n    },\n    sub3:{\n        fontSize:'10px',\n        transform: 'translate(0px,-30px)',\n        fill: '#333'\n    },\n    sub2:{\n        fontSize:'10px',\n        fill: '#333'\n    }\n});\n\n\n\nclass PomCircle extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            following: [],\n        }\n    }\n  \n\n    componentWillReceiveProps({ following }) {\n        // console.log(following);\n        this.setState({following:following});\n    }\n\n    render() {\n        const { classes, time, status } = this.props;\n\n        const angle = (time/25) * 360 + 180;\n\n        // const circle = (\n        //     time>0 ? \n        //     <Paper elevation={0} className={classes.pomInProgress}>\n\n        //     </Paper>\n        //     :\n        //     <Paper  elevation={0} className={classes.pomNotInProgress}></Paper>\n        // )\n\n        \n\n        const circle = (\n            time>0 ? \n            <PieChart width={200} height={160}>\n                \n                <Pie  \n                cx={100} cy={80} outerRadius={70} innerRadius={60} \n                startAngle={180} endAngle={angle} fill=\"#c0392b\" cornerRadius={5}\n                dataKey=\"value\" data={[{ name: 'time', value: time}]}>\n                {status=='inprogress'?(\n                    <Label value=\"In Progress\" position=\"center\" className={classes.sub3}/>\n                ):(\n                    <Label value=\"Paused\" position=\"center\" className={classes.sub3}/>\n                )}\n                <Label value={time} position=\"center\" className={classes.main}/>\n                <Label value=\"Mins Remaining\" position=\"center\" className={classes.sub}/>\n                </Pie>\n            </PieChart>\n            \n            \n            :\n            \n            <PieChart width={200} height={160}>\n                <Pie  \n                cx={100} cy={80} outerRadius={70} innerRadius={60} \n                startAngle={0} endAngle={400} fill=\"#eee\" cornerRadius={5}\n                dataKey=\"value\" data={[{ name: 'time', value: 10}]}\n                >\n                <Label value=\"Not Pomming\" position=\"center\" className={classes.sub2}/>\n                </Pie>\n                \n            </PieChart>\n        )\n\n\n     \n        \n        return (\n            <Paper elevation={0}>\n                {circle}\n            </Paper>\n        )\n    }\n}\n\nexport default withStyles(styles)(PomCircle);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport {\n    TextField\n} from '@material-ui/core';\n\n\nconst styles = theme => ({\n    root: {\n        position: \"absolute\",\n        right: \"5px\",\n        bottom: \"5px\",\n        margin: \"0px !important\"\n    },\n\n});\n\n\n\nclass TextFieldCharCount extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentCount : 0\n        }\n\n        this.handleUpdateText = this.handleUpdateText.bind(this);\n\n    }\n\n    handleUpdateText = event => {\n        this.setState({ currentCount: event.target.value.length });\n        this.props.onChange(event)\n    }\n\n    componentWillReceiveProps({ value }) {\n        this.setState({ currentCount : value.length })\n    }\n\n    componentDidMount() {\n        this.setState({ currentCount : this.props.value.length })\n    }\n\n    render() {\n        const { classes} = this.props;\n        // console.log(this.state);\n\n\n        return (\n            <TextField\n                required={this.props.required}\n                id={this.props.id}\n                label={this.props.label}\n                onChange={this.handleUpdateText}\n                value={this.props.value}\n                variant={this.props.variant}\n                fullWidth={this.props.fullWidth}\n                inputProps={this.props.inputProps}\n                multiline={this.props.multiline}\n                rows={this.props.rows}\n                className={this.props.className}\n                helperText={this.state.currentCount+'/'+this.props.inputProps.maxLength}\n                FormHelperTextProps = {(this.state.currentCount/this.props.inputProps.maxLength)<0.8?\n                    {className:classes.root}\n                    :\n                    {className:classes.root, error:true}\n                }                            \n            />\n        )\n    }\n}\n\nexport default withStyles(styles)(TextFieldCharCount);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport {\n    Paper, Typography, Link, TextField, Grid, Breadcrumbs, Chip, Fab, IconButton\n} from '@material-ui/core';\n\nimport PomCircle from './pomcircle';\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\nimport NotesIcon from '@material-ui/icons/Notes';\nimport SubjectIcon from '@material-ui/icons/Subject';\nimport ChatIcon from '@material-ui/icons/Chat';\nimport EditIcon from '@material-ui/icons/Edit';\nimport CommentIcon from '@material-ui/icons/Comment';\nimport FormatQuoteIcon from '@material-ui/icons/FormatQuote';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport SaveIcon from '@material-ui/icons/Save';\n\nimport TextFieldCharCount from './textfieldcharcount';\n\nconst styles = theme => ({\n    pomcards: {\n        border: '1px #eee solid',\n        margin: '2px',\n        borderRadius: '5px',\n    },\n    pomColor: {\n        color: '#c0392b'\n    },\n    outline: {\n        border: '2px #c0392b solid',\n    },\n    txt: {\n        display: 'flex',\n        alignItems: 'center',\n        borderTop: '1px solid #eee',\n        margin: '5px',\n        padding: '1px'\n    },\n    edit: {\n        border: \"2px solid #c0392b\",\n        color: '#c0392b',\n        background: '#fff',\n        boxShadow: \"none\",\n        \"&:hover\": {\n            border: \"2px solid #fff\",\n            background: '#fff',\n        \n        },\n    },\n});\n\n\n\nclass PomCard extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            textEdit: false,\n            text: props.pomData.text,\n            status: props.pomData.status\n        }\n    }\n\n\n    componentWillReceiveProps({ pomData}) {\n        // console.log(following);\n        // const pommerStats = {\n        //     time: 15,\n        //     poms: 4,\n        //     status: 'inprogress',\n        //     text: \"I'm working on adding copoms to okru\"\n        // }\n        this.setState({text: pomData.text, status:pomData.status})\n\n    }\n\n    // componentDidUpdate({pomData}){\n    //     this.setState({text: pomData.text, status:pomData.status});\n    // }\n\n    render() {\n        const { classes, pomData, startPom, pausePom, textPom, resumePom } = this.props;\n\n        // this.setState({text: pomData.text, status:pomData.status});\n        const pomArray = new Array(pomData.poms).fill(0);\n\n\n        return (\n            <Grid md={3} item container className={`${classes.pomcards} ${pomData.self ? classes.outline : \"\"}`} \n            direction=\"column\" justify=\"space-around\" alignItems=\"center\">\n\n                <Typography variant='overline'>{pomData.pommer}</Typography>\n\n                {\n                    pomData.poms > 0 ? (\n                        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n                            <Typography variant=\"subtitle2\">Today : </Typography>\n                            {pomArray.map((f, j) => (<FiberManualRecordIcon key={j} className={classes.pomColor} />))}\n                        </Grid>\n                    ) : (\n                            <Typography variant='caption'>No Poms Today!</Typography>\n                        )\n                }\n\n                <PomCircle time={pomData.time} status={this.state.status}></PomCircle>\n\n\n\n                {pomData.self?\n                    <Grid container direction=\"row\" justify=\"space-evenly\">\n                        {this.state.status==='inprogress'?\n                        (\n                        !this.state.textEdit?\n                            (<Fab size=\"small\" color=\"primary\" aria-label=\"add\" className={classes.edit}\n                            onClick={()=>this.setState({textEdit:true})}\n                            >\n                                <EditIcon fontSize=\"small\" />\n                            </Fab>):\n                            (\n                            <Fab size=\"small\" color=\"primary\" aria-label=\"add\" className={classes.edit}\n                            onClick={()=>{\n                                textPom(this.state.text);\n                                this.setState({textEdit:false})\n                                }\n                            }\n                            >\n                                <SaveIcon fontSize=\"small\" />\n                            </Fab>\n                            )\n                        ):('')\n                        }\n                    \n                        {   \n                            this.state.status==='inprogress'?\n                            (<Fab size=\"small\" color=\"primary\" aria-label=\"add\" className={classes.edit}\n                            onClick={()=>{\n                                pausePom();\n                                this.setState({status:'pause'})\n                                }\n                            }\n                            >\n                                <PauseIcon fontSize=\"small\" />\n                            </Fab>):(<Fab size=\"small\" color=\"primary\" aria-label=\"add\" className={classes.edit}\n                            onClick={()=>{\n                                if(pomData.time===0){\n                                    startPom();\n                                }\n                                else{\n                                    resumePom();\n                                }\n                                this.setState({status:'inprogress'})\n                                }\n                            }\n                            >\n                                <PlayArrowIcon fontSize=\"small\" />\n                            </Fab>)\n                        }\n                    </Grid>:''\n                }\n                    \n                \n                {\n                    pomData.time>0?(\n                    this.state.textEdit?\n                    (\n                        <TextFieldCharCount\n                                    required\n                                    id=\"outlined-required\"\n                                    label=\"Task\"\n                                    onChange={(e)=>this.setState({text:e.target.value})}\n                                    value={this.state.text}\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    inputProps={{\n                                        maxLength: 100,\n                                    }}\n                                />\n                    ):(\n                        <Typography variant='body2' className={classes.txt}>\n                    \n                            <FormatQuoteIcon style={{ color: '#555', transform: 'scale(-1, -1)' }}></FormatQuoteIcon>\n                            {this.state.text}\n                            <FormatQuoteIcon style={{ color: '#555' }}></FormatQuoteIcon>\n\n                        </Typography>\n                    )\n                    ):('')\n                }\n                \n            </Grid>\n        )\n    }\n}\n\nexport default withStyles(styles)(PomCard);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport {\n    Paper, Typography, Table, TableBody, TableCell, TableContainer, TableHead, TableRow,\n    TablePagination, Link, TextField, Grid, Breadcrumbs\n} from '@material-ui/core';\n\nimport firebase from '../firebase';\nimport PomCard from './pomcard';\n\nconst styles = theme => ({\n    brumb: {\n        padding: 20,\n        borderRadius: 0,\n        // borderBottom: '1px #eee solid'\n    },\n    pomcards: {\n        padding: '10px',\n        minHeight: '200px',\n        minWidth: '200px',\n        border: '1px #eee solid',\n        margin: '2px',\n        borderRadius: '5px'\n\n    }\n});\n\n\n\nclass CoPom extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        props.following.push(props.user.userID)\n        this.state = {\n            user: props.user,\n            poms: [],\n            following: props.following,\n            selfPomCount: 0\n        }\n\n\n        this.startPom = this.startPom.bind(this);\n        this.pausePom = this.pausePom.bind(this);\n        this.resumePom = this.resumePom.bind(this);\n        this.textPom = this.textPom.bind(this);\n        this.refreshAllPoms = this.refreshAllPoms.bind(this);\n\n\n\n    }\n\n\n    componentWillReceiveProps({ user, following, poms }) {\n\n        following.push(user.userID);\n        this.setState({ user, following });\n        this.refreshAllPoms(following, user);\n\n    }\n\n    componentWillUnmount(){\n        clearInterval(this.inter);\n    }\n\n    componentDidMount() {\n        this._isMounted = true;\n        if (process.env.NODE_ENV !== 'production') {\n            this.deployment = 'dev';\n        }\n        else {\n            this.deployment = 'prod';\n        }\n\n        this.refreshAllPoms(this.state.following, this.state.user);\n        \n    }\n\n    componentWillMount(){\n        // this.refreshAllPoms(this.state.following, this.state.user);\n        this.inter = setInterval(()=>{     \n            this.refreshAllPoms(this.state.following, this.state.user)\n            console.log('poms refreshed!',this.state)\n        },60000);\n    }\n\n    \n    refreshAllPoms(following, user) {\n        // Get all poms and remap to the nameids\n        const pomProcessed = {}\n        firebase.database().ref(this.deployment + '/userlist/all').once('value', (d) => {\n            const dd = d.val();\n\n            const queryDate = new Date().toLocaleDateString().replace(/\\//g, '-');\n\n            firebase.database().ref(this.deployment + '/poms').child(queryDate)\n                .once('value', (snapshot) => {\n                    const pomIds = snapshot.val();\n\n                    if (pomIds !== null) {\n\n                        for (var key in pomIds) {\n                            pomProcessed[dd[key]] = pomIds[key]\n                        }\n\n                        const filteredPoms = []\n                        // following.push(user.userID);\n\n                        let selfPresent = false;\n                        let selfPomCount, latestPomStatus, latestPomModified, latestPomElapsed, latestPomStart, latestPomText;\n\n                        following.map(d => {\n                            if (pomProcessed[d]) {\n                                let curPoms = pomProcessed[d];\n                                //Check if the last one is active\n                                let pomLength = curPoms.length;\n                                let latestPom = curPoms[pomLength - 1];\n                                let elapsed;\n                                if (latestPom.status==='pause'){\n                                    elapsed = (latestPom.elapsed / 60000)\n                                }\n                                else{\n                                    elapsed = (((new Date().getTime() - latestPom.modifiedUTC) / 60000) + (latestPom.elapsed / 60000))\n                                }\n                                if (user.userID === d) {\n\n                                    selfPresent = true;\n                                    selfPomCount = pomLength;\n                                    latestPomStatus = latestPom.status;\n                                    latestPomModified = latestPom.modifiedUTC;\n                                    latestPomElapsed = latestPom.elapsed;\n                                    latestPomStart = latestPom.startUTC;\n                                    latestPomText = latestPom.text;\n                                }\n                                if (elapsed >= 25) {\n                                    filteredPoms.push({\n                                        pommer: d,\n                                        time: 0,\n                                        status: '',\n                                        text: '',\n                                        poms: pomLength,\n                                        self: (user.userID === d)\n                                    })\n                                }\n                                else {\n                                    filteredPoms.push({\n                                        pommer: d,\n                                        time: 25 - parseInt(elapsed),\n                                        status: latestPom.status,\n                                        text: latestPom.text,\n                                        poms: pomLength - 1,\n                                        self: (user.userID === d)\n                                    })\n                                }\n                            }\n                            else {\n                                filteredPoms.push({\n                                    pommer: d,\n                                    time: 0,\n                                    status: '',\n                                    text: '',\n                                    poms: 0,\n                                    self: (user.userID === d)\n                                })\n                            }\n\n                        })\n\n                        if (selfPresent) {\n                            this.setState({\n                                poms: filteredPoms,\n                                selfPomCount, latestPomElapsed, latestPomModified, latestPomStart, latestPomStatus, latestPomText\n                            });\n                        }\n                        else {\n                            this.setState({\n                                poms: filteredPoms,\n                                selfPomCount:0\n                            });\n                        }\n\n\n                    }\n                })\n        })\n\n\n\n    }\n\n    startPom() {\n        \n        const queryDate = new Date().toLocaleDateString().replace(/\\//g, '-');\n        const utc = new Date().getTime();\n\n        firebase.database().ref(this.deployment + '/poms').child(queryDate).child(this.state.user.uid)\n            .child(this.state.selfPomCount).set({\n                elapsed: 0,\n                modifiedUTC: utc,\n                startUTC: utc,\n                status: \"inprogress\",\n                text: \"\"\n            });\n\n        // this.refreshAllPoms(this.state.following, this.state.user);\n\n        let newPoms = this.state.poms;\n        newPoms[newPoms.length-1] = {\n            pommer: this.state.user.userID,\n            poms: this.state.selfPomCount+1,\n            self: true,\n            status: \"inprogress\",\n            text: \"\",\n            time: 25,\n        }\n        this.setState({\n            poms:newPoms,\n            selfPomCount: this.state.selfPomCount+1, \n            latestPomElapsed : 0,\n            latestPomModified: utc,\n            latestPomStart: utc,\n            latestPomStatus: 'inprogress',\n            latestPomText : ''\n\n        })\n\n\n    }\n\n    resumePom() {\n        \n        const queryDate = new Date().toLocaleDateString().replace(/\\//g, '-');\n        const utc = new Date().getTime();\n\n\n        firebase.database().ref(this.deployment + '/poms').child(queryDate).child(this.state.user.uid)\n            .child(this.state.selfPomCount - 1).set({\n                elapsed: this.state.latestPomElapsed,\n                modifiedUTC: utc,\n                startUTC: this.state.latestPomStart,\n                status: \"inprogress\",\n                text: this.state.latestPomText\n            });\n\n        // this.refreshAllPoms(this.state.following, this.state.user);\n\n        let newPoms = this.state.poms;\n        let lePom = newPoms[newPoms.length-1]\n        newPoms[newPoms.length-1].status = \"inprogress\";\n\n        this.setState({\n            poms:newPoms,\n            latestPomModified: utc,\n            latestPomStatus: 'inprogress',\n        })\n\n    }\n\n    pausePom() {\n        \n        const queryDate = new Date().toLocaleDateString().replace(/\\//g, '-');\n        const utc = new Date().getTime();\n\n        let elapsedNew = (utc - this.state.latestPomModified) + this.state.latestPomElapsed;\n\n        firebase.database().ref(this.deployment + '/poms').child(queryDate).child(this.state.user.uid)\n            .child(this.state.selfPomCount - 1).set({\n                elapsed: elapsedNew,\n                modifiedUTC: utc,\n                startUTC: this.state.latestPomStart,\n                status: \"pause\",\n                text: this.state.latestPomText\n            });\n\n        // this.refreshAllPoms(this.state.following, this.state.user);\n\n        let newPoms = this.state.poms;\n        let lePom = newPoms[newPoms.length-1]\n        newPoms[newPoms.length-1].status = \"pause\";\n        this.setState({\n            poms:newPoms,\n            latestPomElapsed : elapsedNew,\n            latestPomModified: utc,\n            latestPomStatus: 'pause',\n        })\n\n    }\n\n    textPom(txt) {\n        \n        const queryDate = new Date().toLocaleDateString().replace(/\\//g, '-');\n\n        firebase.database().ref(this.deployment + '/poms').child(queryDate).child(this.state.user.uid)\n            .child(this.state.selfPomCount - 1).child('text').set(txt);\n\n        // this.refreshAllPoms(this.state.following, this.state.user);\n\n        let newPoms = this.state.poms;\n        let lePom = newPoms[newPoms.length-1]\n        newPoms[newPoms.length-1].text = txt;\n\n        this.setState({\n            poms:newPoms,\n            latestPomText: txt,\n        })\n\n    }\n\n\n\n    render() {\n        const { classes, following, user } = this.props;\n\n        console.log('state of poms',this.state.poms);\n\n\n\n\n        return (\n            <Paper elevation={0}>\n                <Grid container className={classes.brumb} direction=\"row\" justify=\"space-between\" alignItems=\"center\">\n                    <Breadcrumbs aria-label=\"breadcrumb\">\n                        <Typography color=\"inherit\">CoPom [{new Date().toLocaleDateString()}]</Typography>\n                    </Breadcrumbs>\n                </Grid>\n                <Grid container direction=\"row\" justify=\"center\">\n                    {\n                        this.state.poms.map((d, i) => (\n                            <PomCard pomData={d} key={i} startPom={this.startPom} pausePom={this.pausePom} textPom={this.textPom} resumePom={this.resumePom}></PomCard>\n                        ))\n                    }\n                </Grid>\n            </Paper>\n\n        )\n    }\n}\n\nexport default withStyles(styles)(CoPom);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport TrendingUpIcon from '@material-ui/icons/TrendingUp';\nimport AddIcon from '@material-ui/icons/Add';\nimport CloseIcon from '@material-ui/icons/Close';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport SaveIcon from '@material-ui/icons/Save';\n\nimport {\n    Typography, Button, Dialog, AppBar, Avatar, Fab,\n    Toolbar, IconButton, Grid, TextField, FormControl, InputLabel, Select, MenuItem\n} from '@material-ui/core';\n\nimport TextFieldCharCount from '../components/textfieldcharcount'\n\n\nconst styles = theme => ({\n    root: {\n        background: '#eaeff0',\n        padding: '12px'\n    },\n    bold: {\n        fontWeight: 800,\n        padding: \"10px\"\n    },\n    tableCenter: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n    },\n    heading: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        padding: \"10px\",\n    },\n    col: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        padding: \"10px\",\n        flexDirection: \"row\",\n        width: '100%'\n    },\n    row: {\n        display: \"flex\",\n        // padding: \"10px\",\n        flexDirection: \"column\",\n        alignItems: 'flex-start'\n    },\n    brumb: {\n        padding: 20,\n    },\n    bound: {\n        borderRadius: \"5px\",\n        border: \"1px solid #aaa\",\n        padding: \"10px\"\n    },\n    goal: {\n        fontWeight: 800,\n        fontSize: 15\n    },\n    goalMetric: {\n        fontSize: 10\n    },\n    description: {\n        paddingBottom: \"20px\"\n    },\n    fail: {\n        marginTop: \"10px\"\n    },\n    darkBackground: {\n        background: \"#333\",\n        \"&:hover\": {\n            color: \"#333\",\n            background: '#fff'\n        },\n    },\n    dark: {\n        background: \"#333\",\n    },\n    appBar: {\n        position: 'relative',\n        background: '#333'\n    },\n    toolBar: {\n        justifyContent: 'space-between'\n    },\n    form: {\n        padding: \"50px\"\n    },\n    category: {\n        background: \"#fff\",\n        padding: \"1px\",\n    },\n    formControl: {\n        width: '100%'\n    },\n    obj: {\n        paddingTop: \"30px\",\n        fontSize: \"20px\",\n        letterSpacing: \"10px\",\n        textAlign: \"center\",\n        width: \"100%\"\n    },\n    buttonify: {\n        cursor: \"pointer\"\n    }\n});\n\n\n\nclass Edit extends React.Component {\n\n    constructor(props) {\n        super(props);\n        const { showOKR } = props;\n        const objective = {\n            id: showOKR.id,\n            title: showOKR.title,\n            description: showOKR.description,\n            failureMode: showOKR.failureMode,\n            category: showOKR.category\n        }\n        const keyResults = [];\n        showOKR.keyResults.forEach((d, i) => {\n            keyResults.push({ id: i, result: d.result, metric: d.metric });\n        })\n\n\n        this.state = {\n            objective, keyResults\n        }\n\n        this.addKR = this.addKR.bind(this);\n        this.deleteKR = this.deleteKR.bind(this);\n        this.changeCategory = this.changeCategory.bind(this);\n        this.changeTitle = this.changeTitle.bind(this);\n        this.changeDescription = this.changeDescription.bind(this);\n        this.changeFailureMode = this.changeFailureMode.bind(this);\n        this.changeKRResult = this.changeKRResult.bind(this);\n        this.changeKRMetric = this.changeKRMetric.bind(this);\n    }\n\n    componentWillReceiveProps({ showOKR }) {\n        const objective = {\n            id: showOKR.id,\n            title: showOKR.title,\n            description: showOKR.description,\n            failureMode: showOKR.failureMode,\n            category: showOKR.category\n        }\n\n        const keyResults = [];\n        showOKR.keyResults.forEach((d, i) => {\n            keyResults.push({ id: i, result: d.result, metric: d.metric });\n        })\n\n\n        this.setState({ objective, keyResults })\n    }\n\n    addKR = event => {\n        this.setState(state => {\n            const newKR = state.keyResults;\n            newKR.push({ id: newKR.length, result: \"\", metric: \"\" });\n            let temp = {\n                ...state,\n                keyResults: newKR\n            }\n            return temp\n        });\n\n    };\n\n    changeCategory = event => {\n        const newCategory = event.target.value;\n        this.setState({ objective: { ...this.state.objective, category: newCategory } });\n    };\n\n    deleteKR = deleteID => {\n        const newKR = this.state.keyResults.filter((d) => (d.id !== deleteID));\n        this.setState({ keyResults: newKR });\n    };\n\n    changeTitle = event => {\n        this.setState({ objective: { ...this.state.objective, title: event.target.value } });\n    }\n    changeDescription = event => {\n        this.setState({ objective: { ...this.state.objective, description: event.target.value } });\n    }\n    changeFailureMode = event => {\n        this.setState({ objective: { ...this.state.objective, failureMode: event.target.value } });\n    }\n    changeKRResult = (event, id) => {\n        const newKR = this.state.keyResults.map((d, i) => {\n            if (d.id === id) {\n                d.result = event.target.value;\n            }\n            return d;\n        });\n        this.setState({ keyResults: newKR });\n    }\n    changeKRMetric = (event, id) => {\n        const newKR = this.state.keyResults.map((d, i) => {\n            if (d.id === id) {\n                d.metric = event.target.value;\n            }\n            return d;\n        });\n        this.setState({ keyResults: newKR });\n    }\n\n\n    render() {\n\n        const { classes, openDialog, handleCloseDialog } = this.props;\n        return (\n            <Dialog fullScreen open={openDialog} onClose={() => handleCloseDialog('old', this.state.objective, this.state.keyResults)}>\n                <AppBar className={classes.appBar}>\n                    <Toolbar className={classes.toolBar}>\n                        <IconButton edge=\"start\" color=\"inherit\" onClick={() => handleCloseDialog('old', this.state.objective, this.state.keyResults)} aria-label=\"close\">\n                            <CloseIcon />\n                        </IconButton>\n                        <Typography variant=\"h6\" className={classes.title}>\n                            Edit OKR\n            </Typography>\n                        <Button startIcon={<SaveIcon />} autoFocus color=\"inherit\" variant=\"outlined\" onClick={() => handleCloseDialog('new', this.state.objective, this.state.keyResults)}>\n                            Save\n            </Button>\n                    </Toolbar>\n                </AppBar>\n                <Grid container direction=\"row\" justify=\"center\" className={classes.form} spacing={3}>\n                    <Grid item xs={false} sm={false} md={2} lg={3} xl={3}>\n                    </Grid>\n                    <Grid container item xs={12} sm={12} md={8} lg={6} xl={6} spacing={3} justify=\"center\">\n                        <Typography variant=\"overline\" className={classes.obj}>Objective</Typography>\n\n                        <Grid item container direction=\"row\" spacing={3} alignItems=\"center\" justify=\"space-between\">\n                            <Grid item xs={8}>\n                                <TextFieldCharCount\n                                    required\n                                    id=\"outlined-required\"\n                                    label=\"Objective\"\n                                    onChange={this.changeTitle}\n                                    value={this.state.objective.title}\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    inputProps={{\n                                        maxLength: 70,\n                                    }}\n                                />\n                            </Grid>\n                            <Grid item xs={4}>\n                                <FormControl variant=\"outlined\" className={classes.formControl}>\n                                    <InputLabel id=\"demo-simple-select-outlined-label\" className={classes.category}>\n                                        Category *\n                                    </InputLabel>\n\n                                    <Select\n                                        labelId=\"demo-simple-select-outlined-label\"\n                                        id=\"demo-simple-select-outlined\"\n                                        value={this.state.objective.category}\n                                        onChange={this.changeCategory}\n\n                                    >\n                                        <MenuItem value={'relationships'}>Relationships</MenuItem>\n                                        <MenuItem value={'fitness'}>Fitness</MenuItem>\n                                        <MenuItem value={'work'}>Work</MenuItem>\n                                        <MenuItem value={'creative'}>Creative</MenuItem>\n                                        <MenuItem value={'other'}>Other</MenuItem>\n                                    </Select>\n                                </FormControl>\n                            </Grid>\n\n\n                        </Grid>\n                        <TextFieldCharCount\n                            required\n                            id=\"outlined-required-decription\"\n                            label=\"Description\"\n                            onChange={this.changeDescription}\n                            value={this.state.objective.description}\n                            variant=\"outlined\"\n                            fullWidth\n                            multiline\n                            rows={2}\n                            inputProps={{\n                                maxLength: 140,\n                            }}\n                        />\n                        <Typography variant=\"overline\" className={classes.obj}>Key Results</Typography>\n                        {\n                            this.state.keyResults.map((kr, i) => {\n                                // console.log(\"kr\",kr,i)\n                                return (\n                                    <Grid container direction=\"row\" style={{ padding: \"10px\" }} key={kr.id} alignItems=\"center\">\n                                        <Grid item container justify=\"center\" xs={1} key={i}>\n                                            <Avatar variant=\"rounded\" className={classes.dark} key={i}>\n                                                <TrendingUpIcon />\n                                            </Avatar>\n                                        </Grid>\n\n                                        <Grid item xs={7}>\n                                            <TextFieldCharCount\n                                                required\n                                                label=\"Key Result\"\n                                                onChange={(e) => this.changeKRResult(e, kr.id)}\n                                                value={kr.result}\n                                                variant=\"outlined\"\n                                                style={{ width: \"100%\" }}\n                                                fullWidth\n                                                inputProps={{\n                                                    maxLength: 140,\n                                                }}\n                                            />\n                                        </Grid>\n                                        <Grid item xs={3}>\n                                            <TextFieldCharCount\n                                                required\n                                                label=\"System Metric\"\n                                                onChange={(e) => this.changeKRMetric(e, kr.id)}\n                                                value={kr.metric}\n                                                variant=\"outlined\"\n                                                style={{ width: \"100%\" }}\n                                                inputProps={{\n                                                    maxLength: 3,\n                                                }}\n                                            />\n                                        </Grid>\n                                        <Grid container justify=\"center\" item xs={1}>\n\n                                            <CancelIcon fontSize=\"small\" onClick={() => this.deleteKR(kr.id)} className={classes.buttonify} />\n\n                                        </Grid>\n\n\n\n                                    </Grid>\n\n                                )\n                            })\n                        }\n\n                        <Grid container direction=\"column\" alignItems=\"center\" style={{ margin: \"20px\" }}>\n                            <Grid container direction=\"column\" alignItems=\"center\" justify=\"center\">\n                                <Fab color=\"primary\" aria-label=\"add\" className={classes.darkBackground}\n                                    onClick={this.addKR}\n                                >\n                                    <AddIcon />\n                                </Fab>\n                                <Typography variant=\"caption\">Add New Key Result</Typography>\n                            </Grid>\n                            <TextFieldCharCount\n                            required\n                            id=\"outlined-required-failure-mode\"\n                            label=\"Possible Failure Mode\"\n                            onChange={this.changeFailureMode}\n                            value={this.state.objective.failureMode}\n                            variant=\"outlined\"\n                            className={classes.fail}\n                            fullWidth\n                            multiline\n                            rows={2}\n                            inputProps={{\n                                maxLength: 140,\n                            }}\n                        />\n                            <Grid container direction=\"row\" justify=\"space-evenly\" style={{ paddingTop: \"50px\" }}>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    className={classes.darkBackground}\n                                    startIcon={<CloseIcon />}\n                                    onClick={() => handleCloseDialog('old', this.state.objective, this.state.keyResults)}\n                                >\n                                    Cancel\n                            </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    className={classes.darkBackground}\n                                    startIcon={<DeleteIcon />}\n                                    onClick={() => handleCloseDialog('delete', this.state.objective, this.state.keyResults)}\n                                >\n                                    Delete\n                            </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    className={classes.darkBackground}\n                                    startIcon={<SaveIcon />}\n                                    onClick={() => handleCloseDialog('new', this.state.objective, this.state.keyResults)}\n                                >\n                                    Save\n                            </Button>\n                            </Grid>\n                        </Grid>\n\n                    </Grid>\n                    <Grid item xs={false} sm={false} md={2} lg={3} xl={3}></Grid>\n\n\n                </Grid>\n\n            </Dialog>\n\n        )\n    }\n}\n\nexport default withStyles(styles)(Edit);\n","import React from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport { Grid, Typography, Menu, Button, MenuItem, Link, Divider, Avatar, BottomNavigation, BottomNavigationAction } from '@material-ui/core';\nimport FollowingTable from '../components/followingtable';\nimport Okrs from '../components/okrs';\nimport CoPom from '../components/copom';\nimport Edit from '../components/dialog';\nimport firebase from '../firebase';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\n\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\nimport GroupWorkIcon from '@material-ui/icons/GroupWork';\n\n\nconst dummyData = require('../components/dummyData.json');\n\n\nconst styles = theme => ({\n    root: {\n        background: '#fff',\n        flexGrow: 1,\n        textAlign: 'center',\n        minHeight: '100vh',\n        margin: '0px'\n    },\n    jumbo: {\n        fontWeight: 600,\n        cursor: 'pointer'\n    },\n    dark: {\n        background: '#333'\n    },\n    accountButton: {\n        position: \"absolute\",\n        top: \"20px\",\n        right: \"20px\",\n        cursor: \"pointer\"\n    },\n    stickToBottom: {\n        width: '100%',\n        position: 'fixed',\n        bottom: 0,\n        borderTop: '1px solid #eee',\n        zIndex:'10',\n    },\n    edit: {\n        maxWidth: '100%',\n        borderRight: '1px solid #888',\n        borderLeft: '1px solid #888',\n        background: \"#333\",\n        color: '#888',\n        // boxShadow: \"none\",\n        \"&:hover\": {\n            color: \"#fff\",\n            // background: '#fff'\n        },\n    },\n});\n\n\n\nclass HomeScreen extends React.Component {\n\n\n\n    constructor(props) {\n        super(props);\n        let _isMounted = false;\n        this.uiConfig = {\n            signInFlow: 'popup',\n            signInOptions: [firebase.auth.GoogleAuthProvider.PROVIDER_ID],\n            callbacks: {\n                signInSuccess: () => false\n            }\n        }\n\n\n\n        this.state = {\n            mode: 1,\n            isSignedIn: false,\n            showDialog: false,\n            showDialogContent: null,\n            curUserOKRs: [],\n            curUser: {},\n            userlist: [],\n            followlist: {},\n            followerslist: {},\n            poms: {},\n            isFollowing: false,\n            userRequested: new URLSearchParams(window.location.search).get('user'),\n            quarter: 'Q' + (new URLSearchParams(window.location.search).get('q') || Math.ceil((new Date().getMonth() + 1) / 3)),\n            year: 'Y' + (new URLSearchParams(window.location.search).get('y') || new Date().getFullYear()),\n            ...dummyData\n        }\n\n\n        this.handleCloseDialog = this.handleCloseDialog.bind(this);\n        this.handleOpenDialog = this.handleOpenDialog.bind(this);\n        this.handleFollow = this.handleFollow.bind(this);\n        this.signOut = this.signOut.bind(this);\n        this.updateProgress = this.updateProgress.bind(this);\n    }\n\n    signOut() {\n        this.setState({ isSignedIn: false })\n        firebase.auth().signOut();\n    }\n\n    handleFollow = (event) => {\n        if (!this.state.isFollowing) {\n            this.setState({ isFollowing: !this.state.isFollowing });\n            // console.log(this.deployment + '/userlist/' + this.state.curUser.uid,this.state.curUser);\n            const newFollowRef = firebase.database().ref(this.deployment + '/userlist/' + this.state.curUser.uid).push();\n            newFollowRef.set(this.state.userRequested);\n        }\n        else {\n            this.setState({ isFollowing: !this.state.isFollowing });\n\n            const followID = Object.keys(this.state.followlist).filter(d => {\n                // console.log(d, this.state.followlist[d]);\n                return this.state.followlist[d] === this.state.userRequested\n            }\n            )\n            firebase.database().ref(this.deployment + '/userlist/' + this.state.curUser.uid + '/' + followID).remove();\n\n        }\n\n    }\n\n\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n\n    componentDidMount() {\n        this._isMounted = true;\n        if (process.env.NODE_ENV !== 'production') {\n            this.deployment = 'dev';\n        }\n        else {\n            this.deployment = 'prod';\n        }\n\n        firebase.auth().onAuthStateChanged(user => {\n            if (user !== null) {\n                this.setState({ isSignedIn: !!user })\n                if (this._isMounted) {\n                    console.log(this.deployment);\n\n\n                    // this is all users ref on firebase\n                    const usersRef = firebase.database().ref(this.deployment + '/users')\n\n\n                    const userID = user.email.split('@')[0].replace('.', '');\n                    usersRef.child(user.uid).once('value', (snapshot) => {\n                        if (snapshot.exists()) {\n                            this.setState({ 'curUser': snapshot.val()});\n                            // This user exists, so we need to get them\n                            if(this.state.userRequested===null){\n                                this.setState({ 'userRequested': snapshot.val().userID })\n                            }\n                            \n                        }\n                        else {\n                            // This user does not exists, so we need to add the user to our userlist\n                            const userToStore = {\n                                name: user.displayName,\n                                firstName: user.displayName.split(' ')[0],\n                                photoURL: user.photoURL,\n                                email: user.email,\n                                uid: user.uid,\n                                userID: userID\n                            }\n                            firebase.database().ref(this.deployment + '/users/' + user.uid).set(userToStore);\n                            const newUserRef = firebase.database().ref(this.deployment + '/userlist/all/' + user.uid);\n                            newUserRef.set(userID);\n                            this.setState({ 'curUser': userToStore })\n                            if(this.state.userRequested===null){\n                                this.setState({ 'curUser': snapshot.val(), 'userRequested': snapshot.val().userID })\n                            }\n\n                        }\n\n                        // Get Current User OKRs\n                        if (this.state.userRequested === null) {\n\n                            firebase.database().ref(this.deployment + '/okrs/').child(user.uid).child(this.state.year).child(this.state.quarter).once('value', (snapshot) => {\n                                if (snapshot.val() !== null) {\n                                    this.setState({ 'curUserOKRs': snapshot.val() }, () => {\n                                    });\n                                }\n\n                            })\n\n\n                        }\n                        else {\n                            firebase.database().ref(this.deployment + '/userlist/all').once('value', (d) => {\n                                const dd = d.val();\n                                const userX = Object.keys(dd).find(key => dd[key] === this.state.userRequested);\n\n                                if (userX !== undefined && userX !== null) {\n                                    firebase.database().ref(this.deployment + '/okrs').child(userX).child(this.state.year).child(this.state.quarter).once('value', (snapshot) => {\n                                        if (snapshot.val() !== null) {\n                                            this.setState({ 'curUserOKRs': snapshot.val() }, () => {\n                                            });\n                                        }\n\n                                    })\n                                }\n\n                            })\n                        }\n\n                        // Get All following list\n                        firebase.database().ref(this.deployment + '/userlist/' + user.uid).on('value', (snapshot) => {\n                            if (snapshot.val() !== null) {\n                                this.setState({ followlist: snapshot.val() }, () => {\n                                    // console.log('follow-list-updated!', snapshot.val());\n                                });\n                                if (Object.values(snapshot.val()).indexOf(this.state.userRequested) >= 0) {\n                                    this.setState({ isFollowing: true });\n                                }\n                            }\n                            else {\n                                this.setState({ followlist: {} })\n                            }\n                        })\n                        \n                        // Get all followers list\n                        firebase.database().ref(this.deployment + '/userlist').once('value', (snapshot) => {\n                            // console.log('alluserlist',snapshot.val());\n                            let obj = snapshot.val();\n                            let allUsers = obj.all;\n                            let followers = {};\n                            let followOpt;\n                            if (obj !== null) {\n                                followOpt = Object.keys(obj).filter(d => {\n                                    if (d !== 'all') {\n                                        let tempUserFollows = obj[d];\n                                        if (Object.values(tempUserFollows).includes(this.state.curUser.userID)) {\n                                            followers[d] = allUsers[d];\n                                            return d;\n                                        }\n                                    }\n                                })\n\n                                this.setState({ followerslist: followers })\n\n\n\n                            }\n                            else {\n                                this.setState({ followerslist: {} })\n                            }\n                        })\n\n\n\n\n                    });\n\n\n                    // const tempDataLoader = firebase.database().ref(this.deployment+'/okrs/temp');\n                    // tempDataLoader.set(dummyData.okrList);\n\n\n\n\n\n                }\n            }\n\n        })\n\n        // Get Another User OKRs (Not signed in, maybe)\n        if (!this.state.isSignedIn && this.state.userRequested !== null) {\n            firebase.database().ref(this.deployment + '/userlist/all').once('value', (d) => {\n                const dd = d.val();\n                const userX = Object.keys(dd).find(key => {\n                    return dd[key] === this.state.userRequested;\n                });\n\n                if (userX !== undefined && userX !== null) {\n\n                    firebase.database().ref(this.deployment + '/okrs').child(userX).child(this.state.year).child(this.state.quarter).once('value', (snapshot) => {\n                        if (snapshot.val() !== null) {\n                            this.setState({ 'curUserOKRs': snapshot.val() }, () => {\n                                // console.log('user-okrs-updated!', snapshot.val(), this.state);\n                            });\n                        }\n\n                    })\n                }\n            })\n\n        }\n        \n        // Get all users\n        firebase.database().ref(this.deployment + '/userlist/all').once('value', (snapshot) => {\n            if (snapshot.val() !== null) {\n                this.setState({ userlist: Object.values(snapshot.val()) }, () => {\n                });\n            }\n        })\n\n\n        // Get all poms and remap to the nameids\n        firebase.database().ref(this.deployment + '/userlist/all').once('value', (d) => {\n            const dd = d.val();\n            \n            const queryDate = new Date().toLocaleDateString().replace(/\\//g, '-');\n\n            firebase.database().ref(this.deployment + '/poms').child(queryDate)\n            .once('value', (snapshot) => {\n                const pomIds = snapshot.val();\n                const pomProcessed = {}\n                if (pomIds !== null) {\n                    \n                    for (var key in pomIds){\n                        pomProcessed[dd[key]] = pomIds[key]\n                    }\n                    this.setState({ poms: pomProcessed});\n                }\n            })\n        })\n\n\n\n\n    }\n\n\n    handleCloseDialog = (flag, objective, keyResults) => {\n        // console.log('closed! NEW', objective, keyResults);\n        const showDialogContent = this.state.showDialogContent;\n        const okrItem = {\n            id: objective.id,\n            title: objective.title,\n            description: objective.description,\n            failureMode: objective.failureMode,\n            category: objective.category,\n            keyResults: keyResults\n        }\n\n        const newOKRList = this.state.curUserOKRs;\n        if (this.state.showDialogContent === null) {\n            if (flag === 'new') {\n                okrItem.id = newOKRList.length;\n                newOKRList.push(okrItem);\n            }\n        }\n        else {\n            if (flag === 'delete') {\n                newOKRList.splice(showDialogContent, 1);\n            }\n            if (flag === 'old') {\n                newOKRList[showDialogContent] = this.state.editOKR;\n            }\n            else if (flag === 'new') {\n\n                newOKRList[showDialogContent] = okrItem;\n            }\n        }\n\n\n        this.setState({\n            ...this.state,\n            showDialog: false,\n            curUserOKRs: newOKRList\n        });\n\n\n        firebase.database().ref(this.deployment + '/okrs/' + this.state.curUser.uid + '/' + this.state.year + '/' + this.state.quarter).set({\n            ...newOKRList\n        });\n\n    };\n\n    handleOpenDialog = (showDialogContent) => {\n        this.setState({ showDialog: true });\n        this.setState({ showDialogContent: showDialogContent });\n        this.setState({ editOKR: this.state.curUserOKRs[showDialogContent] });\n        if (showDialogContent === null) {\n            this.setState({ dialogContent: this.state.defaultDialogContent });\n        }\n        else {\n            this.setState({ dialogContent: this.state.curUserOKRs[showDialogContent] });\n        }\n    };\n\n    updateProgress = (k, i, j) => {\n        if (this.state.curUser.userID === this.state.userRequested && this.state.isSignedIn) {\n            console.log('updateprogress', k, i, j);\n            let allOKRs = this.state.curUserOKRs;\n            let curOKR = allOKRs[k];\n            let curKR = curOKR.keyResults[i];\n\n\n            let newProgress = curKR.progress.map((p, q) => {\n                if (q !== j) {\n                    return p;\n                }\n                else {\n                    return (p + 1) % 4;\n                }\n            });\n\n            let newKRs = curOKR.keyResults.map((p, q) => {\n                if (q !== i) {\n                    return p;\n                }\n                else {\n                    return {\n                        ...curKR,\n                        progress: newProgress\n                    };\n                }\n            })\n\n            let newAllOKRs = allOKRs.map((p, q) => {\n                if (q !== k) {\n                    return p;\n                }\n                else {\n                    return {\n                        ...curOKR,\n                        keyResults: newKRs\n                    };\n                }\n            })\n\n            this.setState({ curUserOKRs: newAllOKRs })\n\n            firebase.database().ref(this.deployment + '/okrs/' + this.state.curUser.uid + '/' + this.state.year + '/' + this.state.quarter).set({\n                ...newAllOKRs\n            });\n        }\n\n\n    }\n\n    navHandleClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n    navHandleClose = event => {\n        this.setState({ anchorEl: null });\n    };\n\n    navSignin = () => {\n        window.location.href = '/'\n\n    };\n\n\n    render() {\n        // console.log(this.state);\n        const { classes, theme } = this.props;\n\n        // console.log('fresh hell :(', this.state);\n        return (\n\n            <div className={classes.root}>\n                {(this.state.isSignedIn || this.state.userRequested !== null) ?\n                    (<Grid container direction=\"column\">\n                        {/* <Grid container justify=\"flex-end\" direction=\"row\" className={classes.dark}> */}\n                        {this.state.curUser && this.state.isSignedIn ?\n                            (this.state.curUser.photoURL ? <Avatar className={classes.accountButton} alt=\"Remy Sharp\" src={this.state.curUser.photoURL} onClick={this.navHandleClick} />\n                                :\n                                <AccountCircleIcon aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={this.navHandleClick}\n                                    className={classes.accountButton} fontSize=\"large\">\n\n                                </AccountCircleIcon>)\n                            :\n                            <AccountCircleIcon aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={this.navHandleClick}\n                                className={classes.accountButton} fontSize=\"large\">\n\n                            </AccountCircleIcon>}\n                        <Menu\n                            id=\"simple-menu\"\n                            anchorEl={this.state.anchorEl}\n                            keepMounted\n                            open={Boolean(this.state.anchorEl)}\n                            onClose={this.navHandleClose}\n                        >\n                            {!this.state.isSignedIn ? <MenuItem onClick={this.navSignin}>Login</MenuItem> : <MenuItem onClick={() => {\n                                console.log('logged out!');\n                                this.signOut();\n                                this.setState({ isSignedIn: false });\n                            }}>Logout</MenuItem>}\n                        </Menu>\n                        {/* </Grid> */}\n                        <Grid container item direction=\"row\">\n                            <Grid item xs={false} sm={false} md={2} lg={3} xl={3}>\n                            </Grid>\n                            <Grid item xs={12} sm={12} md={8} lg={6} xl={6}>\n                                <Typography variant=\"h1\" className={classes.jumbo}>\n                                    <Link href=\"/\" underline=\"none\" color=\"textPrimary\">okru</Link>\n                                    {this.deployment==='dev'?'-dev':''}\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={false} sm={false} md={2} lg={3} xl={3}>\n                            </Grid>\n                        </Grid>\n                        <Grid container item spacing={3} direction=\"row\" justify=\"center\" xs={12} sm={12} md={12} lg={12} xl={12} style={{marginBottom: '50px'}}>\n                            <Grid container item spacing={3} xs={false} sm={false} md={1} lg={1} xl={1}></Grid>\n                            <Grid container item spacing={3} direction=\"column\" xs={12} sm={12} md={7} lg={7} xl={7}>\n                                {this.state.mode?\n                                (\n                                <CoPom user={this.state.curUser} following={Object.values(this.state.followlist)}></CoPom>\n                                ):(\n                                    <Okrs\n                                    okrList={this.state.curUserOKRs}\n                                    handleOpenDialog={this.handleOpenDialog}\n                                    selfView={this.state.curUser.userID === this.state.userRequested}\n                                    isFollowing={this.state.isFollowing}\n                                    userBeingViewed={this.state.userRequested}\n                                    handleFollow={this.handleFollow}\n                                    isSignedIn={this.state.isSignedIn}\n                                    quarter={this.state.quarter}\n                                    year={this.state.year}\n                                    updateProgress={this.updateProgress}></Okrs>\n                                )}\n                            </Grid>\n                            <Grid container item spacing={3} direction=\"column\" xs={12} sm={12} md={3} lg={3} xl={3}>\n                                <Grid item >\n\n                                    <FollowingTable following={this.state.userlist} name=\"All Users\" initText=\"Loading Users...\" />\n\n                                </Grid>\n                                {this.state.isSignedIn ?\n                                    <Grid>\n                                        <Grid item >\n\n                                            <FollowingTable following={Object.values(this.state.followlist)} name=\"Following\" initText=\"You're not following anyone!\" />\n\n                                        </Grid>\n                                        <Grid item >\n\n                                            <FollowingTable following={Object.values(this.state.followerslist)} name=\"Followers\" initText=\"You do not have any followers yet!\" />\n\n                                        </Grid>\n                                    </Grid>\n                                    : ''}\n                            </Grid>\n                            <Grid container item spacing={3} xs={false} sm={false} md={1} lg={1} xl={1}></Grid>\n                        \n                        </Grid>\n                        <BottomNavigation value={this.state.mode} onChange={(event, newValue) => {\n                                this.setState({mode:newValue})\n                            }}\n                            showLabels\n                            className={classes.stickToBottom}\n                        >\n                            <BottomNavigationAction className={classes.edit} label=\"OKRs\" icon={<FormatListBulletedIcon />} />\n                            <BottomNavigationAction className={classes.edit} label=\"CoPom\" icon={<GroupWorkIcon />} />\n                        </BottomNavigation>\n\n                        {this.state.curUser.userID === this.state.userRequested ? <Edit openDialog={this.state.showDialog} handleCloseDialog={this.handleCloseDialog} showOKR={this.state.dialogContent} /> : ''}\n\n                        \n\n                    </Grid>\n                    \n\n                    )\n                    :\n                    (\n                        <div style={{ 'display': 'flex', 'flexDirection': 'column', 'justifyContent': 'center', 'alignItems': 'center', 'height': '100vh' }}>\n\n                            <Typography variant=\"h1\" className={classes.jumbo}>\n                                <Link href=\"/\" underline=\"none\" color=\"textPrimary\">okru</Link>\n                            </Typography>\n                            <Typography variant=\"caption\">Set Personal OKRs, Be Accountable to Friends</Typography>\n                            <Typography variant=\"caption\">Become a Better Version of You</Typography>\n                            <StyledFirebaseAuth\n                                uiConfig={this.uiConfig}\n                                firebaseAuth={firebase.auth()}\n                            />\n                            <Divider style={{ width: \"30%\", margin: \"30px\" }} />\n                            <Grid container direction=\"column\" item xs={10} sm={6} md={6} lg={4} xl={4}>\n                                <Typography variant=\"subtitle1\">This is a <b><i>Measure What Matters</i></b> meets <b><i>Elephant In The Brain</i></b> meets <b><i>Atomic Habits</i></b> effort to\n                                use personal OKRs that track System Metrics and positively decieve our silly brains. You can set your quarterly OKRs, pre-commit metrics, estimate possible failure\n                    modes and follow your friends.</Typography>\n\n                                <Typography variant=\"overline\">More features are coming soon!</Typography>\n                                <Button autoFocus color=\"inherit\" variant=\"outlined\" onClick={() => (window.location.href = '/?user=vivekaithal44&q=1&y=2020')}>See a sample OKR</Button>\n                            </Grid>\n\n\n                        </div>\n                    )\n                }\n            </div>\n\n        )\n    }\n}\n\nexport default withStyles(styles)(HomeScreen);\n","import React from 'react';\n\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport HomeScreen from './screens/homescreen';\n\nimport './App.css';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {main: \"#1976d2\", light: \"rgb(71, 145, 219)\", dark: \"rgb(17, 82, 147)\", contrastText: \"#fff\"},\n    secondary: {main: \"rgb(220, 0, 78)\", light: \"rgb(227, 51, 113)\", dark: \"rgb(154, 0, 54)\", contrastText: \"#fff\"},\n    text: {primary: \"rgba(0, 0, 0, 0.87)\", secondary: \"rgba(0, 0, 0, 0.54)\", disabled: \"rgba(0, 0, 0, 0.38)\", hint: \"rgba(0, 0, 0, 0.38)\"},\n    chips:{relationships:\"#c0392b\", fitness:\"#f39c12\", work:\"#2980b9\", creative:\"#16a085\", other:\"#2c3e50\"}\n  }\n},\n)\n\n\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = { 'currentPage': window.location.pathname }\n  }\n\n  render() {\n\n    if (this.state.currentPage === \"/\") {\n      return (\n        <MuiThemeProvider theme={theme}>\n          <HomeScreen />\n        </MuiThemeProvider>\n      )\n    }\n\n    else if (this.state.currentPage === \"/account\") {\n      return (\n        <MuiThemeProvider theme={theme}>\n          <HomeScreen />\n        </MuiThemeProvider>\n      )\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}