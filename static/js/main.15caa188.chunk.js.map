{"version":3,"sources":["assets/intuition.mp3","assets/1.png","assets/2.png","assets/3.png","assets/4.png","components/followingtable.js","components/okrs.js","firebase.js","components/pomcircle.js","components/textfieldcharcount.js","components/pomcard.js","components/copom.js","components/dialog.js","components/frontpage.js","screens/homescreen.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","FollowingTable","props","handleChangePage","event","newPage","setState","page","handleChangeRowsPerPage","rowsPerPage","target","value","handleSearch","searchValue","following","state","followingRaw","tempFollow","filter","d","includes","bind","this","classes","name","initText","Paper","elevation","TableContainer","className","root","Table","stickyHeader","aria-label","size","TableHead","TableRow","TableCell","dark","style","borderRadius","Grid","container","direction","justify","alignItems","Typography","TextField","id","variant","label","search","InputLabelProps","color","paddingLeft","InputProps","onChange","TableBody","length","align","component","scope","slice","map","row","key","Link","href","TablePagination","rowsPerPageOptions","count","onChangePage","onChangeRowsPerPage","React","Component","withStyles","theme","maxHeight","textAlign","bold","fontWeight","tableCenter","display","justifyContent","background","width","Okrs","printOKR","okrs","user","year","quarter","doc","jsPDF","orientation","columnWidth","x","val","y","setFont","setFontSize","text","parseInt","setTextColor","setFontStyle","rotationDirection","angle","charSpace","setDrawColor","height","forEach","okr","i","line","roundedRect","setFillColor","splitTitle","splitTextToSize","title","j","description","keyResults","kr","result","metric","failureMode","save","findWeeksinQuarter","q","d1","d2","jan1","Date","w1","Math","ceil","findWidth","idCounts","progress","f","reduce","a","v","chips","relationships","Chip","icon","fitness","work","creative","other","okrList","handleOpenDialog","selfView","isSignedIn","userBeingViewed","isFollowing","handleFollow","updateProgress","followText","Breadcrumbs","brumb","ButtonGroup","Button","onClick","window","location","replace","edit","startIcon","fontSize","Box","followBox","Switch","checked","inputProps","k","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","col","heading","progressGrid","bound","category","ExpansionPanelDetails","List","ListItem","circleColor","weekLabel","circle","bubbles","descriptionPFM","Fab","Divider","marginTop","margin","homeAdd","padding","flexDirection","paddingTop","goal","goalMetric","paddingBottom","borderLeft","darkBackground","boxShadow","marginBottom","flex","paddingRight","cursor","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","PomCircle","time","status","cx","cy","outerRadius","innerRadius","startAngle","endAngle","fill","cornerRadius","dataKey","data","position","sub3","main","sub","sub2","pomInProgress","pomNotInProgress","transform","TextFieldCharCount","handleUpdateText","currentCount","required","fullWidth","multiline","rows","helperText","maxLength","FormHelperTextProps","error","right","bottom","PomCard","textEdit","pomData","startPom","pausePom","textPom","resumePom","selfPom","pomArray","Array","poms","item","pomcards","outline","buttonPlay","pommer","pomColor","e","txt","border","borderTop","beep","UIfx","notif","CoPom","selfPomCount","myPom","pommers","refreshAllPoms","clearInterval","inter","_isMounted","deployment","setInterval","console","log","pomProcessed","database","ref","once","allUserSnap","allUsers","queryDate","getDate","getMonth","getFullYear","child","snapshot","pomIds","latestPomStatus","latestPomModified","latestPomElapsed","latestPomStart","latestPomText","filteredPoms","selfPresent","userID","elapsed","curPoms","pomLength","latestPom","getTime","modifiedUTC","startUTC","push","allPoms","fol","open","play","utc","uid","set","elapsedNew","getUTCDate","getUTCMonth","getUTCFullYear","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","SnackbarContent","snack","message","minHeight","minWidth","backgroundColor","Edit","addKR","newKR","changeCategory","newCategory","objective","deleteKR","deleteID","changeTitle","changeDescription","changeFailureMode","changeKRResult","changeKRMetric","showOKR","openDialog","handleCloseDialog","Dialog","fullScreen","AppBar","appBar","Toolbar","toolBar","IconButton","edge","autoFocus","form","spacing","xs","sm","md","lg","xl","obj","FormControl","formControl","InputLabel","Select","labelId","MenuItem","Avatar","buttonify","fail","letterSpacing","FrontPage","uiConfig","signInFlow","signInOptions","auth","GoogleAuthProvider","PROVIDER_ID","callbacks","signInSuccess","section1","jumbo","underline","firebaseAuth","example","section2","what","section3","why","img","src","img1","img2","img3","img4","flexGrow","textTransform","dummyData","require","HomeScreen","followID","Object","keys","followlist","userRequested","curUser","remove","flag","showDialogContent","okrItem","newOKRList","curUserOKRs","splice","editOKR","showDialog","dialogContent","defaultDialogContent","allOKRs","curOKR","curKR","newProgress","p","newKRs","newAllOKRs","navHandleClick","anchorEl","currentTarget","navHandleClose","navSignin","mode","userlist","followerslist","URLSearchParams","get","signOut","onAuthStateChanged","usersRef","email","split","exists","userToStore","displayName","firstName","photoURL","dd","userX","find","undefined","on","values","indexOf","all","followers","tempUserFollows","accountButton","alt","aria-haspopup","Menu","keepMounted","Boolean","leftpane","Tabs","newValue","history","pushState","tab","Tab","rightpane","top","stickToBottom","zIndex","maxWidth","borderRight","createMuiTheme","palette","primary","light","contrastText","secondary","disabled","hint","App","pathname","currentPage","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iFAAAA,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,+B,oBCA3CD,EAAOC,QAAU,IAA0B,+B,oBCA3CD,EAAOC,QAAU,IAA0B,+B,oBCA3CD,EAAOC,QAAU,IAA0B,+B,8yDCwCrCC,E,kDAEF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAaVC,iBAAmB,SAACC,EAAOC,GACvB,EAAKC,SAAS,CAAEC,KAAMF,KAfP,EAkBnBG,wBAA0B,SAAAJ,GACtB,EAAKE,SAAS,CAAEG,YAAaL,EAAMM,OAAOC,SAnB3B,EAuBnBC,aAAe,SAAAR,GAGX,GADA,EAAKE,SAAS,CAAEO,YAAaT,EAAMM,OAAOC,QAClB,KAArBP,EAAMM,OAAOC,MACZ,EAAKL,SAAS,CAACQ,UAAW,EAAKC,MAAMC,mBAErC,CACA,IAAIC,EAAa,EAAKF,MAAMC,aAAaE,QAAO,SAAAC,GAAC,OAAEA,EAAEC,SAAShB,EAAMM,OAAOC,UAC3E,EAAKL,SAAS,CAACQ,UAAWG,MA7B9B,EAAKF,MAAQ,CACTR,KAAM,EACNE,YAAa,EACbI,YAAc,GACdC,UAAW,GACXE,aAAc,IAGlB,EAAKb,iBAAmB,EAAKA,iBAAiBkB,KAAtB,gBACxB,EAAKb,wBAA0B,EAAKA,wBAAwBa,KAA7B,gBAXhB,E,yEAmCuB,IAAdP,EAAa,EAAbA,UAExBQ,KAAKhB,SAAS,CAACQ,UAAUA,EAAWE,aAAaF,M,+BAG3C,IAAD,EAC0CQ,KAAKpB,MAA5CqB,EADH,EACGA,QAAoBC,GADvB,EACYV,UADZ,EACuBU,MAAMC,EAD7B,EAC6BA,SAIlC,OACI,kBAACC,EAAA,EAAD,CAAOC,UAAW,GACd,kBAACC,EAAA,EAAD,CAAgBC,UAAWN,EAAQO,MAC/B,kBAACC,EAAA,EAAD,CAAOC,cAAY,EAACC,aAAW,eAAeC,KAAK,SAC/C,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAWR,UAAWN,EAAQe,KAAOC,MAAO,CAACC,aAAc,QAC3D,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,QAAQ,gBAAgBC,WAAW,UACnE,kBAACC,EAAA,EAAD,KAAatB,GAET,kBAACuB,EAAA,EAAD,CAAWC,GAAG,iBAAiBC,QAAQ,WAAWf,KAAK,QAAQgB,MAAM,SAASrB,UAAaN,EAAQ4B,OACnGC,gBAAiB,CAACb,MAAM,CAAEc,MAAO,OAAQC,YAAY,SACrDC,WAAY,CAAChB,MAAM,CAAEc,MAAO,SAC5B1C,MAAOW,KAAKP,MAAMF,YAClB2C,SAAUlC,KAAKV,mBAS3B,kBAAC6C,EAAA,EAAD,KACsC,IAAhCnC,KAAKP,MAAMD,UAAU4C,OACnB,kBAACtB,EAAA,EAAD,KAAU,kBAACC,EAAA,EAAD,CAAWsB,MAAM,SAASC,UAAU,KAAKC,MAAM,OACrD,kBAACf,EAAA,EAAD,KAAarB,KAIhBH,KAAKP,MAAMD,UAAUgD,MAAMxC,KAAKP,MAAMR,KAAOe,KAAKP,MAAMN,aAAca,KAAKP,MAAMR,KAAO,GAAKe,KAAKP,MAAMN,aAAasD,KAAI,SAAAC,GAAG,OACzH,kBAAC5B,EAAA,EAAD,CAAU6B,IAAKD,GAEX,kBAAC3B,EAAA,EAAD,CAAWsB,MAAM,SAASC,UAAU,KAAKC,MAAM,OAC3C,kBAACK,EAAA,EAAD,CAAMb,MAAM,UAAUc,KAAM,iBAAmBH,GAAMA,WAOjF,kBAACI,EAAA,EAAD,CACIC,mBAAoB,CAAC,GACrBT,UAAU,MACVU,MAAOhD,KAAKP,MAAMD,UAAU4C,OAC5BjD,YAAaa,KAAKP,MAAMN,YACxBF,KAAMe,KAAKP,MAAMR,KACjBgE,aAAcjD,KAAKnB,iBACnBqE,oBAAqBlD,KAAKd,+B,GA/FjBiE,IAAMC,WAwGpBC,eAtIA,SAAAC,GAAK,MAAK,CACrB9C,KAAM,CACF+C,UAAW,QAEXC,UAAW,UAEfC,KAAM,CACFC,WAAY,KAEhBC,YAAa,CACTC,QAAS,OACTC,eAAgB,SAChBtC,WAAY,UAEhBP,KAAM,CACF8C,WAAY,OACZ/B,MAAO,OACP2B,WAAY,KAEhB7B,OAAO,CACHE,MAAM,OAEN+B,WAAY,OACZ5C,aAAe,MACf6C,MAAO,UA8GAV,CAAmB1E,G,iWCR5BqF,G,kDAEF,WAAYpF,GAAQ,IAAD,uBACf,cAAMA,IA0DVqF,SAAW,SAACC,EAAMC,EAAMC,EAAMC,GAE1B,IAAIC,EAAM,IAAIC,KAAM,CAChBC,YAAa,cAaXC,GAAeV,IAJN,GAIuCG,EAAK9B,OAAS,IAAe8B,EAAK9B,OAGxF,SAASsC,EAAEC,GACP,OAAOA,EAVe,GAY1B,SAASC,EAAED,GACP,OAAOA,EAZa,GAiBxBL,EAAIO,QAAQ,aACZP,EAAIQ,YAAY,IAChBR,EAAIS,KAAKC,SAASjB,OAAYa,EAAE,GAAI,OAAQ,CAAEvC,MAAO,WACrDiC,EAAIW,aAAa,QACjBX,EAAIQ,YAAY,IAChBR,EAAIO,QAAQ,WACZP,EAAIS,KAAKC,SAASjB,OAAYa,EAAE,IAAKT,EAAO,IAAMC,EAAO,IAAMC,EAAS,CAAEhC,MAAO,WACjFiC,EAAIO,QAAQ,aACZP,EAAIW,aAAa,QAEjBX,EAAIY,aAAa,QACjBZ,EAAIQ,YAAY,IAChBR,EAAIS,KAAK,GAAIH,EAAE,IAAK,aAAc,CAAEO,kBAAmB,EAAGC,MAAO,GAAIC,UAAW,IAChFf,EAAIS,KAAK,GAAIH,EAAE,KAAM,cAAe,CAAEO,kBAAmB,EAAGC,MAAO,GAAIC,UAAW,IAClFf,EAAIgB,aAAa,QACjBhB,EAAIQ,YAAY,GAChBR,EAAIO,QAAQ,WACZP,EAAIS,KAAKhB,IAAYwB,IAAa,0BAA4BpB,EAAO,CAAEkB,UAAW,IAGlFnB,EAAKsB,SAAQ,SAACC,EAAKC,GACf,IAAIC,EAAO,GAGXrB,EAAIW,aAAa,QACjBX,EAAIO,QAAQ,aACZP,EAAIgB,aAAa,QACjBhB,EAAIQ,YAAY,IAChBR,EAAIsB,YAAYlB,EAAEgB,GAAKjB,EA5CZ,IA4CoCG,EAAE,IAAKH,EAvCrCc,IAuCgE,EAAG,EAAG,KACvFjB,EAAIuB,aAAa,QACjBvB,EAAIsB,YAAYlB,EAAEgB,GAAKjB,EA9CZ,IA8CoCG,EAAE,IAAKH,EAAa,GAAI,EAAG,EAAG,KAC7EH,EAAIY,aAAa,QAEjB,IADA,IAAIY,EAAaxB,EAAIyB,gBAAgBN,EAAIO,MAAOvB,EAAc,GACrDwB,EAAI,EAAGA,EAAIH,EAAW1D,OAAQ6D,IAEnC3B,EAAIS,KAAKL,EAAEgB,GAAKjB,EAnDT,GAmDiCA,EAAc,GAAIG,EAAEe,GAAOG,EAAWG,GAAI,CAAE5D,MAAO,SAAUgD,UAAW,IAChHM,GAdO,EAgBXrB,EAAIY,aAAa,UACjBZ,EAAIQ,YAAY,IAEhB,IADIgB,EAAaxB,EAAIyB,gBAAgBN,EAAIS,YAAazB,EAAc,GAC3DwB,EAAI,EAAGA,EAAIH,EAAW1D,OAAQ6D,IAEnC3B,EAAIS,KAAKL,EAAEgB,GAAKjB,EA3DT,GA2DiCA,EAAc,GAAIG,EAAEe,GAAOG,EAAWG,GAAI,CAAE5D,MAAO,SAAUgD,UAAW,IAChHM,GAtBO,EAwBXA,EAAO,GACPrB,EAAIW,aAAa,QACjBQ,EAAIU,WAAWX,SAAQ,SAACY,GAEpB,IADA,IAAIN,EAAaxB,EAAIyB,gBAAiBK,EAAGC,OAAS,qBAAuBD,EAAGE,OAAS,KAAO7B,EAAc,GACjGwB,EAAI,EAAGA,EAAIH,EAAW1D,OAAQ6D,IAEnC3B,EAAIS,KAAKL,EAAEgB,GAAKjB,EApEb,GAoEqCA,EAAc,GAAIG,EAAEe,GAAOG,EAAWG,GAAI,CAAE5D,MAAO,SAAUgD,UAAW,IAChHM,GA/BG,EAiCPrB,EAAIgB,aAAa,QACjBhB,EAAIqB,KAAKjB,EAAEgB,GAAKjB,EAxET,GACG,GAuE0CG,EAAEe,GAAOjB,EAAEgB,GAAKjB,EAxE7D,GAwEqFA,EAvElF,GAuE4GG,EAAEe,GAAO,KAC/HA,GAAc,KAGlB,IADIG,EAAaxB,EAAIyB,gBAAiB,2BAA6BN,EAAIc,YAAc9B,EAAc,GAC1FwB,EAAI,EAAGA,EAAIH,EAAW1D,OAAQ6D,IAEnC3B,EAAIS,KAAKL,EAAEgB,GAAKjB,EA9ET,GA8EiCA,EAAc,GAAIG,EAAEe,GAAOG,EAAWG,GAAI,CAAE5D,MAAO,SAAUgD,UAAW,IAChHM,GAzCO,KAiDfrB,EAAIkC,KAAK,aA9JM,EA8KnBC,mBAAqB,SAACC,EAAG9B,GACrB,IACI+B,EAAIC,EADJC,EAAO,IAAIC,KAAKlC,EAAG,EAAG,GAEhB,OAAN8B,GACAC,EAAK,IAAIG,KAAKlC,EAAG,EAAG,GACpBgC,EAAK,IAAIE,KAAKlC,EAAG,EAAG,KAET,OAAN8B,GACLC,EAAK,IAAIG,KAAKlC,EAAG,EAAG,GACpBgC,EAAK,IAAIE,KAAKlC,EAAG,EAAG,KAET,OAAN8B,GACLC,EAAK,IAAIG,KAAKlC,EAAG,EAAG,GACpBgC,EAAK,IAAIE,KAAKlC,EAAG,EAAG,KAET,OAAN8B,IACLC,EAAK,IAAIG,KAAKlC,EAAG,EAAG,GACpBgC,EAAK,IAAIE,KAAKlC,EAAG,GAAI,KAGzB,IAAImC,EAAKC,KAAKC,MAAON,EAAKE,EAAO,OAAY,MAAY,GAGzD,OAFSG,KAAKC,MAAOL,EAAKC,EAAO,OAAY,MAAY,GAE5CE,EAAK,GArMH,EA0MnBG,UAAY,SAACzB,EAAK/D,GACd,IAAIyF,EAAW,CAAC,EAAG,EAAG,EAAG,GASzB,OAPA1B,EAAIU,WAAW1D,KAAI,SAAA5C,GACfA,EAAEuH,SAAS3E,KAAI,SAAA4E,GACXF,EAASE,IAAM,QAKD,IAAfF,EAASzF,GAAYyF,EAASG,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,MApN3C,OAMf,EAAK/H,MAAQ,CACTgI,MAAO,CAEHC,cAAe,kBAACC,GAAA,EAAD,CACX1G,MAAO,CAAE6C,WARH,OAQ0B/B,MAPtB,QASVnB,KAAK,QACLgH,KAAM,kBAAC,IAAD,CAAc3G,MAAO,CAAEc,MAVnB,UAWVH,MAAM,kBAEViG,QAAS,kBAACF,GAAA,EAAD,CACL/G,KAAK,QAELK,MAAO,CAAE6C,WAjBH,OAiB0B/B,MAhBtB,QAiBV6F,KAAM,kBAAC,IAAD,CAAmB3G,MAAO,CAAEc,MAjBxB,UAkBVH,MAAM,YAEVkG,KACI,kBAACH,GAAA,EAAD,CACI1G,MAAO,CAAE6C,WAvBP,OAuB8B/B,MAtB1B,QAuBNnB,KAAK,QAELgH,KAAM,kBAAC,IAAD,CAAU3G,MAAO,CAAEc,MAzBnB,UA0BNH,MAAM,SAEdmG,SACI,kBAACJ,GAAA,EAAD,CACI/G,KAAK,QAELK,MAAO,CAAE6C,WAjCP,OAiC8B/B,MAhC1B,QAiCN6F,KAAM,kBAAC,IAAD,CAAa3G,MAAO,CAAEc,MAjCtB,UAkCNH,MAAM,aAEdoG,MACI,kBAACL,GAAA,EAAD,CACI/G,KAAK,QAELK,MAAO,CAAE6C,WAzCP,OAyC8B/B,MAxC1B,QAyCN6F,KAAM,kBAAC,IAAD,CAAc3G,MAAO,CAAEc,MAzCvB,UA0CNH,MAAM,YAMtB,EAAKqC,SAAW,EAAKA,SAASlE,KAAd,gBAChB,EAAK0G,mBAAqB,EAAKA,mBAAmB1G,KAAxB,gBApDX,E,qDAyNT,IAAD,SAC2IC,KAAKpB,MAA7IqB,EADH,EACGA,QAASgI,EADZ,EACYA,QAASC,EADrB,EACqBA,iBAAkBC,EADvC,EACuCA,SAAUC,EADjD,EACiDA,WAAYC,EAD7D,EAC6DA,gBAAiBC,EAD9E,EAC8EA,YAAaC,EAD3F,EAC2FA,aAAclE,EADzG,EACyGA,QAASD,EADlH,EACkHA,KAAMoE,EADxH,EACwHA,eAGvHC,EAAcH,EAAc,kBAAC9G,EAAA,EAAD,CAAYG,QAAQ,WAApB,YAC5B,kBAACH,EAAA,EAAD,CAAYG,QAAQ,WAApB,UAQN,OACI,kBAACvB,EAAA,EAAD,CAAOG,UAAWN,EAAQO,KAAMH,UAAW,GACvC,kBAACc,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,QAAQ,gBAAgBC,WAAW,UAE/D,kBAACJ,EAAA,EAAD,KACI,kBAACuH,GAAA,EAAD,CAAanI,UAAWN,EAAQ0I,MAAOhI,aAAW,cAC9C,kBAACa,EAAA,EAAD,CAAYG,QAAQ,KAAKI,MAAM,eAA/B,QACA,kBAACP,EAAA,EAAD,CAAYG,QAAQ,KAAKI,MAAM,eAAesG,GAC9C,kBAAC7G,EAAA,EAAD,CAAYG,QAAQ,KAAKI,MAAM,eAAeqC,GAC9C,kBAAC5C,EAAA,EAAD,CAAYG,QAAQ,KAAKI,MAAM,eAAesC,IAElD,kBAAClD,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,QAAQ,SAASC,WAAW,UACxD,kBAACC,EAAA,EAAD,CAAYG,QAAQ,WAApB,mBACA,kBAACiH,GAAA,EAAD,CAAajH,QAAQ,OAAOI,MAAM,UAAUpB,aAAW,gCAAgCC,KAAK,SAC5F,kBAACiI,GAAA,EAAD,CAAQC,QAAS,kBAAOC,OAAOC,SAASnG,KAAO,iBAAiBwF,EAAgB,UAAUjE,EAAK6E,QAAQ,IAAI,MAA3G,MACA,kBAACJ,GAAA,EAAD,CAAQC,QAAS,kBAAOC,OAAOC,SAASnG,KAAO,iBAAiBwF,EAAgB,UAAUjE,EAAK6E,QAAQ,IAAI,MAA3G,MACA,kBAACJ,GAAA,EAAD,CAAQC,QAAS,kBAAOC,OAAOC,SAASnG,KAAO,iBAAiBwF,EAAgB,UAAUjE,EAAK6E,QAAQ,IAAI,MAA3G,MACA,kBAACJ,GAAA,EAAD,CAAQC,QAAS,kBAAOC,OAAOC,SAASnG,KAAO,iBAAiBwF,EAAgB,UAAUjE,EAAK6E,QAAQ,IAAI,MAA3G,SAMPd,GAAYC,EAKT,kBAACS,GAAA,EAAD,CACIlH,QAAQ,YACRI,MAAM,UACNnB,KAAK,QAAQL,UAAWN,EAAQiJ,KAAMJ,QAAS,kBAAM,EAAK7E,SAASgE,EAASI,EAAiBjE,EAAMC,IACnG8E,UAAW,kBAAC,IAAD,CAAWC,SAAS,WAJnC,cAQGhB,EAAa,kBAACiB,GAAA,EAAD,CAAK9I,UAAWN,EAAQqJ,WAAW,kBAACC,GAAA,EAAD,CAC/CC,QAASlB,EACTpG,SAAUqG,EACVlJ,MAAM,SACN0C,MAAM,UACN0H,WAAY,CAAE,aAAc,sBAG7BhB,GAAoB,IAI9BR,EAAQ7F,OAAS,EAAK6F,EAAQxF,KAAI,SAACgD,EAAKiE,GAAN,OAAa,kBAACC,GAAA,EAAD,CAAgBhH,IAAK8C,EAAI/D,GAAIrB,UAAW,GACpF,kBAACuJ,GAAA,EAAD,CACIC,WAAY,kBAAC,IAAD,MACZC,gBAAe,SAAWrE,EAAI/D,GAAK,WACnCA,GAAI,SAAW+D,EAAI/D,GAAK,WAExB,kBAAC2H,GAAA,EAAD,CAAK9I,UAAWN,EAAQ8J,KACpB,kBAACV,GAAA,EAAD,CAAK9I,UAAWN,EAAQ+J,SAEpB,kBAAC7I,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,OACtB,kBAACG,EAAA,EAAD,CAAYjB,UAAWN,EAAQwD,MAAOgC,EAAIO,OAC1C,kBAAC7E,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,OAEtB,kBAACF,EAAA,EAAD,CAAMZ,UAAWN,EAAQgK,aAAchJ,MAAO,CAAE6C,WAAY,UAAWC,MAAO,EAAKmD,UAAUzB,EAAK,MAClG,kBAACtE,EAAA,EAAD,CAAMZ,UAAWN,EAAQgK,aAAchJ,MAAO,CAAE6C,WAAY,UAAWC,MAAO,EAAKmD,UAAUzB,EAAK,MAClG,kBAACtE,EAAA,EAAD,CAAMZ,UAAWN,EAAQgK,aAAchJ,MAAO,CAAE6C,WAAY,UAAWC,MAAO,EAAKmD,UAAUzB,EAAK,MAClG,kBAACtE,EAAA,EAAD,CAAMZ,UAAWN,EAAQgK,aAAchJ,MAAO,CAAE6C,WAAY,UAAWC,MAAO,EAAKmD,UAAUzB,EAAK,QAI1G,kBAACjE,EAAA,EAAD,CAAYG,QAAQ,QAAQpB,UAAWN,EAAQiG,aAC1CT,EAAIS,cAGb,kBAACmD,GAAA,EAAD,CAAK9I,UAAWN,EAAQiK,OACnB,EAAKzK,MAAMgI,MAAMhC,EAAI0E,aAOlC,kBAACC,GAAA,EAAD,CAAuB7J,UAAWN,EAAQyC,KAEtC,kBAAC2H,GAAA,EAAD,KAEK5E,EAAIU,WAAW1D,KAAI,SAAC2D,EAAIV,GAAL,OAChB,kBAAC4E,GAAA,EAAD,CAAU3H,IAAK+C,EAAGnF,UAAWN,EAAQmG,IASjC,kBAACjF,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASC,QAAQ,SAASC,WAAW,cAC3D,kBAACC,EAAA,EAAD,KAAa4E,EAAGC,QAChB,kBAACsB,GAAA,EAAD,CACIC,KAAM,kBAAC,KAAD,MACNhG,MAAO,kBAACJ,EAAA,EAAD,CAAYG,QAAQ,WAApB,mBAA8C,kBAACH,EAAA,EAAD,CAAYG,QAAQ,UAAUyE,EAAGE,SACtF1F,KAAK,QACLmB,MAAM,YAGV,kBAACZ,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,OAElB+E,EAAGgB,SAAS3E,KAAI,SAAC5C,EAAGoG,GAChB,IACIsE,EADAC,EAAY,kBAAChJ,EAAA,EAAD,CAAYG,QAAQ,WAAW,KAAOsE,EAAI,IAE7CsE,EAAH,IAAN1K,EAAuB,UACZ,IAANA,EAAuB,UACjB,IAANA,EAAuB,UACb,UACnB,IAAI4K,EAAS,kBAAC,KAAD,CACT3B,QAAS,kBAAMN,EAAekB,EAAGhE,EAAGO,IACpCmD,SAAS,QAAQzG,IAAS,IAAJ+G,EAAc,GAAJhE,EAASO,EAAGhF,MAAO,CAAEc,MAAOwI,KAChE,OACI,kBAACpJ,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASsB,IAAS,IAAJ+G,EAAc,GAAJhE,EAASO,EAAG1F,UAAWN,EAAQyK,QAASnJ,WAAW,UAEhGkJ,EACAD,aAqBrC,kBAAChJ,EAAA,EAAD,CAAYG,QAAQ,QAAQpB,UAAWN,EAAQ0K,gBAC3C,uDACClF,EAAIc,aAGT,kBAACpF,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,QAAQ,WAAWL,MAAO,CAAE8C,MAAO,OAAQH,QAAS,SAC/EuE,GAAYC,EAAa,kBAACwC,GAAA,EAAD,CAAKhK,KAAK,QAAQmB,MAAM,UAAUpB,aAAW,MAAMJ,UAAWN,EAAQiJ,KAC5FJ,QAAS,kBAAMZ,EAAiBzC,EAAI/D,MACpC,kBAAC,IAAD,CAAU0H,SAAS,WACd,GAET,kBAACyB,GAAA,EAAD,CAAS5J,MAAO,CAAE6J,UAAW,OAAQ/G,MAAO,gBAOpD,kBAACvC,EAAA,EAAD,CAAYP,MAAO,CAAE8J,OAAQ,SAA7B,gBAEH5C,GAAYC,EAAa,kBAACjH,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASE,WAAW,SAASD,QAAQ,SAASf,UAAWN,EAAQ+K,SACjH,kBAACJ,GAAA,EAAD,CAAK7I,MAAM,UAAUpB,aAAW,MAAMJ,UAAWN,EAAQiJ,KAAMJ,QAAS,kBAAMZ,EAAiB,QAE3F,kBAAC,IAAD,OAEJ,kBAAC1G,EAAA,EAAD,CAAYG,QAAQ,WAApB,gBACM,Q,GA9YPwB,IAAMC,WAqZVC,gBA5fA,SAAAC,GAAK,MAAK,CACrB9C,KAAM,CACFsD,WAAY,OACZmH,QAAS,QAEbxH,KAAM,CACFC,WAAY,KAEhBC,YAAa,CACTC,QAAS,OACTC,eAAgB,SAChBtC,WAAY,UAEhByI,QAAS,CACLpG,QAAS,OACTC,eAAgB,SAChBtC,WAAY,aACZ2J,cAAe,UAEnBnB,IAAK,CACDnG,QAAS,OACTC,eAAgB,gBAChBtC,WAAY,SACZ2J,cAAe,MACfnH,MAAO,QAEXrB,IAAK,CACDkB,QAAS,OAETsH,cAAe,SACf3J,WAAY,cAEhBoH,MAAO,CACHwC,WAAY,IAEhBjB,MAAO,GAKPkB,KAAM,CACF1H,WAAY,IACZ0F,SAAU,IAEdiC,WAAY,CACRjC,SAAU,IAEdlD,YAAa,CACToF,cAAe,OACf9H,UAAW,QAEfmH,eAAgB,CACZW,cAAe,OACf9H,UAAW,OACX+H,WAAY,oBACZvJ,YAAa,QAGjBwJ,eAAgB,CACZ1H,WAAY,QAEhB9C,KAAM,CACF8C,WAAY,OACZ/B,MAAO,QAEXmH,KAAM,CACFpF,WAAY,OACZ/B,MAAO,OACP0J,UAAW,OACX,UAAW,CACPA,UAAW,OACX1J,MAAO,OACP+B,WAAY,SAGpBwF,UAAW,CACP1F,QAAS,OACTC,eAAgB,SAChBtC,WAAY,SACZ2J,cAAe,UAEnBF,QAAS,CACLF,UAAW,QAEf1E,GAAI,CACAmF,WAAY,iBACZvJ,YAAa,OACb0J,aAAc,QAElBhB,QAAS,CACLiB,KAAM,EACNC,aAAc,OACdT,WAAY,OACZU,OAAQ,WAEZ5B,aAAc,CACV1E,OAAQ,UA4ZDlC,CAAmBW,I,mFChhBlC8H,KAASC,cAXM,CACXC,OAAQ,0CACRC,WAAY,6BACZC,YAAa,oCACbC,UAAW,aACXC,cAAe,yBACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAInBT,KAASU,YACMV,UAAf,E,SC+BMW,G,kDAEF,WAAY7N,GAAQ,IAAD,8BACf,cAAMA,IACDa,MAAQ,CACTD,UAAW,IAHA,E,yEAQuB,IAAdA,EAAa,EAAbA,UAExBQ,KAAKhB,SAAS,CAACQ,UAAUA,M,+BAGnB,IAAD,EAC6BQ,KAAKpB,MAA/BqB,EADH,EACGA,QAASyM,EADZ,EACYA,KAAMC,EADlB,EACkBA,OAEjBvH,EAASsH,EAAK,GAAM,IAAM,IAa1BjC,EACFiC,EAAK,EACL,kBAAC,KAAD,CAAU3I,MAAO,IAAKwB,OAAQ,KAE1B,kBAAC,KAAD,CACAqH,GAAI,IAAKC,GAAI,GAAIC,YAAa,GAAIC,YAAa,GAC/CC,WAAY,IAAKC,SAAU7H,EAAO8H,KAAK,UAAUC,aAAc,EAC/DC,QAAQ,QAAQC,KAAM,CAAC,CAAEnN,KAAM,OAAQb,MAAOqN,KACrC,cAARC,EACG,kBAAC,KAAD,CAAOtN,MAAM,cAAciO,SAAS,SAAS/M,UAAWN,EAAQsN,OAEhE,kBAAC,KAAD,CAAOlO,MAAM,SAASiO,SAAS,SAAS/M,UAAWN,EAAQsN,OAE/D,kBAAC,KAAD,CAAOlO,MAAOqN,EAAMY,SAAS,SAAS/M,UAAWN,EAAQuN,OACzD,kBAAC,KAAD,CAAOnO,MAAM,iBAAiBiO,SAAS,SAAS/M,UAAWN,EAAQwN,QAOvE,kBAAC,KAAD,CAAU1J,MAAO,IAAKwB,OAAQ,KAC1B,kBAAC,KAAD,CACAqH,GAAI,IAAKC,GAAI,GAAIC,YAAa,GAAIC,YAAa,GAC/CC,WAAY,EAAGC,SAAU,IAAKC,KAAK,OAAOC,aAAc,EACxDC,QAAQ,QAAQC,KAAM,CAAC,CAAEnN,KAAM,OAAQb,MAAO,MAE9C,kBAAC,KAAD,CAAOA,MAAM,cAAciO,SAAS,SAAS/M,UAAWN,EAAQyN,SASxE,OACI,kBAACtN,EAAA,EAAD,CAAOC,UAAW,GACboK,O,GArEOtH,IAAMC,WA2EfC,gBAjHA,SAAAC,GAAK,MAAK,CACrBqK,cAAc,CACV5J,MAAM,QACNwB,OAAO,QACPrE,aAAa,OACb4C,WAAY,WAGhB8J,iBAAiB,CACb7J,MAAM,QACNwB,OAAO,QACPrE,aAAa,OACb4C,WAAY,QAGhB0J,KAAK,CACDpE,SAAS,OACT1F,WAAW,MACXwJ,KAAM,QAEVO,IAAI,CACArE,SAAS,OACTyE,UAAW,sBACXX,KAAM,QAEVK,KAAK,CACDnE,SAAS,OACTyE,UAAW,uBACXX,KAAM,QAEVQ,KAAK,CACDtE,SAAS,OACT8D,KAAM,WAiFC7J,CAAmBoJ,I,mFCtG5BqB,G,kDAEF,WAAYlP,GAAQ,IAAD,8BACf,cAAMA,IASVmP,iBAAmB,SAAAjP,GACf,EAAKE,SAAS,CAAEgP,aAAclP,EAAMM,OAAOC,MAAM+C,SACjD,EAAKxD,MAAMsD,SAASpD,IAVpB,EAAKW,MAAQ,CACTuO,aAAe,GAGnB,EAAKD,iBAAmB,EAAKA,iBAAiBhO,KAAtB,gBANT,E,yEAemB,IAAVV,EAAS,EAATA,MACxBW,KAAKhB,SAAS,CAAEgP,aAAe3O,EAAM+C,W,0CAIrCpC,KAAKhB,SAAS,CAAEgP,aAAehO,KAAKpB,MAAMS,MAAM+C,W,+BAG1C,IACEnC,EAAWD,KAAKpB,MAAhBqB,QAIR,OACI,kBAACwB,EAAA,EAAD,CACIwM,SAAUjO,KAAKpB,MAAMqP,SACrBvM,GAAI1B,KAAKpB,MAAM8C,GACfE,MAAO5B,KAAKpB,MAAMgD,MAClBM,SAAUlC,KAAK+N,iBACf1O,MAAOW,KAAKpB,MAAMS,MAClBsC,QAAS3B,KAAKpB,MAAM+C,QACpBuM,UAAWlO,KAAKpB,MAAMsP,UACtBzE,WAAYzJ,KAAKpB,MAAM6K,WACvB0E,UAAWnO,KAAKpB,MAAMuP,UACtBC,KAAMpO,KAAKpB,MAAMwP,KACjB7N,UAAWP,KAAKpB,MAAM2B,UACtB8N,WAAYrO,KAAKP,MAAMuO,aAAa,IAAIhO,KAAKpB,MAAM6K,WAAW6E,UAC9DC,oBAAwBvO,KAAKP,MAAMuO,aAAahO,KAAKpB,MAAM6K,WAAW6E,UAAW,GAC7E,CAAC/N,UAAUN,EAAQO,MAEnB,CAACD,UAAUN,EAAQO,KAAMgO,OAAM,S,GA/ClBrL,IAAMC,WAsDxBC,gBAlEA,SAAAC,GAAK,MAAK,CACrB9C,KAAM,CACF8M,SAAU,WACVmB,MAAO,MACPC,OAAQ,MACR3D,OAAQ,qBA6DD1H,CAAmByK,IChB5Ba,G,kDAEF,WAAY/P,GAAQ,IAAD,8BACf,cAAMA,IACDa,MAAQ,CACTmP,UAAU,EACV7J,KAAMnG,EAAMiQ,QAAQ9J,KACpB4H,OAAQ/N,EAAMiQ,QAAQlC,QALX,E,yEAUoB,IAAXkC,EAAU,EAAVA,QAQxB7O,KAAKhB,SAAS,CAAC+F,KAAM8J,EAAQ9J,KAAM4H,OAAOkC,EAAQlC,W,+BAQ5C,IAAD,SACyE3M,KAAKpB,MAA3EqB,EADH,EACGA,QAAS4O,EADZ,EACYA,QAASC,EADrB,EACqBA,SAAUC,EAD/B,EAC+BA,SAAUC,EADzC,EACyCA,QAASC,EADlD,EACkDA,UAAWC,EAD7D,EAC6DA,QAG5DC,EAAW,IAAIC,MAAMP,EAAQQ,MAAMnC,KAAK,GAG9C,OACI,kBAAC/L,EAAA,EAAD,CAAMmO,MAAI,EAAClO,WAAS,EAACb,UAAS,UAAKN,EAAQsP,SAAb,YAAyBL,EAAUjP,EAAQuP,QAAU,GAArD,YAA2DvP,EAAQwP,YACjGpO,UAAU,SAASC,QAAQ,eAAeC,WAAW,UAE7C,kBAACqB,EAAA,EAAD,CAAMb,MAAM,UAAUc,KAAM,UAAYgM,EAAQa,QAC5C,kBAAClO,EAAA,EAAD,CAAYG,QAAQ,YAAYkN,EAAQa,SAK5Cb,EAAQQ,KAAO,EACX,kBAAClO,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,QAAQ,SAASC,WAAW,UACxD,kBAACC,EAAA,EAAD,CAAYG,QAAQ,aAApB,YACCwN,EAAS1M,KAAI,SAAC4E,EAAGpB,GAAJ,OAAW,kBAAC,KAAD,CAAuBtD,IAAKsD,EAAG1F,UAAWN,EAAQ0P,eAG3E,kBAACnO,EAAA,EAAD,CAAYG,QAAQ,WAApB,4BAIZ,kBAAC,GAAD,CAAW+K,KAAMmC,EAAQnC,KAAMC,OAAQ3M,KAAKP,MAAMkN,SAIjDuC,EACG,kBAAC/N,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,QAAQ,eAAef,UAAWN,EAAQwP,YACjD,eAApBzP,KAAKP,MAAMkN,OAEX3M,KAAKP,MAAMmP,SAOR,kBAAChE,GAAA,EAAD,CAAKhK,KAAK,QAAQmB,MAAM,UAAUpB,aAAW,MAAMJ,UAAWN,EAAQiJ,KACtEJ,QAAS,WACLkG,EAAQ,EAAKvP,MAAMsF,MACnB,EAAK/F,SAAS,CAAC4P,UAAS,MAIxB,kBAAC,KAAD,CAAUxF,SAAS,WAbtB,kBAACwB,GAAA,EAAD,CAAKhK,KAAK,QAAQmB,MAAM,UAAUpB,aAAW,MAAMJ,UAAWN,EAAQiJ,KACvEJ,QAAS,kBAAI,EAAK9J,SAAS,CAAC4P,UAAS,MAEjC,kBAAC,IAAD,CAAUxF,SAAS,WAaxB,GAIqB,eAApBpJ,KAAKP,MAAMkN,OACV,kBAAC/B,GAAA,EAAD,CAAKhK,KAAK,QAAQmB,MAAM,UAAUpB,aAAW,MAAMJ,UAAWN,EAAQiJ,KACvEJ,QAAS,WACLiG,IACA,EAAK/P,SAAS,CAAC2N,OAAO,YAItB,kBAAC,KAAD,CAAWvD,SAAS,WACf,kBAACwB,GAAA,EAAD,CAAKhK,KAAK,QAAQmB,MAAM,UAAUpB,aAAW,MAAMJ,UAAWN,EAAQiJ,KAC/EJ,QAAS,WACa,IAAf+F,EAAQnC,KACPoC,IAGAG,IAEJ,EAAKjQ,SAAS,CAAC2N,OAAO,iBAItB,kBAAC,KAAD,CAAevD,SAAS,YAG5B,GAKRyF,EAAQnC,KAAK,EACb1M,KAAKP,MAAMmP,SAEP,kBAAC,GAAD,CACYX,UAAQ,EACRvM,GAAG,oBACHE,MAAM,OACNM,SAAU,SAAC0N,GAAD,OAAK,EAAK5Q,SAAS,CAAC+F,KAAK6K,EAAExQ,OAAOC,SAC5CA,MAAOW,KAAKP,MAAMsF,KAClBpD,QAAQ,WACRuM,WAAS,EACTzE,WAAY,CACR6E,UAAW,OAI3B,kBAAC9M,EAAA,EAAD,CAAYG,QAAQ,QAAQpB,UAAWN,EAAQ4P,KAE3C,kBAAC,KAAD,CAAiB5O,MAAO,CAAEc,MAAO,OAAQ8L,UAAW,mBACnD7N,KAAKP,MAAMsF,KACZ,kBAAC,KAAD,CAAiB9D,MAAO,CAAEc,MAAO,WAItC,Q,GAzIDoB,IAAMC,WAiJbC,gBAtLA,SAAAC,GAAK,MAAK,CACrBiM,SAAU,CACNO,OAAQ,iBACR/E,OAAQ,MACR7J,aAAc,OAElByO,SAAU,CACN5N,MAAO,WAEXyN,QAAS,CACLM,OAAQ,qBAEZD,IAAK,CACDjM,QAAS,OACTrC,WAAY,SACZwO,UAAW,iBACXhF,OAAQ,MACRE,QAAS,OAEb/B,KAAM,CACF4G,OAAQ,oBACR/N,MAAO,UACP+B,WAAY,OACZ2H,UAAW,OACX,UAAW,CACPqE,OAAQ,iBACRhM,WAAY,SAIpB2L,WAAW,CACP1L,MAAO,sBAuJAV,CAAmBsL,IC9L5BqB,GAAO,IAAIC,KAAKC,MA0BhBC,G,kDAEF,WAAYvR,GAAQ,IAAD,8BACf,cAAMA,IAGDa,MAAQ,CACT0E,KAAMvF,EAAMuF,KACZkL,KAAM,GACN7P,UAAWZ,EAAMY,UACjB4Q,aAAc,EACdC,MAAO,GACPC,QAAS,GAIb,EAAKxB,SAAW,EAAKA,SAAS/O,KAAd,gBAChB,EAAKgP,SAAW,EAAKA,SAAShP,KAAd,gBAChB,EAAKkP,UAAY,EAAKA,UAAUlP,KAAf,gBACjB,EAAKiP,QAAU,EAAKA,QAAQjP,KAAb,gBACf,EAAKwQ,eAAiB,EAAKA,eAAexQ,KAApB,gBAlBP,E,yEAyBmC,IAAD,OAAzBoE,EAAyB,EAAzBA,KAAM3E,EAAmB,EAAnBA,UAAmB,EAAR6P,KAGzCrP,KAAKhB,SAAS,CAAEmF,OAAM3E,cAAa,WAC/B,EAAK+Q,eAAe/Q,EAAW2E,Q,6CAMnCqM,cAAcxQ,KAAKyQ,S,0CAInBzQ,KAAK0Q,YAAa,EAKd1Q,KAAK2Q,WAAa,OAGtB3Q,KAAKuQ,eAAevQ,KAAKP,MAAMD,UAAWQ,KAAKP,MAAM0E,Q,2CAInC,IAAD,OAEjBnE,KAAKyQ,MAAQG,aAAY,WACrB,EAAKL,eAAe,EAAK9Q,MAAMD,UAAW,EAAKC,MAAM0E,MACrD0M,QAAQC,IAAI,kBAAmB,EAAKrR,SACrC,O,qCAIQD,EAAW2E,GAAO,IAAD,OAGtB4M,EAAe,GACjBT,EAAU,EACdxE,GAASkF,WAAWC,IAAIjR,KAAK2Q,WAAa,iBAAiBO,KAAK,SAAS,SAACC,GACtE,IAAMC,EAAWD,EAAYxM,MAIvB0M,GAAY,IAAIvK,MAAOwK,UAAY,KAAM,IAAIxK,MAAOyK,WAAa,KAAM,IAAIzK,MAAO0K,cAGxF1F,GAASkF,WAAWC,IAAI,EAAKN,WAAa,SAASc,MAAMJ,GACpDH,KAAK,SAAS,SAACQ,GACZ,IAAMC,EAASD,EAAS/M,MAGxB,GAAe,OAAXgN,EAAiB,CAGjB,IAAK,IAAIhP,KAAOgP,EACZZ,EAAaK,EAASzO,IAAQgP,EAAOhP,GAGzC,IAIIyN,EAAcwB,EAAiBC,EAAmBC,EAAkBC,EAAgBC,EAJlFC,EAAe,GACjB5B,EAAQ,GAER6B,GAAc,EAIlB,GAAInB,EAAa5M,EAAKgO,QAAS,CAC3B,IAIIC,EAJAC,EAAUtB,EAAa5M,EAAKgO,QAE5BG,EAAYD,EAAQjQ,OACpBmQ,EAAYF,EAAQC,EAAY,GAIhCF,EADqB,UAArBG,EAAU5F,OACC4F,EAAUH,QAAU,MAGlB,IAAItL,MAAO0L,UAAYD,EAAUE,aAAe,IAAUF,EAAUH,QAAU,IAE/FF,GAAc,EACd9B,EAAekC,EACfV,EAAkBW,EAAU5F,OAC5BkF,EAAoBU,EAAUE,YAC9BX,EAAmBS,EAAUH,QAC7BL,EAAiBQ,EAAUG,SAC3BV,EAAgBO,EAAUxN,KAEtBsL,EADA+B,GAAW,GACH,CACJ1C,OAAQvL,EAAKgO,OACbzF,KAAM,EACNC,OAAQ,GACR5H,KAAM,GACNsK,KAAMiD,GAIF,CACJ5C,OAAQvL,EAAKgO,OACbzF,KAAM,GAAK1H,SAASoN,GACpBzF,OAAQ4F,EAAU5F,OAClB5H,KAAMwN,EAAUxN,KAChBsK,KAAMiD,EAAY,QAK1BjC,EAAQ,CACJX,OAAQvL,EAAKgO,OACbzF,KAAM,EACNC,OAAQ,GACR5H,KAAM,GACNsK,KAAM,GAKd7P,EAAUiD,KAAI,SAAA5C,GAEV,GAAIkR,EAAalR,GAAI,CACjB,IAIIuS,EAJAC,EAAUtB,EAAalR,GAEvByS,EAAYD,EAAQjQ,OACpBmQ,EAAYF,EAAQC,EAAY,IAGhCF,EADqB,UAArBG,EAAU5F,OACC4F,EAAUH,QAAU,MAGlB,IAAItL,MAAO0L,UAAYD,EAAUE,aAAe,IAAUF,EAAUH,QAAU,MAEhF,GACXH,EAAaU,KAAK,CACdjD,OAAQ7P,EACR6M,KAAM,EACNC,OAAQ,GACR5H,KAAM,GACNsK,KAAMiD,KAIVhC,GAAS,EACT2B,EAAaU,KAAK,CACdjD,OAAQ7P,EACR6M,KAAM,GAAK1H,SAASoN,GACpBzF,OAAQ4F,EAAU5F,OAClB5H,KAAMwN,EAAUxN,KAChBsK,KAAMiD,EAAY,UAM1BL,EAAaU,KAAK,CACdjD,OAAQ7P,EACR6M,KAAM,EACNC,OAAQ,GACR5H,KAAM,GACNsK,KAAM,OAMd6C,EACA,EAAKlT,SAAS,CACVqQ,KAAM4C,EACN5B,MAAOA,EACPD,eAAc0B,mBAAkBD,oBAAmBE,iBACnDH,kBAAiBI,kBAIrB,EAAKhT,SAAS,CACVqR,MAAOA,EACPhB,KAAM4C,QAMb,CACD,IAAIW,EAAU,GACVvC,EAAQ,CACRX,OAAQvL,EAAKgO,OACbzF,KAAM,EACNC,OAAQ,GACR5H,KAAM,GACNsK,KAAM,GAGV7P,EAAUiD,KAAI,SAACoQ,GACXD,EAAQD,KAAK,CACTjD,OAAQmD,EACRnG,KAAM,EACNC,OAAQ,GACR5H,KAAM,GACNsK,KAAM,OAId,EAAKrQ,SAAS,CAAEqQ,KAAMuD,EAASvC,MAAOA,WAKlDC,EAAQtQ,KAAKP,MAAM6Q,SACnBtQ,KAAKhB,SAAS,CAACsR,QAAQA,EAASwC,MAAK,IAAM,WACvC9C,GAAK+C,Y,iCAYb,IAAM1B,GAAY,IAAIvK,MAAOwK,UAAY,KAAM,IAAIxK,MAAOyK,WAAa,KAAM,IAAIzK,MAAO0K,cAElFwB,GAAM,IAAIlM,MAAO0L,UAEvB1G,GAASkF,WAAWC,IAAIjR,KAAK2Q,WAAa,SAASc,MAAMJ,GAAWI,MAAMzR,KAAKP,MAAM0E,KAAK8O,KACrFxB,MAAMzR,KAAKP,MAAM2Q,cAAc8C,IAAI,CAChCd,QAAS,EACTK,YAAaO,EACbN,SAAUM,EACVrG,OAAQ,aACR5H,KAAM,KAGd+G,GAASkF,WAAWC,IAAIjR,KAAK2Q,WAAa,aAAac,MAAMzR,KAAKP,MAAM0E,KAAK8O,KAAKxB,MAAMJ,GACnFI,MAAMzR,KAAKP,MAAM2Q,cAAc8C,IAAI,CAChCd,QAAS,EACTK,YAAaO,EACbN,SAAUM,EACVrG,OAAQ,aACR5H,KAAM,KAKd,IAAIsL,EAAQrQ,KAAKP,MAAM4Q,MACvBA,EAAQ,CACJX,OAAQ1P,KAAKP,MAAM0E,KAAKgO,OACxB9C,KAAMrP,KAAKP,MAAM2Q,aAEjBzD,OAAQ,aACR5H,KAAM,GACN2H,KAAM,IAEV1M,KAAKhB,SAAS,CACVqR,MAAOA,EACPD,aAAcpQ,KAAKP,MAAM2Q,aAAe,EACxC0B,iBAAkB,EAClBD,kBAAmBmB,EACnBjB,eAAgBiB,EAChBpB,gBAAiB,aACjBI,cAAe,GACfc,MAAM,IAIV9C,GAAK+C,S,kCAUL,IAAM1B,GAAY,IAAIvK,MAAOwK,UAAY,KAAM,IAAIxK,MAAOyK,WAAa,KAAM,IAAIzK,MAAO0K,cAElFwB,GAAM,IAAIlM,MAAO0L,UAGvB1G,GAASkF,WAAWC,IAAIjR,KAAK2Q,WAAa,SAASc,MAAMJ,GAAWI,MAAMzR,KAAKP,MAAM0E,KAAK8O,KACrFxB,MAAMzR,KAAKP,MAAM2Q,aAAe,GAAG8C,IAAI,CACpCd,QAASpS,KAAKP,MAAMqS,iBACpBW,YAAaO,EACbN,SAAU1S,KAAKP,MAAMsS,eACrBpF,OAAQ,aACR5H,KAAM/E,KAAKP,MAAMuS,gBAGrBlG,GAASkF,WAAWC,IAAIjR,KAAK2Q,WAAa,aAAac,MAAMzR,KAAKP,MAAM0E,KAAK8O,KAAKxB,MAAMJ,GACvFI,MAAMzR,KAAKP,MAAM2Q,aAAe,GAAG8C,IAAI,CACpCd,QAASpS,KAAKP,MAAMqS,iBACpBW,YAAaO,EACbN,SAAU1S,KAAKP,MAAMsS,eACrBpF,OAAQ,aACR5H,KAAM/E,KAAKP,MAAMuS,gBAKzB,IAAI3B,EAAQrQ,KAAKP,MAAM4Q,MACvBA,EAAM1D,OAAS,aAEf3M,KAAKhB,SAAS,CACVqR,MAAOA,EACPwB,kBAAmBmB,EACnBpB,gBAAiB,iB,iCASrB,IAAMP,GAAY,IAAIvK,MAAOwK,UAAY,KAAM,IAAIxK,MAAOyK,WAAa,KAAM,IAAIzK,MAAO0K,cAElFwB,GAAM,IAAIlM,MAAO0L,UAEnBW,EAAcH,EAAMhT,KAAKP,MAAMoS,kBAAqB7R,KAAKP,MAAMqS,iBAEnEhG,GAASkF,WAAWC,IAAIjR,KAAK2Q,WAAa,SAASc,MAAMJ,GAAWI,MAAMzR,KAAKP,MAAM0E,KAAK8O,KACrFxB,MAAMzR,KAAKP,MAAM2Q,aAAe,GAAG8C,IAAI,CACpCd,QAASe,EACTV,YAAaO,EACbN,SAAU1S,KAAKP,MAAMsS,eACrBpF,OAAQ,QACR5H,KAAM/E,KAAKP,MAAMuS,gBAIzBlG,GAASkF,WAAWC,IAAIjR,KAAK2Q,WAAa,aAAac,MAAMzR,KAAKP,MAAM0E,KAAK8O,KAAKxB,MAAMJ,GACnFI,MAAMzR,KAAKP,MAAM2Q,aAAe,GAAG8C,IAAI,CACpCd,QAASe,EACTV,YAAaO,EACbN,SAAU1S,KAAKP,MAAMsS,eACrBpF,OAAQ,QACR5H,KAAM/E,KAAKP,MAAMuS,gBAKzB,IAAI3B,EAAQrQ,KAAKP,MAAM4Q,MACvBA,EAAM1D,OAAS,QACf3M,KAAKhB,SAAS,CACVqR,MAAOA,EACPyB,iBAAkBqB,EAClBtB,kBAAmBmB,EACnBpB,gBAAiB,Y,8BAKjB/B,GAIJ,IAAMwB,GAAY,IAAIvK,MAAOwK,UAAY,KAAM,IAAIxK,MAAOyK,WAAa,KAAM,IAAIzK,MAAO0K,cAGxF1F,GAASkF,WAAWC,IAAIjR,KAAK2Q,WAAa,SAASc,MAAMJ,GAAWI,MAAMzR,KAAKP,MAAM0E,KAAK8O,KACrFxB,MAAMzR,KAAKP,MAAM2Q,aAAe,GAAGqB,MAAM,QAAQyB,IAAIrD,GAE1D/D,GAASkF,WAAWC,IAAIjR,KAAK2Q,WAAa,aAAac,MAAMzR,KAAKP,MAAM0E,KAAK8O,KAAKxB,MAAMJ,GACnFI,MAAMzR,KAAKP,MAAM2Q,aAAe,GAAGqB,MAAM,QAAQyB,IAAIrD,GAI1D,IAAIQ,EAAQrQ,KAAKP,MAAM4Q,MACvBA,EAAMtL,KAAO8K,EAEb7P,KAAKhB,SAAS,CACVqR,MAAOA,EACP2B,cAAenC,EACfiD,MAAM,M,oCAMV9S,KAAKhB,SAAS,CAAE8T,MAAM,M,+BAKhB,IAAD,SACgC9S,KAAKpB,MAAlCqB,EADH,EACGA,QADH,EACYT,UADZ,EACuB2E,KAQ5B,OANA0M,QAAQC,IAAI,gBAAiB9Q,KAAKP,MAAM4P,MACxCwB,QAAQC,IAAI,kBAAmB9Q,KAAKP,MAAM4Q,OAMtC,kBAACjQ,EAAA,EAAD,CAAOC,UAAW,GACd,kBAACc,EAAA,EAAD,CAAMC,WAAS,EAACb,UAAWN,EAAQ0I,MAAOtH,UAAU,MAAMC,QAAQ,gBAAgBC,WAAW,UACzF,kBAACmH,GAAA,EAAD,CAAa/H,aAAW,cAEpB,kBAACa,EAAA,EAAD,CAAYO,MAAM,WAAlB,WAAoC,IAAI+E,MAAOsM,aAAe,KAAM,IAAItM,MAAOuM,cAAgB,KAAM,IAAIvM,MAAOwM,iBAAhH,OAGR,kBAACnS,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,QAAQ,UACpC,kBAAC,GAAD,CAAS4N,SAAS,EAAML,QAAS7O,KAAKP,MAAM4Q,MAAO1N,IAAK,EAAGmM,SAAU9O,KAAK8O,SAAUC,SAAU/O,KAAK+O,SAAUC,QAAShP,KAAKgP,QAASC,UAAWjP,KAAKiP,aAGxJ,kBAAC9N,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,QAAQ,cACpC,kBAACE,EAAA,EAAD,CAAYjB,UAAWN,EAAQ0I,OAA/B,cAGJ,kBAACxH,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,QAAQ,cAEhCtB,KAAKP,MAAM4P,KAAK5M,KAAI,SAAC5C,EAAG6F,GAAJ,OAChB,kBAAC,GAAD,CAASwJ,SAAS,EAAOL,QAAShP,EAAG8C,IAAK+C,EAAI,EAAGoJ,SAAU,EAAKA,SAAUC,SAAU,EAAKA,SAAUC,QAAS,EAAKA,QAASC,UAAW,EAAKA,gBAItJ,kBAACsE,GAAA,EAAD,CACIC,aAAc,CAAEC,SAAU,SAAUC,WAAY,SAChDC,iBAAkB,KAClBC,QAAS,WAAQ,EAAK5U,SAAS,CAAE8T,MAAM,KACvCA,KAAM9S,KAAKP,MAAMqT,KACjBnQ,IAAK,gBAEL,kBAACkR,GAAA,EAAD,CAAiBtT,UAAWN,EAAQ6T,MAChCC,QAAQ,0B,GApcZ5Q,IAAMC,WA6cXC,gBApeA,SAAAC,GAAK,MAAK,CACrBqF,MAAO,CACHsC,QAAS,GACT/J,aAAc,GAGlBqO,SAAU,CACNtE,QAAS,OACT+I,UAAW,QACXC,SAAU,QACVnE,OAAQ,iBACR/E,OAAQ,MACR7J,aAAc,OAGlB4S,MAAO,CACHI,gBAAiB,UACjBnS,MAAO,WAmdAsB,CAAmB8M,I,0JClY5BgE,G,kDAEF,WAAYvV,GAAQ,IAAD,uBACf,cAAMA,IA+CVwV,MAAQ,SAAAtV,GACJ,EAAKE,UAAS,SAAAS,GACV,IAAM4U,EAAQ5U,EAAM0G,WAMpB,OALAkO,EAAM1B,KAAK,CAAEjR,GAAI2S,EAAMjS,OAAQiE,OAAQ,GAAIC,OAAQ,GAAIc,SAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,KAChF,2BACD3H,GADC,IAEJ0G,WAAYkO,QAtDL,EA6DnBC,eAAiB,SAAAxV,GACb,IAAMyV,EAAczV,EAAMM,OAAOC,MACjC,EAAKL,SAAS,CAAEwV,UAAU,2BAAM,EAAK/U,MAAM+U,WAAlB,IAA6BrK,SAAUoK,OA/DjD,EAkEnBE,SAAW,SAAAC,GACP,IAAML,EAAQ,EAAK5U,MAAM0G,WAAWvG,QAAO,SAACC,GAAD,OAAQA,EAAE6B,KAAOgT,KAC5D,EAAK1V,SAAS,CAAEmH,WAAYkO,KApEb,EAuEnBM,YAAc,SAAA7V,GACV,EAAKE,SAAS,CAAEwV,UAAU,2BAAM,EAAK/U,MAAM+U,WAAlB,IAA6BxO,MAAOlH,EAAMM,OAAOC,WAxE3D,EA0EnBuV,kBAAoB,SAAA9V,GAChB,EAAKE,SAAS,CAAEwV,UAAU,2BAAM,EAAK/U,MAAM+U,WAAlB,IAA6BtO,YAAapH,EAAMM,OAAOC,WA3EjE,EA6EnBwV,kBAAoB,SAAA/V,GAChB,EAAKE,SAAS,CAAEwV,UAAU,2BAAM,EAAK/U,MAAM+U,WAAlB,IAA6BjO,YAAazH,EAAMM,OAAOC,WA9EjE,EAgFnByV,eAAiB,SAAChW,EAAO4C,GACrB,IAAM2S,EAAQ,EAAK5U,MAAM0G,WAAW1D,KAAI,SAAC5C,EAAG6F,GAIxC,OAHI7F,EAAE6B,KAAOA,IACT7B,EAAEwG,OAASvH,EAAMM,OAAOC,OAErBQ,KAEX,EAAKb,SAAS,CAAEmH,WAAYkO,KAvFb,EAyFnBU,eAAiB,SAACjW,EAAO4C,GACrB,IAAM2S,EAAQ,EAAK5U,MAAM0G,WAAW1D,KAAI,SAAC5C,EAAG6F,GAIxC,OAHI7F,EAAE6B,KAAOA,IACT7B,EAAEyG,OAASxH,EAAMM,OAAOC,OAErBQ,KAEX,EAAKb,SAAS,CAAEmH,WAAYkO,KAhGb,IAEPW,EAAYpW,EAAZoW,QACFR,EAAY,CACd9S,GAAIsT,EAAQtT,GACZsE,MAAOgP,EAAQhP,MACfE,YAAa8O,EAAQ9O,YACrBK,YAAayO,EAAQzO,YACrB4D,SAAU6K,EAAQ7K,UAEhBhE,EAAa,GAVJ,OAWf6O,EAAQ7O,WAAWX,SAAQ,SAAC3F,EAAG6F,GAC3BS,EAAWwM,KAAK,CAAEjR,GAAIgE,EAAGW,OAAQxG,EAAEwG,OAAQC,OAAQzG,EAAEyG,OAAQc,SAAUvH,EAAEuH,cAI7E,EAAK3H,MAAQ,CACT+U,YAAWrO,cAGf,EAAKiO,MAAQ,EAAKA,MAAMrU,KAAX,gBACb,EAAK0U,SAAW,EAAKA,SAAS1U,KAAd,gBAChB,EAAKuU,eAAiB,EAAKA,eAAevU,KAApB,gBACtB,EAAK4U,YAAc,EAAKA,YAAY5U,KAAjB,gBACnB,EAAK6U,kBAAoB,EAAKA,kBAAkB7U,KAAvB,gBACzB,EAAK8U,kBAAoB,EAAKA,kBAAkB9U,KAAvB,gBACzB,EAAK+U,eAAiB,EAAKA,eAAe/U,KAApB,gBACtB,EAAKgV,eAAiB,EAAKA,eAAehV,KAApB,gBA3BP,E,yEA8BqB,IAAZiV,EAAW,EAAXA,QAClBR,EAAY,CACd9S,GAAIsT,EAAQtT,GACZsE,MAAOgP,EAAQhP,MACfE,YAAa8O,EAAQ9O,YACrBK,YAAayO,EAAQzO,YACrB4D,SAAU6K,EAAQ7K,UAGhBhE,EAAa,GACnB6O,EAAQ7O,WAAWX,SAAQ,SAAC3F,EAAG6F,GAC3BS,EAAWwM,KAAK,CAAEjR,GAAIgE,EAAGW,OAAQxG,EAAEwG,OAAQC,OAAQzG,EAAEyG,OAAQc,SAAUvH,EAAEuH,cAI7EpH,KAAKhB,SAAS,CAAEwV,YAAWrO,iB,+BAuDrB,IAAD,SAE8CnG,KAAKpB,MAAhDqB,EAFH,EAEGA,QAASgV,EAFZ,EAEYA,WAAYC,EAFxB,EAEwBA,kBAC7B,OACI,kBAACC,GAAA,EAAD,CAAQC,YAAU,EAACtC,KAAMmC,EAAYrB,QAAS,kBAAMsB,EAAkB,MAAO,EAAKzV,MAAM+U,UAAW,EAAK/U,MAAM0G,cAC1G,kBAACkP,GAAA,EAAD,CAAQ9U,UAAWN,EAAQqV,QACvB,kBAACC,GAAA,EAAD,CAAShV,UAAWN,EAAQuV,SACxB,kBAACC,GAAA,EAAD,CAAYC,KAAK,QAAQ3T,MAAM,UAAU+G,QAAS,kBAAMoM,EAAkB,MAAO,EAAKzV,MAAM+U,UAAW,EAAK/U,MAAM0G,aAAaxF,aAAW,SACtI,kBAAC,KAAD,OAEJ,kBAACa,EAAA,EAAD,CAAYG,QAAQ,KAAKpB,UAAWN,EAAQ+F,OAA5C,YAGA,kBAAC6C,GAAA,EAAD,CAAQM,UAAW,kBAAC,KAAD,MAAcwM,WAAS,EAAC5T,MAAM,UAAUJ,QAAQ,WAAWmH,QAAS,kBAAMoM,EAAkB,MAAO,EAAKzV,MAAM+U,UAAW,EAAK/U,MAAM0G,cAAvJ,UAKR,kBAAChF,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,QAAQ,SAASf,UAAWN,EAAQ2V,KAAMC,QAAS,GAC/E,kBAAC1U,EAAA,EAAD,CAAMmO,MAAI,EAACwG,IAAI,EAAOC,IAAI,EAAOC,GAAI,EAAGC,GAAI,EAAGC,GAAI,IAEnD,kBAAC/U,EAAA,EAAD,CAAMC,WAAS,EAACkO,MAAI,EAACwG,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGL,QAAS,EAAGvU,QAAQ,UAC1E,kBAACE,EAAA,EAAD,CAAYG,QAAQ,WAAWpB,UAAWN,EAAQkW,KAAlD,aAEA,kBAAChV,EAAA,EAAD,CAAMmO,MAAI,EAAClO,WAAS,EAACC,UAAU,MAAMwU,QAAS,EAAGtU,WAAW,SAASD,QAAQ,iBACzE,kBAACH,EAAA,EAAD,CAAMmO,MAAI,EAACwG,GAAI,GACX,kBAAC,GAAD,CACI7H,UAAQ,EACRvM,GAAG,oBACHE,MAAM,YACNM,SAAUlC,KAAK2U,YACftV,MAAOW,KAAKP,MAAM+U,UAAUxO,MAC5BrE,QAAQ,WACRuM,WAAS,EACTzE,WAAY,CACR6E,UAAW,OAIvB,kBAACnN,EAAA,EAAD,CAAMmO,MAAI,EAACwG,GAAI,GACX,kBAACM,GAAA,EAAD,CAAazU,QAAQ,WAAWpB,UAAWN,EAAQoW,aAC/C,kBAACC,GAAA,EAAD,CAAY5U,GAAG,oCAAoCnB,UAAWN,EAAQkK,UAAtE,cAIA,kBAACoM,GAAA,EAAD,CACIC,QAAQ,oCACR9U,GAAG,8BACHrC,MAAOW,KAAKP,MAAM+U,UAAUrK,SAC5BjI,SAAUlC,KAAKsU,gBAGf,kBAACmC,EAAA,EAAD,CAAUpX,MAAO,iBAAjB,iBACA,kBAACoX,EAAA,EAAD,CAAUpX,MAAO,WAAjB,WACA,kBAACoX,EAAA,EAAD,CAAUpX,MAAO,QAAjB,QACA,kBAACoX,EAAA,EAAD,CAAUpX,MAAO,YAAjB,YACA,kBAACoX,EAAA,EAAD,CAAUpX,MAAO,SAAjB,aAOhB,kBAAC,GAAD,CACI4O,UAAQ,EACRvM,GAAG,+BACHE,MAAM,cACNM,SAAUlC,KAAK4U,kBACfvV,MAAOW,KAAKP,MAAM+U,UAAUtO,YAC5BvE,QAAQ,WACRuM,WAAS,EACTC,WAAS,EACTC,KAAM,EACN3E,WAAY,CACR6E,UAAW,OAGnB,kBAAC9M,EAAA,EAAD,CAAYG,QAAQ,WAAWpB,UAAWN,EAAQkW,KAAlD,eAEInW,KAAKP,MAAM0G,WAAW1D,KAAI,SAAC2D,EAAIV,GAE3B,OACI,kBAACvE,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMJ,MAAO,CAAEgK,QAAS,QAAUtI,IAAKyD,EAAG1E,GAAIH,WAAW,UAC/E,kBAACJ,EAAA,EAAD,CAAMmO,MAAI,EAAClO,WAAS,EAACE,QAAQ,SAASwU,GAAI,EAAGnT,IAAK+C,GAC9C,kBAACgR,EAAA,EAAD,CAAQ/U,QAAQ,UAAUpB,UAAWN,EAAQe,KAAM2B,IAAK+C,GACpD,kBAAC,KAAD,QAIR,kBAACvE,EAAA,EAAD,CAAMmO,MAAI,EAACwG,GAAI,GACX,kBAAC,GAAD,CACI7H,UAAQ,EACRrM,MAAM,aACNM,SAAU,SAAC0N,GAAD,OAAO,EAAKkF,eAAelF,EAAGxJ,EAAG1E,KAC3CrC,MAAO+G,EAAGC,OACV1E,QAAQ,WACRV,MAAO,CAAE8C,MAAO,QAChBmK,WAAS,EACTzE,WAAY,CACR6E,UAAW,QAIvB,kBAACnN,EAAA,EAAD,CAAMmO,MAAI,EAACwG,GAAI,GACX,kBAAC,GAAD,CACI7H,UAAQ,EACRrM,MAAM,gBACNM,SAAU,SAAC0N,GAAD,OAAO,EAAKmF,eAAenF,EAAGxJ,EAAG1E,KAC3CrC,MAAO+G,EAAGE,OACV3E,QAAQ,WACRV,MAAO,CAAE8C,MAAO,QAChB0F,WAAY,CACR6E,UAAW,MAIvB,kBAACnN,EAAA,EAAD,CAAMC,WAAS,EAACE,QAAQ,SAASgO,MAAI,EAACwG,GAAI,GAEtC,kBAAC,KAAD,CAAY1M,SAAS,QAAQN,QAAS,kBAAM,EAAK2L,SAASrO,EAAG1E,KAAKnB,UAAWN,EAAQ0W,iBAYzG,kBAACxV,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASE,WAAW,SAASN,MAAO,CAAE8J,OAAQ,SACpE,kBAAC5J,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASE,WAAW,SAASD,QAAQ,UAC3D,kBAACsJ,GAAA,EAAD,CAAK7I,MAAM,UAAUpB,aAAW,MAAMJ,UAAWN,EAAQuL,eACrD1C,QAAS9I,KAAKoU,OAEd,kBAAC,IAAD,OAEJ,kBAAC5S,EAAA,EAAD,CAAYG,QAAQ,WAApB,uBAEJ,kBAAC,GAAD,CACAsM,UAAQ,EACRvM,GAAG,iCACHE,MAAM,wBACNM,SAAUlC,KAAK6U,kBACfxV,MAAOW,KAAKP,MAAM+U,UAAUjO,YAC5B5E,QAAQ,WACRpB,UAAWN,EAAQ2W,KACnB1I,WAAS,EACTC,WAAS,EACTC,KAAM,EACN3E,WAAY,CACR6E,UAAW,OAGf,kBAACnN,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,QAAQ,eAAeL,MAAO,CAAEkK,WAAY,SACxE,kBAACtC,GAAA,EAAD,CACIlH,QAAQ,YACRI,MAAM,UACNxB,UAAWN,EAAQuL,eACnBrC,UAAW,kBAAC,KAAD,MACXL,QAAS,kBAAMoM,EAAkB,MAAO,EAAKzV,MAAM+U,UAAW,EAAK/U,MAAM0G,cAL7E,UASA,kBAAC0C,GAAA,EAAD,CACIlH,QAAQ,YACRI,MAAM,UACNxB,UAAWN,EAAQuL,eACnBrC,UAAW,kBAAC,KAAD,MACXL,QAAS,kBAAMoM,EAAkB,SAAU,EAAKzV,MAAM+U,UAAW,EAAK/U,MAAM0G,cALhF,UASA,kBAAC0C,GAAA,EAAD,CACIlH,QAAQ,YACRI,MAAM,UACNxB,UAAWN,EAAQuL,eACnBrC,UAAW,kBAAC,KAAD,MACXL,QAAS,kBAAMoM,EAAkB,MAAO,EAAKzV,MAAM+U,UAAW,EAAK/U,MAAM0G,cAL7E,WAaZ,kBAAChF,EAAA,EAAD,CAAMmO,MAAI,EAACwG,IAAI,EAAOC,IAAI,EAAOC,GAAI,EAAGC,GAAI,EAAGC,GAAI,U,GAhSpD/S,IAAMC,WA2SVC,gBA3YA,SAAAC,GAAK,MAAK,CACrB9C,KAAM,CACFsD,WAAY,UACZmH,QAAS,QAEbxH,KAAM,CACFC,WAAY,IACZuH,QAAS,QAEbtH,YAAa,CACTC,QAAS,OACTC,eAAgB,SAChBtC,WAAY,UAEhByI,QAAS,CACLpG,QAAS,OACTC,eAAgB,SAChBtC,WAAY,SACZ0J,QAAS,QAEblB,IAAK,CACDnG,QAAS,OACTC,eAAgB,gBAChBtC,WAAY,SACZ0J,QAAS,OACTC,cAAe,MACfnH,MAAO,QAEXrB,IAAK,CACDkB,QAAS,OAETsH,cAAe,SACf3J,WAAY,cAEhBoH,MAAO,CACHsC,QAAS,IAEbf,MAAO,CACHhJ,aAAc,MACd4O,OAAQ,iBACR7E,QAAS,QAEbG,KAAM,CACF1H,WAAY,IACZ0F,SAAU,IAEdiC,WAAY,CACRjC,SAAU,IAEdlD,YAAa,CACToF,cAAe,QAEnBsL,KAAM,CACF9L,UAAW,QAEfU,eAAgB,CACZ1H,WAAY,OACZ,UAAW,CACP/B,MAAO,OACP+B,WAAY,SAGpB9C,KAAM,CACF8C,WAAY,QAEhBwR,OAAQ,CACJhI,SAAU,WACVxJ,WAAY,QAEhB0R,QAAS,CACL3R,eAAgB,iBAEpB+R,KAAM,CACF3K,QAAS,QAEbd,SAAU,CACNrG,WAAY,OACZmH,QAAS,OAEboL,YAAa,CACTtS,MAAO,QAEXoS,IAAK,CACDhL,WAAY,OACZ/B,SAAU,OACVyN,cAAe,OACfrT,UAAW,SACXO,MAAO,QAEX4S,UAAW,CACP9K,OAAQ,cAiTDxI,CAAmB8Q,I,yGC7U5B2C,G,kDAEF,WAAYlY,GAAQ,IAAD,6BACf,cAAMA,IAEDmY,SAAW,CACZC,WAAY,QACZC,cAAe,CAACnL,GAASoL,KAAKC,mBAAmBC,aACjDC,UAAW,CACPC,cAAe,kBAAM,KAPd,E,qDAeT,IAAD,EACsBtX,KAAKpB,MAAxBqB,EADH,EACGA,QADH,EACYqD,MAGjB,OACI,kBAAClD,EAAA,EAAD,CAAOG,UAAWN,EAAQO,KAAMH,UAAW,GACvC,kBAACD,EAAA,EAAD,CAAOC,UAAW,EAAGE,UAAWN,EAAQsX,UAEpC,kBAAC/V,EAAA,EAAD,CAAYG,QAAQ,KAAKpB,UAAWN,EAAQuX,OACxC,kBAAC5U,EAAA,EAAD,CAAMC,KAAK,IAAI4U,UAAU,OAAO1V,MAAM,eAAtC,SAEJ,kBAACP,EAAA,EAAD,CAAYG,QAAQ,WAApB,gDACA,kBAACH,EAAA,EAAD,CAAYG,QAAQ,WAApB,kCACA,kBAAC,KAAD,CACIoV,SAAU/W,KAAK+W,SACfW,aAAc5L,GAASoL,SAE3B,kBAACrM,GAAA,EAAD,CAAS5J,MAAO,CAAE8C,MAAO,MAAOgH,OAAQ,UACxC,kBAAC5J,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASiO,MAAI,EAACwG,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACrE,kBAAC1U,EAAA,EAAD,CAAYG,QAAQ,aAApB,aAA0C,2BAAG,oDAA7C,UAAmF,2BAAG,qDAAtF,UAA6H,2BAAG,6CAAhI,uNAIA,kBAACkH,GAAA,EAAD,CAAQ9G,MAAM,UAAUJ,QAAQ,WAAYpB,UAAWN,EAAQ0X,QAAS7O,QAAS,kBAAOC,OAAOC,SAASnG,KAAO,2CAA/G,0BAKR,kBAAC1B,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASC,QAAQ,SAASC,WAAW,SAAShB,UAAWN,EAAQ2X,SAAUvX,UAAW,GAC5G,kBAACc,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASC,QAAQ,SAASC,WAAW,SAAS+N,MAAI,EAACwG,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAC1G,kBAAC1U,EAAA,EAAD,CAAYjB,UAAWN,EAAQ4X,MAA/B,iBAGA,kBAACrW,EAAA,EAAD,CAAYG,QAAQ,QAAQV,MAAO,CAAEuC,UAAW,YAAhD,0YAEA,6BACA,6BAHA,o8BAKA,kBAAChC,EAAA,EAAD,CAAYG,QAAQ,KAAKV,MAAO,CAAEuC,UAAW,OAAQO,MAAO,SAA5D,uDAGA,kBAACvC,EAAA,EAAD,CAAYG,QAAQ,KAAKV,MAAO,CAAEuC,UAAW,QAASO,MAAO,SAA7D,sBAKR,kBAAC5C,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASC,QAAQ,SAASC,WAAW,SAAShB,UAAWN,EAAQ6X,SAAUzX,UAAW,GAC5G,kBAACc,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASiO,MAAI,EAACwG,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAGrE,kBAAC1U,EAAA,EAAD,CAAYG,QAAQ,KAAKpB,UAAWN,EAAQ4X,MAA5C,wCAIA,kBAACrW,EAAA,EAAD,CAAYG,QAAQ,KAAKpB,UAAWN,EAAQ8X,KAA5C,uDAGA,kBAACvW,EAAA,EAAD,qaACmZ,6BAAS,8BAC5Z,kBAACA,EAAA,EAAD,CAAYG,QAAQ,KAAKpB,UAAWN,EAAQ8X,KAA5C,yCACA,kBAACvW,EAAA,EAAD,6+BACm+B,6BAAS,8BAC5+B,kBAACA,EAAA,EAAD,CAAYG,QAAQ,KAAKpB,UAAWN,EAAQ8X,KAA5C,qBACA,kBAACvW,EAAA,EAAD,2YAC2X,6BAAS,8BAGpY,kBAACA,EAAA,EAAD,CAAYG,QAAQ,WAApB,4GAC6G,uBAAGkB,KAAK,wCAAR,SAD7G,KACuK,uBAAGA,KAAK,wDAAR,UADvK,QACqP,uBAAGA,KAAK,4BAAR,SADrP,OAMR,kBAAC1B,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASC,QAAQ,SAASC,WAAW,SAAShB,UAAWN,EAAQ2X,SAAUvX,UAAW,GAG5G,kBAACc,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASC,QAAQ,SAASC,WAAW,SAAS+N,MAAI,EAACwG,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAC1G,kBAAC1U,EAAA,EAAD,CAAYjB,UAAWN,EAAQ4X,MAA/B,0BAGA,kBAACrW,EAAA,EAAD,CAAYG,QAAQ,QAAQV,MAAO,CAAEuC,UAAW,YAAhD,qtBAC8rB,6BAC9rB,6BAFA,iyBAKI,6BAAS,6BALb,mPAQJ,kBAACrC,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,QAAQ,SAASC,WAAW,UAE5D,kBAACJ,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASC,QAAQ,SAASC,WAAW,SAAS+N,MAAI,EAACwG,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAC/G,yBAAM3V,UAAWN,EAAQ+X,IAAKC,IAAKC,OACnB,kBAAC1W,EAAA,EAAD,uBAKhB,kBAACL,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASC,QAAQ,SAASC,WAAW,SAAS+N,MAAI,EAACwG,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAC/G,yBAAM3V,UAAWN,EAAQ+X,IAAIC,IAAKE,OAClB,kBAAC3W,EAAA,EAAD,8BAKhB,kBAACL,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASC,QAAQ,SAASC,WAAW,SAAS+N,MAAI,EAACwG,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACjH,yBAAK3V,UAAWN,EAAQ+X,IAAKC,IAAKG,OAClC,kBAAC5W,EAAA,EAAD,8DASA,kBAACL,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASC,QAAQ,SAASC,WAAW,SAAS+N,MAAI,EAACwG,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAC1G,kBAAC1U,EAAA,EAAD,CAAYjB,UAAWN,EAAQ4X,MAA/B,kBAGA,kBAACrW,EAAA,EAAD,CAAYG,QAAQ,QAAQV,MAAO,CAAEuC,UAAW,YAAhD,mVAEA,6BAFA,8BAGA,6BAHA,gGAIA,6BAJA,2CAMJ,kBAACrC,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,QAAQ,SAASC,WAAW,UAG5D,kBAACJ,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASC,QAAQ,SAASC,WAAW,SAAS+N,MAAI,EAACwG,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAC/G,yBAAK3V,UAAWN,EAAQ+X,IAAKC,IAAKI,OAClC,kBAAC7W,EAAA,EAAD,yDAMA,kBAACqH,GAAA,EAAD,CAAQ9G,MAAM,UAAUJ,QAAQ,WAAWpB,UAAWN,EAAQ0X,QAAS7O,QAAS,kBAAOC,OAAOC,SAASnG,KAAO,2CAA9G,0BAKJ,kBAAC1B,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASC,QAAQ,SAASC,WAAW,SAAShB,UAAWN,EAAQ6X,SAAUzX,UAAW,GAC5G,kBAACc,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASC,QAAQ,SAASC,WAAW,SAAU+N,MAAI,EAACwG,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAC3G,kBAAC1U,EAAA,EAAD,8VAEA,6BAFA,mDAEyD,uBAAGqB,KAAK,6CAAR,iBAFzD,IAGA,6BAAS,6BAHT,oHAIiH,uBAAGA,KAAK,kCAAR,eAJjH,+EAMA,kBAACrB,EAAA,EAAD,gD,GAtKA2B,IAAMC,WAkLfC,gBA/OA,SAAAC,GAAK,MAAK,CACrB9C,KAAM,CACFsD,WAAY,OACZwU,SAAU,EACV9U,UAAW,SACXwQ,UAAW,QACXjJ,OAAQ,OAEZyM,MAAO,CACH9T,WAAY,IACZmI,OAAQ,UACR9J,MAAO,OACPkJ,QAAS,OACTS,aAAc,QAElB6L,SAAU,CACN,QAAW,OACX,cAAiB,SACjB,eAAkB,SAClB,WAAc,SACdxM,OAAQ,OACRW,aAAc,QAElBkM,SAAU,CACN3M,QAAS,OACTnH,WAAY,UACZ/B,MAAO,OACPb,aAAc,MACdsC,UAAW,WAEfsU,SAAU,CACN7M,QAAS,OACTlJ,MAAO,OACPb,aAAc,MACdsC,UAAW,WAEfqU,KAAM,CACFU,cAAe,YACf1B,cAAe,OACfnT,WAAY,IACZ0F,SAAU,OACV0B,UAAW,OACXY,aAAc,OACdlI,UAAW,UAEfuU,IAAK,CACDvU,UAAW,QAEfwU,IAAI,CACAjU,MAAO,OACP+L,OAAQ,oBACR5O,aAAc,QAElByW,QAAQ,CACJ5T,MAAO,OACPgH,OAAQ,eAwLD1H,CAAmByT,I,+DC/O5B0B,GAAYC,EAAQ,KA8DpBC,G,kDAIF,WAAY9Z,GAAQ,IAAD,uBACf,cAAMA,IAwDV2J,aAAe,SAACzJ,GACZ,GAAK,EAAKW,MAAM6I,YAMX,CACD,EAAKtJ,SAAS,CAAEsJ,aAAc,EAAK7I,MAAM6I,cAEzC,IAAMqQ,EAAWC,OAAOC,KAAK,EAAKpZ,MAAMqZ,YAAYlZ,QAAO,SAAAC,GAEvD,OAAO,EAAKJ,MAAMqZ,WAAWjZ,KAAO,EAAKJ,MAAMsZ,iBAGnDjN,GAASkF,WAAWC,IAAI,EAAKN,WAAa,aAAe,EAAKlR,MAAMuZ,QAAQ/F,IAAM,IAAM0F,GAAUM,aAdzE,CACzB,EAAKja,SAAS,CAAEsJ,aAAc,EAAK7I,MAAM6I,cAEpBwD,GAASkF,WAAWC,IAAI,EAAKN,WAAa,aAAe,EAAKlR,MAAMuZ,QAAQ/F,KAAKN,OACzFO,IAAI,EAAKzT,MAAMsZ,iBA9DjB,EAiSnB7D,kBAAoB,SAACgE,EAAM1E,EAAWrO,GAElC,IAAMgT,EAAoB,EAAK1Z,MAAM0Z,kBAC/BC,EAAU,CACZ1X,GAAI8S,EAAU9S,GACdsE,MAAOwO,EAAUxO,MACjBE,YAAasO,EAAUtO,YACvBK,YAAaiO,EAAUjO,YACvB4D,SAAUqK,EAAUrK,SACpBhE,WAAYA,GAGVkT,EAAa,EAAK5Z,MAAM6Z,YACO,OAAjC,EAAK7Z,MAAM0Z,kBACE,QAATD,IACAE,EAAQ1X,GAAK2X,EAAWjX,OACxBiX,EAAW1G,KAAKyG,KAIP,WAATF,GACAG,EAAWE,OAAOJ,EAAmB,GAE5B,QAATD,EACAG,EAAWF,GAAqB,EAAK1Z,MAAM+Z,QAE7B,QAATN,IAELG,EAAWF,GAAqBC,IAKxC,EAAKpa,SAAL,2BACO,EAAKS,OADZ,IAEIga,YAAY,EACZH,YAAaD,KAIjBvN,GAASkF,WAAWC,IAAI,EAAKN,WAAa,SAAW,EAAKlR,MAAMuZ,QAAQ/F,IAAM,IAAM,EAAKxT,MAAM2E,KAAO,IAAM,EAAK3E,MAAM4E,SAAS6O,IAAhI,eACOmG,KA1UQ,EA+UnBnR,iBAAmB,SAACiR,GAChB,EAAKna,SAAS,CAAEya,YAAY,IAC5B,EAAKza,SAAS,CAAEma,kBAAmBA,IACnC,EAAKna,SAAS,CAAEwa,QAAS,EAAK/Z,MAAM6Z,YAAYH,KACtB,OAAtBA,EACA,EAAKna,SAAS,CAAE0a,cAAe,EAAKja,MAAMka,uBAG1C,EAAK3a,SAAS,CAAE0a,cAAe,EAAKja,MAAM6Z,YAAYH,MAvV3C,EA2VnB3Q,eAAiB,SAACkB,EAAGhE,EAAGO,GACpB,GAAI,EAAKxG,MAAMuZ,QAAQ7G,SAAW,EAAK1S,MAAMsZ,eAAiB,EAAKtZ,MAAM2I,WAAY,CACjFyI,QAAQC,IAAI,iBAAkBpH,EAAGhE,EAAGO,GACpC,IAAI2T,EAAU,EAAKna,MAAM6Z,YACrBO,EAASD,EAAQlQ,GACjBoQ,EAAQD,EAAO1T,WAAWT,GAG1BqU,EAAcD,EAAM1S,SAAS3E,KAAI,SAACuX,EAAGtT,GACrC,OAAIA,IAAMT,EACC+T,GAGCA,EAAI,GAAK,KAIrBC,EAASJ,EAAO1T,WAAW1D,KAAI,SAACuX,EAAGtT,GACnC,OAAIA,IAAMhB,EACCsU,EAGA,2BACAF,GADP,IAEI1S,SAAU2S,OAKlBG,EAAaN,EAAQnX,KAAI,SAACuX,EAAGtT,GAC7B,OAAIA,IAAMgD,EACCsQ,EAGA,2BACAH,GADP,IAEI1T,WAAY8T,OAKxB,EAAKjb,SAAS,CAAEsa,YAAaY,IAE7BpO,GAASkF,WAAWC,IAAI,EAAKN,WAAa,SAAW,EAAKlR,MAAMuZ,QAAQ/F,IAAM,IAAM,EAAKxT,MAAM2E,KAAO,IAAM,EAAK3E,MAAM4E,SAAS6O,IAAhI,eACOgH,MAvYI,EA8YnBC,eAAiB,SAAArb,GACb,EAAKE,SAAS,CAAEob,SAAUtb,EAAMub,iBA/YjB,EAiZnBC,eAAiB,SAAAxb,GACb,EAAKE,SAAS,CAAEob,SAAU,QAlZX,EAqZnBG,UAAY,WACRxR,OAAOC,SAASnG,KAAO,YAtZR,OAGf,EAAKkU,SAAW,CACZC,WAAY,QACZC,cAAe,CAACnL,GAASoL,KAAKC,mBAAmBC,aACjDC,UAAW,CACPC,cAAe,kBAAM,KAM7B,EAAK7X,MAAL,aACI2a,SAAU,KACVI,KAAM5b,EAAM4b,KACZpS,YAAY,EACZqR,YAAY,EACZN,kBAAmB,KACnBG,YAAa,GACbN,QAAS,GACTyB,SAAU,GACVnK,QAAS,GACTwI,WAAY,GACZ4B,cAAe,GACfrL,KAAM,GACN/G,aAAa,EACbyQ,cAAe,IAAI4B,gBAAgB5R,OAAOC,SAASnH,QAAQ+Y,IAAI,QAC/DvW,QAAS,KAAO,IAAIsW,gBAAgB5R,OAAOC,SAASnH,QAAQ+Y,IAAI,MAAQ5T,KAAKC,OAAM,IAAIH,MAAOyK,WAAa,GAAK,IAChHnN,KAAM,KAAO,IAAIuW,gBAAgB5R,OAAOC,SAASnH,QAAQ+Y,IAAI,OAAQ,IAAI9T,MAAO0K,gBAC7EgH,IAIP,EAAKtD,kBAAoB,EAAKA,kBAAkBnV,KAAvB,gBACzB,EAAKmI,iBAAmB,EAAKA,iBAAiBnI,KAAtB,gBACxB,EAAKwI,aAAe,EAAKA,aAAaxI,KAAlB,gBACpB,EAAK8a,QAAU,EAAKA,QAAQ9a,KAAb,gBACf,EAAKyI,eAAiB,EAAKA,eAAezI,KAApB,gBAtCP,E,sDA0CfC,KAAKhB,SAAS,CACVob,SAAU,KACVhS,YAAY,EACZkR,YAAa,GACbN,QAAS,GAETF,WAAY,GACZ4B,cAAe,GACfrL,KAAM,GACN0J,cAAe,OAGnBjN,GAASoL,OAAO2D,Y,6CA0BhB7a,KAAK0Q,YAAa,I,0CAGD,IAAD,OAChB1Q,KAAK0Q,YAAa,EAKd1Q,KAAK2Q,WAAa,OAGtB7E,GAASoL,OAAO4D,oBAAmB,SAAA3W,GAC/B,GAAa,OAATA,IACA,EAAKnF,SAAS,CAAEoJ,aAAcjE,IAC1B,EAAKuM,YAAY,CACjBG,QAAQC,IAAI,EAAKH,YAIjB,IAAMoK,EAAWjP,GAASkF,WAAWC,IAAI,EAAKN,WAAa,UAGrDwB,EAAShO,EAAK6W,MAAMC,MAAM,KAAK,GAAGhS,QAAQ,IAAK,IACrD8R,EAAStJ,MAAMtN,EAAK8O,KAAK/B,KAAK,SAAS,SAACQ,GACpC,GAAIA,EAASwJ,SACT,EAAKlc,SAAS,CAAE,QAAW0S,EAAS/M,QAEH,OAA7B,EAAKlF,MAAMsZ,eACX,EAAK/Z,SAAS,CAAE,cAAiB0S,EAAS/M,MAAMwN,aAInD,CAED,IAAMgJ,EAAc,CAChBjb,KAAMiE,EAAKiX,YACXC,UAAWlX,EAAKiX,YAAYH,MAAM,KAAK,GACvCK,SAAUnX,EAAKmX,SACfN,MAAO7W,EAAK6W,MACZ/H,IAAK9O,EAAK8O,IACVd,OAAQA,GAEZrG,GAASkF,WAAWC,IAAI,EAAKN,WAAa,UAAYxM,EAAK8O,KAAKC,IAAIiI,GACjDrP,GAASkF,WAAWC,IAAI,EAAKN,WAAa,iBAAmBxM,EAAK8O,KAC1EC,IAAIf,GACf,EAAKnT,SAAS,CAAE,QAAWmc,IACM,OAA7B,EAAK1b,MAAMsZ,eACX,EAAK/Z,SAAS,CAAE,QAAW0S,EAAS/M,MAAO,cAAiB+M,EAAS/M,MAAMwN,SAMlD,OAA7B,EAAK1S,MAAMsZ,cAEXjN,GAASkF,WAAWC,IAAI,EAAKN,WAAa,UAAUc,MAAMtN,EAAK8O,KAAKxB,MAAM,EAAKhS,MAAM2E,MAAMqN,MAAM,EAAKhS,MAAM4E,SAAS6M,KAAK,SAAS,SAACQ,GACzG,OAAnBA,EAAS/M,OACT,EAAK3F,SAAS,CAAE,YAAe0S,EAAS/M,QAAS,kBASzDmH,GAASkF,WAAWC,IAAI,EAAKN,WAAa,iBAAiBO,KAAK,SAAS,SAACrR,GACtE,IAAM0b,EAAK1b,EAAE8E,MACP6W,EAAQ5C,OAAOC,KAAK0C,GAAIE,MAAK,SAAA9Y,GAAG,OAAI4Y,EAAG5Y,KAAS,EAAKlD,MAAMsZ,sBAEnD2C,IAAVF,GAAiC,OAAVA,GACvB1P,GAASkF,WAAWC,IAAI,EAAKN,WAAa,SAASc,MAAM+J,GAAO/J,MAAM,EAAKhS,MAAM2E,MAAMqN,MAAM,EAAKhS,MAAM4E,SAAS6M,KAAK,SAAS,SAACQ,GACrG,OAAnBA,EAAS/M,OACT,EAAK3F,SAAS,CAAE,YAAe0S,EAAS/M,QAAS,qBAWrEmH,GAASkF,WAAWC,IAAI,EAAKN,WAAa,aAAexM,EAAK8O,KAAK0I,GAAG,SAAS,SAACjK,GACrD,OAAnBA,EAAS/M,OACT,EAAK3F,SAAS,CAAE8Z,WAAYpH,EAAS/M,QAAS,eAG1CiU,OAAOgD,OAAOlK,EAAS/M,OAAOkX,QAAQ,EAAKpc,MAAMsZ,gBAAkB,GACnE,EAAK/Z,SAAS,CAAEsJ,aAAa,KAIjC,EAAKtJ,SAAS,CAAE8Z,WAAY,QAKpChN,GAASkF,WAAWC,IAAI,EAAKN,WAAa,aAAaO,KAAK,SAAS,SAACQ,GAElE,IAAIyE,EAAMzE,EAAS/M,MACfyM,EAAW+E,EAAI2F,IACfC,EAAY,GAEJ,OAAR5F,GACYyC,OAAOC,KAAK1C,GAAKvW,QAAO,SAAAC,GAChC,GAAU,QAANA,EAAa,CACb,IAAImc,EAAkB7F,EAAItW,GAC1B,GAAI+Y,OAAOgD,OAAOI,GAAiBlc,SAAS,EAAKL,MAAMuZ,QAAQ7G,QAE3D,OADA4J,EAAUlc,GAAKuR,EAASvR,GACjBA,MAKnB,EAAKb,SAAS,CAAE0b,cAAeqB,KAM/B,EAAK/c,SAAS,CAAE0b,cAAe,eA0BlD1a,KAAKP,MAAM2I,YAA2C,OAA7BpI,KAAKP,MAAMsZ,eACrCjN,GAASkF,WAAWC,IAAIjR,KAAK2Q,WAAa,iBAAiBO,KAAK,SAAS,SAACrR,GACtE,IAAM0b,EAAK1b,EAAE8E,MACP6W,EAAQ5C,OAAOC,KAAK0C,GAAIE,MAAK,SAAA9Y,GAC/B,OAAO4Y,EAAG5Y,KAAS,EAAKlD,MAAMsZ,sBAGpB2C,IAAVF,GAAiC,OAAVA,GAEvB1P,GAASkF,WAAWC,IAAI,EAAKN,WAAa,SAASc,MAAM+J,GAAO/J,MAAM,EAAKhS,MAAM2E,MAAMqN,MAAM,EAAKhS,MAAM4E,SAAS6M,KAAK,SAAS,SAACQ,GACrG,OAAnBA,EAAS/M,OACT,EAAK3F,SAAS,CAAE,YAAe0S,EAAS/M,QAAS,qBAYrEmH,GAASkF,WAAWC,IAAIjR,KAAK2Q,WAAa,iBAAiBO,KAAK,SAAS,SAACQ,GAC/C,OAAnBA,EAAS/M,OACT,EAAK3F,SAAS,CAAEyb,SAAU7B,OAAOgD,OAAOlK,EAAS/M,SAAU,kBAOnEmH,GAASkF,WAAWC,IAAIjR,KAAK2Q,WAAa,iBAAiBO,KAAK,SAAS,SAACrR,GACtE,IAAM0b,EAAK1b,EAAE8E,MAKP0M,GAAY,IAAIvK,MAAOwK,UAAY,KAAM,IAAIxK,MAAOyK,WAAa,KAAM,IAAIzK,MAAO0K,cAExF1F,GAASkF,WAAWC,IAAI,EAAKN,WAAa,SAASc,MAAMJ,GACpDH,KAAK,SAAS,SAACQ,GACZ,IAAMC,EAASD,EAAS/M,MAClB2L,EAAU,GAChB,GAAe,OAAXqB,EAAiB,CAEjB,IAAK,IAAIhP,KAAOgP,EACZrB,EAAQqC,KAAK4I,EAAG5Y,IAEpB,EAAK3D,SAAS,CAAEsR,qB,+BAsI1B,IAAD,SAEsBtQ,KAAKpB,MAAxBqB,EAFH,EAEGA,QAFH,EAEYqD,MAGjB,OAEI,yBAAK/C,UAAWN,EAAQO,MAClBR,KAAKP,MAAM2I,YAA2C,OAA7BpI,KAAKP,MAAMsZ,cACjC,kBAAC5X,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,UAEtBrB,KAAKP,MAAMuZ,SAAWhZ,KAAKP,MAAM2I,YAC7BpI,KAAKP,MAAMuZ,QAAQsC,SAAW,kBAAC5E,EAAA,EAAD,CAAQnW,UAAWN,EAAQgc,cAAeC,IAAI,aAAajE,IAAKjY,KAAKP,MAAMuZ,QAAQsC,SAAUxS,QAAS9I,KAAKma,iBAO1I,kBAAC,KAAD,CAAmBrQ,gBAAc,cAAcqS,gBAAc,OAAOrT,QAAS9I,KAAKma,eAC9E5Z,UAAWN,EAAQgc,cAAe7S,SAAS,UAGnD,kBAACgT,EAAA,EAAD,CACI1a,GAAG,cACH0Y,SAAUpa,KAAKP,MAAM2a,SACrBiC,aAAW,EACXvJ,KAAMwJ,QAAQtc,KAAKP,MAAM2a,UACzBxG,QAAS5T,KAAKsa,gBAEZta,KAAKP,MAAM2I,WACT,kBAACqO,EAAA,EAAD,CAAU3N,QAAS,WACf+H,QAAQC,IAAI,eAEZ,EAAK9R,SAAS,CAAEoJ,YAAY,IAAS,WACjC,EAAKyS,eAJb,UADsB,kBAACpE,EAAA,EAAD,CAAU3N,QAAS9I,KAAKua,WAAxB,UAW9B,kBAACpZ,EAAA,EAAD,CAAMC,WAAS,EAACkO,MAAI,EAACjO,UAAU,OAC3B,kBAACF,EAAA,EAAD,CAAMmO,MAAI,EAACwG,IAAI,EAAOC,IAAI,EAAOC,GAAI,EAAGC,GAAI,EAAGC,GAAI,IAEnD,kBAAC/U,EAAA,EAAD,CAAMmO,MAAI,EAACwG,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACzC,kBAAC1U,EAAA,EAAD,CAAYG,QAAQ,KAAKpB,UAAWN,EAAQuX,OACxC,kBAAC5U,EAAA,EAAD,CAAMC,KAAK,IAAI4U,UAAU,OAAO1V,MAAM,eAAtC,QACqB,QAApB/B,KAAK2Q,WAAuB,OAAS,KAG9C,kBAACxP,EAAA,EAAD,CAAMmO,MAAI,EAACwG,IAAI,EAAOC,IAAI,EAAOC,GAAI,EAAGC,GAAI,EAAGC,GAAI,KAGvD,kBAAC/U,EAAA,EAAD,CAAMC,WAAS,EAACkO,MAAI,EAAEjO,UAAU,MAAMC,QAAQ,SAASwU,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIjV,MAAO,CAAEyK,aAAc,SAClH,kBAACvK,EAAA,EAAD,CAAMC,WAAS,EAACkO,MAAI,EAAEwG,IAAI,EAAOC,IAAI,EAAOC,GAAI,EAAGC,GAAI,EAAGC,GAAI,IAC9D,kBAAC/U,EAAA,EAAD,CAAMC,WAAS,EAACkO,MAAI,EAAE/O,UAAWN,EAAQsc,SAAUlb,UAAU,SAASyU,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACpG,kBAACsG,EAAA,EAAD,CACInd,MAAOW,KAAKP,MAAM+a,KAClBtY,SAAU,SAACpD,EAAO2d,GACd,EAAKzd,SAAS,CAAEwb,KAAMiC,IACL,IAAbA,EACA1T,OAAO2T,QAAQC,UAAU,GAAI,KAAM,YAGjB,IAAbF,GACL1T,OAAO2T,QAAQC,UAAU,GAAI,KAAM,cAM3Cpc,UAAWN,EAAQ2c,KAEnB,kBAACC,EAAA,EAAD,CAAKjV,KAAM,kBAAC,KAAD,MAA4BhG,MAAM,kBAC7C,kBAACib,EAAA,EAAD,CAAKjV,KAAM,kBAAC,KAAD,MAAmBhG,MAAM,WAEvC5B,KAAKP,MAAM+a,KAEJ,kBAAC,GAAD,CAAOrW,KAAMnE,KAAKP,MAAMuZ,QAASxZ,UAAWoZ,OAAOgD,OAAO5b,KAAKP,MAAMqZ,cAErE,kBAAC,GAAD,CACI7Q,QAASjI,KAAKP,MAAM6Z,YACpBpR,iBAAkBlI,KAAKkI,iBACvBC,SAAUnI,KAAKP,MAAMuZ,QAAQ7G,SAAWnS,KAAKP,MAAMsZ,cACnDzQ,YAAatI,KAAKP,MAAM6I,YACxBD,gBAAiBrI,KAAKP,MAAMsZ,cAC5BxQ,aAAcvI,KAAKuI,aACnBH,WAAYpI,KAAKP,MAAM2I,WACvB/D,QAASrE,KAAKP,MAAM4E,QACpBD,KAAMpE,KAAKP,MAAM2E,KACjBoE,eAAgBxI,KAAKwI,kBAGrC,kBAACrH,EAAA,EAAD,CAAMC,WAAS,EAACkO,MAAI,EAAE/O,UAAWN,EAAQ6c,UAAWzb,UAAU,SAASyU,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACrG,kBAAC/U,EAAA,EAAD,KAEI,kBAAC,EAAD,CAAgB3B,UAAWQ,KAAKP,MAAMgb,SAAUva,KAAK,YAAYC,SAAS,gBAC1E,kBAAC,EAAD,CAAgBX,UAAWQ,KAAKP,MAAM6Q,QAASpQ,KAAK,cAAcC,SAAS,uBAG9EH,KAAKP,MAAM2I,WACR,kBAACjH,EAAA,EAAD,KAEQ,kBAAC,EAAD,CAAgB3B,UAAWoZ,OAAOgD,OAAO5b,KAAKP,MAAMqZ,YAAa5Y,KAAK,YAAYC,SAAS,iCAC3F,kBAAC,EAAD,CAAgBX,UAAWoZ,OAAOgD,OAAO5b,KAAKP,MAAMib,eAAgBxa,KAAK,YAAYC,SAAS,wCAGpG,IAEV,kBAACgB,EAAA,EAAD,CAAMC,WAAS,EAACkO,MAAI,EAAEwG,IAAI,EAAOC,IAAI,EAAOC,GAAI,EAAGC,GAAI,EAAGC,GAAI,KAqBjElW,KAAKP,MAAMuZ,QAAQ7G,SAAWnS,KAAKP,MAAMsZ,cAAgB,kBAAC,GAAD,CAAM9D,WAAYjV,KAAKP,MAAMga,WAAYvE,kBAAmBlV,KAAKkV,kBAAmBF,QAAShV,KAAKP,MAAMia,gBAAoB,IAUtL,kBAAC,GAAD,W,GA5iBCvW,IAAMC,WAqjBhBC,gBAhnBA,SAAAC,GAAK,MAAK,CACrB9C,KAAM,CACFsD,WAAY,OACZwU,SAAU,EACV9U,UAAW,SACXwQ,UAAW,QACXjJ,OAAQ,OAEZyM,MAAO,CACH9T,WAAY,IACZmI,OAAQ,UACR9J,MAAO,OACPkJ,QAAS,OACTS,aAAc,QAElB1K,KAAM,CACF8C,WAAY,QAEhBmY,cAAe,CACX3O,SAAU,WACVyP,IAAK,OACLtO,MAAO,OACP5C,OAAQ,WAEZmR,cAAe,CACXjZ,MAAO,OACPuJ,SAAU,QACVoB,OAAQ,EACRqB,UAAW,iBACXkN,OAAQ,MAEZ/T,KAAM,CACFgU,SAAU,OACVC,YAAa,iBACb5R,WAAY,iBACZzH,WAAY,OACZ/B,MAAO,OAEP,UAAW,CACPA,MAAO,SAIf6a,IAAI,CACA9Y,WAAY,OACZ5C,aAAc,OAElB4b,UAAU,CACNlR,aAAc,MACd5J,YAAa,OAEjBua,SAAS,CACL3Q,aAAc,MACd5J,YAAa,UA2jBNqB,CAAmBqV,IC9nB5BpV,I,OAAQ8Z,YAAe,CAC3BC,QAAS,CACPC,QAAS,CAAC9P,KAAM,UAAW+P,MAAO,oBAAqBvc,KAAM,mBAAoBwc,aAAc,QAC/FC,UAAW,CAACjQ,KAAM,kBAAmB+P,MAAO,oBAAqBvc,KAAM,kBAAmBwc,aAAc,QACxGzY,KAAM,CAACuY,QAAS,sBAAuBG,UAAW,sBAAuBC,SAAU,sBAAuBC,KAAM,uBAChHlW,MAAM,CAACC,cAAc,UAAWG,QAAQ,UAAWC,KAAK,UAAWC,SAAS,UAAWC,MAAM,eAqClF4V,G,kDA5Bb,WAAYhf,GAAQ,IAAD,8BACjB,cAAMA,IACDa,MAAQ,CAAE,YAAesJ,OAAOC,SAAS6U,UAF7B,E,qDAOjB,GAA+B,MAA3B7d,KAAKP,MAAMqe,YAAqB,CAClC,IAAItD,EAAO,IAAIG,gBAAgB5R,OAAOC,SAASnH,QAAQ+Y,IAAI,MAAQ,OACnE,GAAW,SAAPJ,EACF,OACE,kBAAC,IAAD,CAAkBlX,MAAOA,IACvB,kBAAC,GAAD,CAAYkX,KAAM,KAInB,GAAW,UAAPA,EACP,OACE,kBAAC,IAAD,CAAkBlX,MAAOA,IACvB,kBAAC,GAAD,CAAYkX,KAAM,U,GArBZrX,IAAMC,WCPJkZ,QACW,cAA7BvT,OAAOC,SAAS+U,UAEe,UAA7BhV,OAAOC,SAAS+U,UAEhBhV,OAAOC,SAAS+U,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.15caa188.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/intuition.55342729.mp3\";","module.exports = __webpack_public_path__ + \"static/media/1.ea7a6ae7.png\";","module.exports = __webpack_public_path__ + \"static/media/2.556a7a77.png\";","module.exports = __webpack_public_path__ + \"static/media/3.b31c7197.png\";","module.exports = __webpack_public_path__ + \"static/media/4.ec370a48.png\";","import React from 'react';\nimport LockIcon from '@material-ui/icons/Lock';\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\nimport { withStyles } from '@material-ui/core/styles';\nimport {\n    Paper, Typography, Table, TableBody, TableCell, TableContainer, TableHead, TableRow,\n    TablePagination, Link, TextField, Grid\n} from '@material-ui/core';\n\n\nconst styles = theme => ({\n    root: {\n        maxHeight: '220px',\n        // overflow: 'scroll'\n        textAlign: 'center'\n    },\n    bold: {\n        fontWeight: 800\n    },\n    tableCenter: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n    },\n    dark: {\n        background: \"#333\",\n        color: \"#fff\",\n        fontWeight: 800\n    },\n    search:{\n        color:'#fff',\n        // paddingLeft: '10px',\n        background: '#222',\n        borderRadius : '3px',\n        width: \"50%\"\n    }\n});\n\n\n\nclass FollowingTable extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            page: 0,\n            rowsPerPage: 5,\n            searchValue : '',\n            following: [],\n            followingRaw: []\n        }\n\n        this.handleChangePage = this.handleChangePage.bind(this);\n        this.handleChangeRowsPerPage = this.handleChangeRowsPerPage.bind(this);\n\n    }\n    handleChangePage = (event, newPage) => {\n        this.setState({ page: newPage });\n    };\n\n    handleChangeRowsPerPage = event => {\n        this.setState({ rowsPerPage: event.target.value });\n    };\n\n\n    handleSearch = event => {\n        // console.log(event.target.value);\n        this.setState({ searchValue: event.target.value });\n        if(event.target.value===''){\n            this.setState({following: this.state.followingRaw});\n        }\n        else{\n            let tempFollow = this.state.followingRaw.filter(d=>d.includes(event.target.value));\n            this.setState({following: tempFollow});\n        }\n    };\n\n    componentWillReceiveProps({ following }) {\n        // console.log(following);\n        this.setState({following:following, followingRaw:following});\n    }\n\n    render() {\n        const { classes, following, name, initText } = this.props;\n        // console.log(this.state);\n     \n        \n        return (\n            <Paper elevation={0}>\n                <TableContainer className={classes.root}>\n                    <Table stickyHeader aria-label=\"simple table\" size=\"small\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell className={classes.dark}  style={{borderRadius: \"5px\"}}>\n                                <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\n                                <Typography>{name}</Typography>\n                                    \n                                    <TextField id=\"standard-basic\" variant=\"outlined\" size=\"small\" label=\"Search\" className = {classes.search}\n                                    InputLabelProps={{style:{ color: \"#fff\", paddingLeft:\"10px\"}}} \n                                    InputProps={{style:{ color: \"#fff\"}}}\n                                    value={this.state.searchValue}\n                                    onChange={this.handleSearch}\n                                    />\n                                \n                                </Grid>\n                                    \n                                </TableCell>\n\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {(this.state.following.length === 0 ?\n                                <TableRow><TableCell align=\"center\" component=\"th\" scope=\"row\">\n                                    <Typography>{initText}</Typography>\n                                </TableCell>\n                                </TableRow>\n                                :\n                                (this.state.following.slice(this.state.page * this.state.rowsPerPage, (this.state.page + 1) * this.state.rowsPerPage).map(row => (\n                                    <TableRow key={row}>\n\n                                        <TableCell align=\"center\" component=\"th\" scope=\"row\">\n                                            <Link color=\"inherit\" href={\"/?m=okrs&user=\" + row}>{row}</Link>\n                                        </TableCell>\n                                    </TableRow>\n                                ))))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[5]}\n                    component=\"div\"\n                    count={this.state.following.length}\n                    rowsPerPage={this.state.rowsPerPage}\n                    page={this.state.page}\n                    onChangePage={this.handleChangePage}\n                    onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                // labelRowsPerPage=\"Rows/Page\"\n                />\n            </Paper>\n\n        )\n    }\n}\n\nexport default withStyles(styles)(FollowingTable);\n","import React from 'react';\n// import LockIcon from '@material-ui/icons/Lock';\n// import LockOpenIcon from '@material-ui/icons/LockOpen';\nimport { withStyles } from '@material-ui/core/styles';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n// import EmojiObjectsOutlinedIcon from '@material-ui/icons/EmojiObjectsOutlined';\n\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport WorkIcon from '@material-ui/icons/Work';\nimport FitnessCenterIcon from '@material-ui/icons/FitnessCenter';\n// import MenuBookIcon from '@material-ui/icons/MenuBook';\nimport EditIcon from '@material-ui/icons/Edit';\n// import FlightTakeoffIcon from '@material-ui/icons/FlightTakeoff';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport TrendingUpIcon from '@material-ui/icons/TrendingUp';\nimport PaletteIcon from '@material-ui/icons/Palette';\nimport AddIcon from '@material-ui/icons/Add';\nimport PrintIcon from '@material-ui/icons/Print';\nimport SpeedIcon from '@material-ui/icons/Speed';\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\nimport FiberManualRecordOutlinedIcon from '@material-ui/icons/FiberManualRecordOutlined';\n\nimport {\n    Paper, Grid, Typography, ListItem, Button,\n    ExpansionPanel, ExpansionPanelDetails, ExpansionPanelSummary, Box, Breadcrumbs, Chip,\n    List, ListItemAvatar, Avatar, ListItemText, Fab, Divider, Switch, ButtonGroup\n} from '@material-ui/core';\n\nimport jsPDF from 'jspdf';\n\nimport { textAlign } from '@material-ui/system';\n\n\nconst styles = theme => ({\n    root: {\n        background: '#fff',\n        padding: '12px'\n    },\n    bold: {\n        fontWeight: 800,\n    },\n    tableCenter: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n    },\n    heading: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"flex-start\",\n        flexDirection: 'column'\n    },\n    col: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        flexDirection: \"row\",\n        width: '100%'\n    },\n    row: {\n        display: \"flex\",\n        // padding: \"10px\",\n        flexDirection: \"column\",\n        alignItems: 'flex-start'\n    },\n    brumb: {\n        paddingTop: 20,\n    },\n    bound: {\n        // borderRadius: \"5px\",\n        // border: \"1px solid #aaa\",\n        // padding: \"10px\"\n    },\n    goal: {\n        fontWeight: 800,\n        fontSize: 15\n    },\n    goalMetric: {\n        fontSize: 10\n    },\n    description: {\n        paddingBottom: \"10px\",\n        textAlign: 'left'\n    },\n    descriptionPFM: {\n        paddingBottom: \"10px\",\n        textAlign: 'left',\n        borderLeft: \"5px #c0392b solid\",\n        paddingLeft: \"20px\",\n\n    },\n    darkBackground: {\n        background: \"#333\"\n    },\n    dark: {\n        background: \"#333\",\n        color: '#fff'\n    },\n    edit: {\n        background: \"#333\",\n        color: '#fff',\n        boxShadow: \"none\",\n        \"&:hover\": {\n            boxShadow: \"none\",\n            color: \"#333\",\n            background: '#fff'\n        },\n    },\n    followBox: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flexDirection: \"column\"\n    },\n    homeAdd: {\n        marginTop: \"50px\"\n    },\n    kr: {\n        borderLeft: \"5px #000 solid\",\n        paddingLeft: \"20px\",\n        marginBottom: \"10px\"\n    },\n    bubbles: {\n        flex: 0,\n        paddingRight: \"10px\",\n        paddingTop: \"10px\",\n        cursor: 'pointer'\n    },\n    progressGrid: {\n        height: \"5px\",\n        // borderRadius: \"5px\"\n    }\n});\n\n\n\nclass Okrs extends React.Component {\n\n    constructor(props) {\n        super(props);\n        const chipColor = '#eee';\n        const chipTextColor = '#000';\n\n\n        this.state = {\n            chips: {\n\n                relationships: <Chip\n                    style={{ background: chipColor, color: chipTextColor }}\n                    // variant=\"outlined\"\n                    size=\"small\"\n                    icon={<FavoriteIcon style={{ color: chipTextColor }} />}\n                    label=\"Relationships\"\n                />,\n                fitness: <Chip\n                    size=\"small\"\n                    // variant=\"outlined\"\n                    style={{ background: chipColor, color: chipTextColor }}\n                    icon={<FitnessCenterIcon style={{ color: chipTextColor }} />}\n                    label=\"Fitness\"\n                />,\n                work:\n                    <Chip\n                        style={{ background: chipColor, color: chipTextColor }}\n                        size=\"small\"\n                        // variant=\"outlined\"\n                        icon={<WorkIcon style={{ color: chipTextColor }} />}\n                        label=\"Work\"\n                    />,\n                creative:\n                    <Chip\n                        size=\"small\"\n                        // variant=\"outlined\"\n                        style={{ background: chipColor, color: chipTextColor }}\n                        icon={<PaletteIcon style={{ color: chipTextColor }} />}\n                        label=\"Creative\"\n                    />,\n                other:\n                    <Chip\n                        size=\"small\"\n                        // variant=\"outlined\"\n                        style={{ background: chipColor, color: chipTextColor }}\n                        icon={<SettingsIcon style={{ color: chipTextColor }} />}\n                        label=\"Other\"\n                    />\n            }\n\n\n        }\n        this.printOKR = this.printOKR.bind(this);\n        this.findWeeksinQuarter = this.findWeeksinQuarter.bind(this);\n        // this.updateProgressBubble = this.updateProgressBubble.bind(this);\n\n\n    }\n\n\n    printOKR = (okrs, user, year, quarter) => {\n        // console.log(\"print\");\n        var doc = new jsPDF({\n            orientation: 'landscape'\n        });\n\n\n\n        const width = 297\n        const height = 210\n        const paddingHorizontal = 20\n        const paddingVertical = 20\n        const gutter = 2\n        const columnPad = 3\n\n\n        const columnWidth = (width - 2 * paddingHorizontal - (okrs.length - 1) * gutter) / okrs.length;\n        const columnHeight = height - 2 * paddingVertical;\n\n        function x(val) {\n            return val + paddingHorizontal\n        }\n        function y(val) {\n            return val + paddingVertical\n        }\n\n        // console.log(columnWidth, columnHeight, doc.getFontList())\n\n        doc.setFont('helvetica')\n        doc.setFontSize(70)\n        doc.text(parseInt(width / 2), y(0), 'okru', { align: 'center' })\n        doc.setTextColor('#999')\n        doc.setFontSize(15)\n        doc.setFont('courier')\n        doc.text(parseInt(width / 2), y(10), user + '/' + year + '/' + quarter, { align: 'center' })\n        doc.setFont('helvetica')\n        doc.setTextColor('#000')\n\n        doc.setFontStyle('bold')\n        doc.setFontSize(10)\n        doc.text(17, y(60), 'OBJECTIVES', { rotationDirection: 1, angle: 90, charSpace: 2 })\n        doc.text(17, y(140), 'KEY RESULTS', { rotationDirection: 1, angle: 90, charSpace: 2 })\n        doc.setDrawColor('#aaa')\n        doc.setFontSize(7)\n        doc.setFont('courier')\n        doc.text(width - 80, height - 2, ('https://okru.app/?user=' + user), { charSpace: 0 })\n\n\n        okrs.forEach((okr, i) => {\n            let line = 25\n            let step = 5\n\n            doc.setTextColor('#fff')\n            doc.setFont('helvetica')\n            doc.setDrawColor('#000')\n            doc.setFontSize(15)\n            doc.roundedRect(x(i * (columnWidth + gutter)), y(15), columnWidth, columnHeight, 3, 3, 'S')\n            doc.setFillColor('#333')\n            doc.roundedRect(x(i * (columnWidth + gutter)), y(15), columnWidth, 50, 3, 3, 'F')\n            doc.setFontStyle('bold')\n            var splitTitle = doc.splitTextToSize(okr.title, columnWidth - 2 * columnPad);\n            for (var j = 0; j < splitTitle.length; j++) {\n\n                doc.text(x(i * (columnWidth + gutter) + columnWidth / 2), y(line), splitTitle[j], { align: 'center', charSpace: 0 });\n                line = line + step\n            }\n            doc.setFontStyle('normal')\n            doc.setFontSize(10)\n            var splitTitle = doc.splitTextToSize(okr.description, columnWidth - 2 * columnPad);\n            for (var j = 0; j < splitTitle.length; j++) {\n\n                doc.text(x(i * (columnWidth + gutter) + columnWidth / 2), y(line), splitTitle[j], { align: 'center', charSpace: 0 });\n                line = line + step\n            }\n            line = 75;\n            doc.setTextColor('#000')\n            okr.keyResults.forEach((kr) => {\n                var splitTitle = doc.splitTextToSize((kr.result + ' [System Metric : ' + kr.metric + '] '), columnWidth - 2 * columnPad);\n                for (var j = 0; j < splitTitle.length; j++) {\n\n                    doc.text(x(i * (columnWidth + gutter) + columnWidth / 2), y(line), splitTitle[j], { align: 'center', charSpace: 0 });\n                    line = line + step\n                }\n                doc.setDrawColor('#aaa')\n                doc.line(x(i * (columnWidth + gutter) + columnPad), y(line), x(i * (columnWidth + gutter) + columnWidth - columnPad), y(line), 'F')\n                line = line + 8;\n            });\n            var splitTitle = doc.splitTextToSize(('Possible Failure Mode : ' + okr.failureMode), columnWidth - 2 * columnPad);\n            for (var j = 0; j < splitTitle.length; j++) {\n\n                doc.text(x(i * (columnWidth + gutter) + columnWidth / 2), y(line), splitTitle[j], { align: 'center', charSpace: 0 });\n                line = line + step\n            }\n\n\n\n        })\n\n        // Save the Data\n        doc.save('okru.pdf')\n\n        // var string = doc.output('datauristring');\n        // var iframe = \"<iframe width='100%' height='100%' src='\" + string + \"'></iframe>\"\n        // var x = window.open();\n        // x.document.open();\n        // x.document.write(iframe);\n        // x.document.close();\n\n\n\n\n\n    }\n\n\n    findWeeksinQuarter = (q, y) => {\n        let jan1 = new Date(y, 0, 1)\n        let d1, d2;\n        if (q === 'Q1') {\n            d1 = new Date(y, 0, 1)\n            d2 = new Date(y, 2, 31)\n        }\n        else if (q === 'Q2') {\n            d1 = new Date(y, 3, 1)\n            d2 = new Date(y, 5, 30)\n        }\n        else if (q === 'Q3') {\n            d1 = new Date(y, 6, 1)\n            d2 = new Date(y, 8, 30)\n        }\n        else if (q === 'Q4') {\n            d1 = new Date(y, 9, 1)\n            d2 = new Date(y, 11, 31)\n        }\n\n        let w1 = Math.ceil(((d1 - jan1 + 86400000) / 86400000) / 7);\n        let w2 = Math.ceil(((d2 - jan1 + 86400000) / 86400000) / 7)\n\n        return (w2 - w1 + 1);\n\n    }\n\n\n    findWidth = (okr, id) => {\n        let idCounts = [0, 0, 0, 0];\n\n        okr.keyResults.map(d => {\n            d.progress.map(f => {\n                idCounts[f] += 1;\n            })\n        })\n\n\n        return idCounts[id] * 200 / idCounts.reduce((a, v) => a + v);\n\n    }\n\n\n    render() {\n        const { classes, okrList, handleOpenDialog, selfView, isSignedIn, userBeingViewed, isFollowing, handleFollow, quarter, year, updateProgress } = this.props;\n        // console.log('in okr component',okrList);\n        // this.setState({okrList});\n        const followText = (isFollowing ? <Typography variant=\"caption\">Unfollow</Typography>\n            : <Typography variant=\"caption\">Follow</Typography>)\n\n        // let weeks = new Array(this.findWeeksinQuarter(quarter,year)).fill(-1);\n\n        // console.log(weeks);\n\n\n\n        return (\n            <Paper className={classes.root} elevation={0}>\n                <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\n\n                    <Grid>\n                        <Breadcrumbs className={classes.brumb} aria-label=\"breadcrumb\">\n                            <Typography variant=\"h6\" color=\"textPrimary\">OKRs</Typography>\n                            <Typography variant=\"h6\" color=\"textPrimary\">{userBeingViewed}</Typography>\n                            <Typography variant=\"h6\" color=\"textPrimary\">{year}</Typography>\n                            <Typography variant=\"h6\" color=\"textPrimary\">{quarter}</Typography>\n                        </Breadcrumbs>\n                        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n                            <Typography variant=\"caption\">All Quarters : </Typography>\n                            <ButtonGroup variant=\"text\" color=\"default\" aria-label=\"outlined primary button group\" size=\"small\">\n                            <Button onClick={() => (window.location.href = '/?m=okrs&user='+userBeingViewed+'&q=1&y='+year.replace('Y',''))}>Q1</Button>\n                            <Button onClick={() => (window.location.href = '/?m=okrs&user='+userBeingViewed+'&q=2&y='+year.replace('Y',''))}>Q2</Button>\n                            <Button onClick={() => (window.location.href = '/?m=okrs&user='+userBeingViewed+'&q=3&y='+year.replace('Y',''))}>Q3</Button>\n                            <Button onClick={() => (window.location.href = '/?m=okrs&user='+userBeingViewed+'&q=4&y='+year.replace('Y',''))}>Q4</Button>\n                        </ButtonGroup>\n                        </Grid>\n\n                    </Grid>\n\n                    {selfView && isSignedIn ?\n\n                        // <Fab color=\"primary\" aria-label=\"add\" size=\"small\" className={classes.edit} onClick={() => this.printOKR(okrList, userBeingViewed)}>\n                        //     <PrintIcon fontSize=\"small\" />\n                        // </Fab>\n                        <Button\n                            variant=\"contained\"\n                            color=\"default\"\n                            size=\"small\" className={classes.edit} onClick={() => this.printOKR(okrList, userBeingViewed, year, quarter)}\n                            startIcon={<PrintIcon fontSize=\"small\" />}\n                        >\n                            Print OKRs\n                        </Button>\n                        : (isSignedIn ? <Box className={classes.followBox}><Switch\n                            checked={isFollowing}\n                            onChange={handleFollow}\n                            value=\"follow\"\n                            color=\"primary\"\n                            inputProps={{ 'aria-label': 'default checkbox' }}\n\n\n                        />{followText}</Box> : '')}\n\n                </Grid>\n\n                {okrList.length > 0 ? (okrList.map((okr, k) => (<ExpansionPanel key={okr.id} elevation={0}>\n                    <ExpansionPanelSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls={\"panel-\" + okr.id + \"-content\"}\n                        id={\"panel-\" + okr.id + \"-header\"}\n                    >\n                        <Box className={classes.col}>\n                            <Box className={classes.heading}>\n                                {/* <EmojiObjectsOutlinedIcon fontSize=\"large\" /> */}\n                                <Grid container direction=\"row\">\n                                    <Typography className={classes.bold}>{okr.title}</Typography>\n                                    <Grid container direction=\"row\">\n\n                                        <Grid className={classes.progressGrid} style={{ background: \"#c0392b\", width: this.findWidth(okr, 1) }}></Grid>\n                                        <Grid className={classes.progressGrid} style={{ background: \"#f1c40f\", width: this.findWidth(okr, 2) }}></Grid>\n                                        <Grid className={classes.progressGrid} style={{ background: \"#27ae60\", width: this.findWidth(okr, 3) }}></Grid>\n                                        <Grid className={classes.progressGrid} style={{ background: \"#bdc3c7\", width: this.findWidth(okr, 0) }}></Grid>\n\n                                    </Grid>\n                                </Grid>\n                                <Typography variant=\"body2\" className={classes.description}>\n                                    {okr.description}\n                                </Typography>\n                            </Box>\n                            <Box className={classes.bound}>\n                                {this.state.chips[okr.category]}\n\n                            </Box>\n\n\n                        </Box>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails className={classes.row}>\n\n                        <List>\n\n                            {okr.keyResults.map((kr, i) => (\n                                <ListItem key={i} className={classes.kr}>\n                                    {/* <ListItemAvatar>\n                                        <Avatar variant=\"rounded\" className={classes.darkBackground}>\n                                            <TrendingUpIcon />\n                                        </Avatar>\n                                    </ListItemAvatar> \n\n                                    <ListItemText primary={kr.result} secondary={\"System Metric : \" + kr.metric} className={classes.kr}/>\n                                    */}\n                                    <Grid container direction=\"column\" justify=\"center\" alignItems=\"flex-start\">\n                                        <Typography>{kr.result}</Typography>\n                                        <Chip\n                                            icon={<SpeedIcon />}\n                                            label={<Typography variant=\"caption\">System Metric : <Typography variant=\"button\">{kr.metric}</Typography></Typography>}\n                                            size=\"small\"\n                                            color=\"default\"\n                                        // variant=\"outlined\"\n                                        />\n                                        <Grid container direction=\"row\">\n                                            {\n                                                kr.progress.map((d, j) => {\n                                                    let weekLabel = <Typography variant=\"caption\">{'W' + (j + 1)}</Typography>;\n                                                    let circleColor;\n                                                    if (d === 0) circleColor = \"#bdc3c7\";\n                                                    else if (d === 1) circleColor = \"#c0392b\";\n                                                    else if (d === 2) circleColor = \"#f1c40f\";\n                                                    else circleColor = \"#27ae60\";\n                                                    let circle = <FiberManualRecordIcon\n                                                        onClick={() => updateProgress(k, i, j)}\n                                                        fontSize=\"small\" key={k * 100 + i * 10 + j} style={{ color: circleColor }} />\n                                                    return (\n                                                        <Grid container direction=\"column\" key={k * 100 + i * 10 + j} className={classes.bubbles} alignItems=\"center\">\n\n                                                            {circle}\n                                                            {weekLabel}\n                                                        </Grid>\n                                                    )\n                                                })\n                                            }\n                                        </Grid>\n\n                                    </Grid>\n\n\n                                </ListItem>\n                            ))}\n                        </List>\n\n                        {/* <Grid container direction=\"row\">\n                            <Chip\n                                        label={<Typography variant=\"overline\">Possible Failure Mode</Typography>}                                   \n                                        size=\"small\"\n                                        color=\"secondary\"\n                                        // variant=\"outlined\"\n                                    /> */}\n                        <Typography variant=\"body2\" className={classes.descriptionPFM}>\n                            <b>Possible Failure Mode : </b>\n                            {okr.failureMode}\n                        </Typography>\n                        {/* </Grid> */}\n                        <Grid container direction=\"row\" justify=\"flex-end\" style={{ width: '100%', display: \"flex\" }}>\n                            {selfView && isSignedIn ? <Fab size=\"small\" color=\"primary\" aria-label=\"add\" className={classes.edit}\n                                onClick={() => handleOpenDialog(okr.id)}>\n                                <EditIcon fontSize=\"small\" />\n                            </Fab> : ''}\n\n                            <Divider style={{ marginTop: \"20px\", width: \"100%\" }} />\n                        </Grid>\n\n\n\n                    </ExpansionPanelDetails>\n                </ExpansionPanel>))) :\n                    <Typography style={{ margin: \"30px\" }}>No OKRs yet!</Typography>\n                }\n                {selfView && isSignedIn ? <Grid container direction=\"column\" alignItems=\"center\" justify=\"center\" className={classes.homeAdd}>\n                    <Fab color=\"primary\" aria-label=\"add\" className={classes.edit} onClick={() => handleOpenDialog(null)}>\n\n                        <AddIcon />\n                    </Fab>\n                    <Typography variant=\"caption\">Add New OKR</Typography>\n                </Grid> : ''}\n            </Paper>\n\n        )\n    }\n}\n\nexport default withStyles(styles)(Okrs);\n","import firebase from 'firebase'\n\nconst config = {\n    apiKey: \"AIzaSyAHL0vbcWUxeE542F-ROGxw-4IG2OLM9EM\",\n    authDomain: \"okru-4036a.firebaseapp.com\",\n    databaseURL: \"https://okru-4036a.firebaseio.com\",\n    projectId: \"okru-4036a\",\n    storageBucket: \"okru-4036a.appspot.com\",\n    messagingSenderId: \"323122678619\",\n    appId: \"1:323122678619:web:f0624f8e6e26013509287e\",\n    measurementId: \"G-LGV47H0SJQ\"\n};\n\nfirebase.initializeApp(config);\nfirebase.analytics();\nexport default firebase;","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport {\n    Paper, Typography, Link, TextField, Grid, Breadcrumbs\n} from '@material-ui/core';\n\nimport { Sector, PieChart, Pie, Label } from 'recharts';\n\nconst styles = theme => ({\n    pomInProgress:{\n        width:'100px',\n        height:'100px',\n        borderRadius:'50px',\n        background: '#c0392b'\n\n    },\n    pomNotInProgress:{\n        width:'100px',\n        height:'100px',\n        borderRadius:'50px',\n        background: '#eee'\n\n    },\n    main:{\n        fontSize:'60px',\n        fontWeight:'500',\n        fill: '#333'\n    },\n    sub:{\n        fontSize:'10px',\n        transform: 'translate(0px,30px)',\n        fill: '#333'\n    },\n    sub3:{\n        fontSize:'10px',\n        transform: 'translate(0px,-30px)',\n        fill: '#333'\n    },\n    sub2:{\n        fontSize:'10px',\n        fill: '#333'\n    }\n});\n\n\n\nclass PomCircle extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            following: [],\n        }\n    }\n  \n\n    componentWillReceiveProps({ following }) {\n        // console.log(following);\n        this.setState({following:following});\n    }\n\n    render() {\n        const { classes, time, status } = this.props;\n\n        const angle = (time/25) * 360 + 180;\n\n        // const circle = (\n        //     time>0 ? \n        //     <Paper elevation={0} className={classes.pomInProgress}>\n\n        //     </Paper>\n        //     :\n        //     <Paper  elevation={0} className={classes.pomNotInProgress}></Paper>\n        // )\n\n        \n\n        const circle = (\n            time>0 ? \n            <PieChart width={200} height={160}>\n                \n                <Pie  \n                cx={100} cy={80} outerRadius={70} innerRadius={60} \n                startAngle={180} endAngle={angle} fill=\"#c0392b\" cornerRadius={5}\n                dataKey=\"value\" data={[{ name: 'time', value: time}]}>\n                {status=='inprogress'?(\n                    <Label value=\"In Progress\" position=\"center\" className={classes.sub3}/>\n                ):(\n                    <Label value=\"Paused\" position=\"center\" className={classes.sub3}/>\n                )}\n                <Label value={time} position=\"center\" className={classes.main}/>\n                <Label value=\"Mins Remaining\" position=\"center\" className={classes.sub}/>\n                </Pie>\n            </PieChart>\n            \n            \n            :\n            \n            <PieChart width={200} height={160}>\n                <Pie  \n                cx={100} cy={80} outerRadius={70} innerRadius={60} \n                startAngle={0} endAngle={400} fill=\"#eee\" cornerRadius={5}\n                dataKey=\"value\" data={[{ name: 'time', value: 10}]}\n                >\n                <Label value=\"Not Pomming\" position=\"center\" className={classes.sub2}/>\n                </Pie>\n                \n            </PieChart>\n        )\n\n\n     \n        \n        return (\n            <Paper elevation={0}>\n                {circle}\n            </Paper>\n        )\n    }\n}\n\nexport default withStyles(styles)(PomCircle);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport {\n    TextField\n} from '@material-ui/core';\n\n\nconst styles = theme => ({\n    root: {\n        position: \"absolute\",\n        right: \"5px\",\n        bottom: \"5px\",\n        margin: \"0px !important\"\n    },\n\n});\n\n\n\nclass TextFieldCharCount extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentCount : 0\n        }\n\n        this.handleUpdateText = this.handleUpdateText.bind(this);\n\n    }\n\n    handleUpdateText = event => {\n        this.setState({ currentCount: event.target.value.length });\n        this.props.onChange(event)\n    }\n\n    componentWillReceiveProps({ value }) {\n        this.setState({ currentCount : value.length })\n    }\n\n    componentDidMount() {\n        this.setState({ currentCount : this.props.value.length })\n    }\n\n    render() {\n        const { classes} = this.props;\n        // console.log(this.state);\n\n\n        return (\n            <TextField\n                required={this.props.required}\n                id={this.props.id}\n                label={this.props.label}\n                onChange={this.handleUpdateText}\n                value={this.props.value}\n                variant={this.props.variant}\n                fullWidth={this.props.fullWidth}\n                inputProps={this.props.inputProps}\n                multiline={this.props.multiline}\n                rows={this.props.rows}\n                className={this.props.className}\n                helperText={this.state.currentCount+'/'+this.props.inputProps.maxLength}\n                FormHelperTextProps = {(this.state.currentCount/this.props.inputProps.maxLength)<0.8?\n                    {className:classes.root}\n                    :\n                    {className:classes.root, error:true}\n                }                            \n            />\n        )\n    }\n}\n\nexport default withStyles(styles)(TextFieldCharCount);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport {\n    Paper, Typography, Link, TextField, Grid, Breadcrumbs, Chip, Fab, IconButton\n} from '@material-ui/core';\n\nimport PomCircle from './pomcircle';\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\nimport NotesIcon from '@material-ui/icons/Notes';\nimport SubjectIcon from '@material-ui/icons/Subject';\nimport ChatIcon from '@material-ui/icons/Chat';\nimport EditIcon from '@material-ui/icons/Edit';\nimport CommentIcon from '@material-ui/icons/Comment';\nimport FormatQuoteIcon from '@material-ui/icons/FormatQuote';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport SaveIcon from '@material-ui/icons/Save';\n\nimport TextFieldCharCount from './textfieldcharcount';\n\nconst styles = theme => ({\n    pomcards: {\n        border: '1px #eee solid',\n        margin: '2px',\n        borderRadius: '5px',\n    },\n    pomColor: {\n        color: '#c0392b'\n    },\n    outline: {\n        border: '2px #c0392b solid',\n    },\n    txt: {\n        display: 'flex',\n        alignItems: 'center',\n        borderTop: '1px solid #eee',\n        margin: '5px',\n        padding: '1px'\n    },\n    edit: {\n        border: \"2px solid #c0392b\",\n        color: '#c0392b',\n        background: '#fff',\n        boxShadow: \"none\",\n        \"&:hover\": {\n            border: \"2px solid #fff\",\n            background: '#fff',\n        \n        },\n    },\n    buttonPlay:{\n        width: \"auto !important\",\n    }\n});\n\n\n\nclass PomCard extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            textEdit: false,\n            text: props.pomData.text,\n            status: props.pomData.status\n        }\n    }\n\n\n    componentWillReceiveProps({ pomData}) {\n        // console.log(following);\n        // const pommerStats = {\n        //     time: 15,\n        //     poms: 4,\n        //     status: 'inprogress',\n        //     text: \"I'm working on adding copoms to okru\"\n        // }\n        this.setState({text: pomData.text, status:pomData.status})\n\n    }\n\n    // componentDidUpdate({pomData}){\n    //     this.setState({text: pomData.text, status:pomData.status});\n    // }\n\n    render() {\n        const { classes, pomData, startPom, pausePom, textPom, resumePom, selfPom } = this.props;\n\n        // this.setState({text: pomData.text, status:pomData.status});\n        const pomArray = new Array(pomData.poms).fill(0);\n\n\n        return (\n            <Grid item container className={`${classes.pomcards} ${selfPom ? classes.outline : \"\"} ${classes.buttonPlay}`} \n            direction=\"column\" justify=\"space-around\" alignItems=\"center\">\n\n                    <Link color=\"inherit\" href={\"/?user=\" + pomData.pommer}>\n                        <Typography variant='overline'>{pomData.pommer}</Typography>\n                    </Link>\n                    {/* <Typography variant='overline'>{pomData.pommer}</Typography> */}\n\n                {\n                    pomData.poms > 0 ? (\n                        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n                            <Typography variant=\"subtitle2\">Today : </Typography>\n                            {pomArray.map((f, j) => (<FiberManualRecordIcon key={j} className={classes.pomColor} />))}\n                        </Grid>\n                    ) : (\n                            <Typography variant='caption'>No Completed Poms Today!</Typography>\n                        )\n                }\n\n                <PomCircle time={pomData.time} status={this.state.status}></PomCircle>\n\n\n\n                {selfPom?\n                    <Grid container direction=\"row\" justify=\"space-evenly\" className={classes.buttonPlay}>\n                        {this.state.status==='inprogress'?\n                        (\n                        !this.state.textEdit?\n                            (<Fab size=\"small\" color=\"primary\" aria-label=\"add\" className={classes.edit}\n                            onClick={()=>this.setState({textEdit:true})}\n                            >\n                                <EditIcon fontSize=\"small\" />\n                            </Fab>):\n                            (\n                            <Fab size=\"small\" color=\"primary\" aria-label=\"add\" className={classes.edit}\n                            onClick={()=>{\n                                textPom(this.state.text);\n                                this.setState({textEdit:false})\n                                }\n                            }\n                            >\n                                <SaveIcon fontSize=\"small\" />\n                            </Fab>\n                            )\n                        ):('')\n                        }\n                    \n                        {   \n                            this.state.status==='inprogress'?\n                            (<Fab size=\"small\" color=\"primary\" aria-label=\"add\" className={classes.edit}\n                            onClick={()=>{\n                                pausePom();\n                                this.setState({status:'pause'})\n                                }\n                            }\n                            >\n                                <PauseIcon fontSize=\"small\" />\n                            </Fab>):(<Fab size=\"small\" color=\"primary\" aria-label=\"add\" className={classes.edit}\n                            onClick={()=>{\n                                if(pomData.time===0){\n                                    startPom();\n                                }\n                                else{\n                                    resumePom();\n                                }\n                                this.setState({status:'inprogress'})\n                                }\n                            }\n                            >\n                                <PlayArrowIcon fontSize=\"small\" />\n                            </Fab>)\n                        }\n                    </Grid>:''\n                }\n                    \n                \n                {\n                    pomData.time>0?(\n                    this.state.textEdit?\n                    (\n                        <TextFieldCharCount\n                                    required\n                                    id=\"outlined-required\"\n                                    label=\"Task\"\n                                    onChange={(e)=>this.setState({text:e.target.value})}\n                                    value={this.state.text}\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    inputProps={{\n                                        maxLength: 100,\n                                    }}\n                                />\n                    ):(\n                        <Typography variant='body2' className={classes.txt}>\n                    \n                            <FormatQuoteIcon style={{ color: '#555', transform: 'scale(-1, -1)' }}></FormatQuoteIcon>\n                            {this.state.text}\n                            <FormatQuoteIcon style={{ color: '#555' }}></FormatQuoteIcon>\n\n                        </Typography>\n                    )\n                    ):('')\n                }\n                \n            </Grid>\n        )\n    }\n}\n\nexport default withStyles(styles)(PomCard);\n","import React from 'react';\nimport UIfx from 'uifx';\nimport notif from '../assets/intuition.mp3';\nimport { withStyles } from '@material-ui/core/styles';\nimport {\n    Paper, Typography, Table, TableBody, TableCell, TableContainer, TableHead, TableRow,\n    TablePagination, Link, TextField, Grid, Breadcrumbs, Snackbar, SnackbarContent\n} from '@material-ui/core';\n\nimport firebase from '../firebase';\nimport PomCard from './pomcard';\n\nconst beep = new UIfx(notif);\n\n\nconst styles = theme => ({\n    brumb: {\n        padding: 20,\n        borderRadius: 0,\n        // borderBottom: '1px #eee solid'\n    },\n    pomcards: {\n        padding: '10px',\n        minHeight: '200px',\n        minWidth: '200px',\n        border: '1px #eee solid',\n        margin: '2px',\n        borderRadius: '5px'\n\n    },\n    snack: {\n        backgroundColor: \"#c0392b\",\n        color: '#fff'\n    }\n});\n\n\n\nclass CoPom extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        // props.following.push(props.user.userID)\n        this.state = {\n            user: props.user,\n            poms: [],\n            following: props.following,\n            selfPomCount: 0,\n            myPom: {},\n            pommers: 0\n        }\n\n\n        this.startPom = this.startPom.bind(this);\n        this.pausePom = this.pausePom.bind(this);\n        this.resumePom = this.resumePom.bind(this);\n        this.textPom = this.textPom.bind(this);\n        this.refreshAllPoms = this.refreshAllPoms.bind(this);\n\n\n\n    }\n\n\n    componentWillReceiveProps({ user, following, poms }) {\n\n        // following.push(user.userID);\n        this.setState({ user, following }, () => {\n            this.refreshAllPoms(following, user);\n        });\n\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.inter);\n    }\n\n    componentDidMount() {\n        this._isMounted = true;\n        if (process.env.NODE_ENV !== 'production') {\n            this.deployment = 'dev';\n        }\n        else {\n            this.deployment = 'prod';\n        }\n\n        this.refreshAllPoms(this.state.following, this.state.user);\n\n    }\n\n    componentWillMount() {\n        // this.refreshAllPoms(this.state.following, this.state.user);\n        this.inter = setInterval(() => {\n            this.refreshAllPoms(this.state.following, this.state.user)\n            console.log('poms refreshed!', this.state)\n        }, 60000);\n    }\n\n\n    refreshAllPoms(following, user) {\n        // Get all poms and remap to the nameids\n        // console.log(following, user);\n        const pomProcessed = {}\n        let pommers = 0;\n        firebase.database().ref(this.deployment + '/userlist/all').once('value', (allUserSnap) => {\n            const allUsers = allUserSnap.val();\n\n            // const queryDate = new Date().toLocaleDateString().replace(/\\//g, '-');\n            // const queryDate = new Date().getUTCDate() + '-' + new Date().getUTCMonth() + '-' + new Date().getUTCFullYear();\n            const queryDate = new Date().getDate() + '-' + new Date().getMonth() + '-' + new Date().getFullYear();\n\n\n            firebase.database().ref(this.deployment + '/poms').child(queryDate)\n                .once('value', (snapshot) => {\n                    const pomIds = snapshot.val();\n\n                    //Check if there are no poms today\n                    if (pomIds !== null) {\n\n                        // convert Poms with the readable ids\n                        for (var key in pomIds) {\n                            pomProcessed[allUsers[key]] = pomIds[key]\n                        }\n\n                        const filteredPoms = []\n                        let myPom = {}\n\n                        let selfPresent = false;\n                        let selfPomCount, latestPomStatus, latestPomModified, latestPomElapsed, latestPomStart, latestPomText;\n\n                        // If you are present in the poms today\n                        if (pomProcessed[user.userID]) {\n                            let curPoms = pomProcessed[user.userID];\n                            //Check if the last one is active\n                            let pomLength = curPoms.length;\n                            let latestPom = curPoms[pomLength - 1];\n                            let elapsed;\n\n                            if (latestPom.status === 'pause') {\n                                elapsed = (latestPom.elapsed / 60000)\n                            }\n                            else {\n                                elapsed = (((new Date().getTime() - latestPom.modifiedUTC) / 60000) + (latestPom.elapsed / 60000))\n                            }\n                            selfPresent = true;\n                            selfPomCount = pomLength;\n                            latestPomStatus = latestPom.status;\n                            latestPomModified = latestPom.modifiedUTC;\n                            latestPomElapsed = latestPom.elapsed;\n                            latestPomStart = latestPom.startUTC;\n                            latestPomText = latestPom.text;\n                            if (elapsed >= 25) {\n                                myPom = {\n                                    pommer: user.userID,\n                                    time: 0,\n                                    status: '',\n                                    text: '',\n                                    poms: pomLength,\n                                }\n                            }\n                            else {\n                                myPom = {\n                                    pommer: user.userID,\n                                    time: 25 - parseInt(elapsed),\n                                    status: latestPom.status,\n                                    text: latestPom.text,\n                                    poms: pomLength - 1,\n                                }\n                            }\n                        }\n                        else{\n                            myPom = {\n                                pommer: user.userID,\n                                time: 0,\n                                status: '',\n                                text: '',\n                                poms: 0,\n                            }\n                        }\n\n                        // Iterate over all following\n                        following.map(d => {\n                            // Check if the user is present in today's poms\n                            if (pomProcessed[d]) {\n                                let curPoms = pomProcessed[d];\n                                //Check if the last one is active\n                                let pomLength = curPoms.length;\n                                let latestPom = curPoms[pomLength - 1];\n                                let elapsed;\n                                if (latestPom.status === 'pause') {\n                                    elapsed = (latestPom.elapsed / 60000)\n                                }\n                                else {\n                                    elapsed = (((new Date().getTime() - latestPom.modifiedUTC) / 60000) + (latestPom.elapsed / 60000))\n                                }\n                                if (elapsed >= 25) {\n                                    filteredPoms.push({\n                                        pommer: d,\n                                        time: 0,\n                                        status: '',\n                                        text: '',\n                                        poms: pomLength,\n                                    })\n                                }\n                                else {\n                                    pommers+=1;\n                                    filteredPoms.push({\n                                        pommer: d,\n                                        time: 25 - parseInt(elapsed),\n                                        status: latestPom.status,\n                                        text: latestPom.text,\n                                        poms: pomLength - 1,\n                                    })\n                                }\n                            }\n                            // if the user is not present\n                            else {\n                                filteredPoms.push({\n                                    pommer: d,\n                                    time: 0,\n                                    status: '',\n                                    text: '',\n                                    poms: 0,\n                                })\n                            }\n\n                        })\n\n                        if (selfPresent) {\n                            this.setState({\n                                poms: filteredPoms,\n                                myPom: myPom,\n                                selfPomCount, latestPomElapsed, latestPomModified, latestPomStart,\n                                latestPomStatus, latestPomText\n                            });\n                        }\n                        else {\n                            this.setState({\n                                myPom: myPom,\n                                poms: filteredPoms,\n                            });\n                        }\n\n\n                    }\n                    else {\n                        let allPoms = [];\n                        let myPom = {\n                            pommer: user.userID,\n                            time: 0,\n                            status: '',\n                            text: '',\n                            poms: 0\n                        }\n\n                        following.map((fol) => {\n                            allPoms.push({\n                                pommer: fol,\n                                time: 0,\n                                status: '',\n                                text: '',\n                                poms: 0,\n                            })\n                        })\n\n                        this.setState({ poms: allPoms, myPom: myPom })\n                    }\n                })\n        })\n\n        if (pommers>this.state.pommers){\n            this.setState({pommers:pommers, open:true},()=>{\n                beep.play();\n            })\n        }\n\n\n\n    }\n\n    startPom() {\n\n        // const queryDate = new Date().toLocaleDateString().replace(/\\//g, '-');\n        // const queryDate = new Date().getUTCDate() + '-' + new Date().getUTCMonth() + '-' + new Date().getUTCFullYear();\n        const queryDate = new Date().getDate() + '-' + new Date().getMonth() + '-' + new Date().getFullYear();\n\n        const utc = new Date().getTime();\n\n        firebase.database().ref(this.deployment + '/poms').child(queryDate).child(this.state.user.uid)\n            .child(this.state.selfPomCount).set({\n                elapsed: 0,\n                modifiedUTC: utc,\n                startUTC: utc,\n                status: \"inprogress\",\n                text: \"\"\n            });\n\n        firebase.database().ref(this.deployment + '/pomsUser').child(this.state.user.uid).child(queryDate)\n            .child(this.state.selfPomCount).set({\n                elapsed: 0,\n                modifiedUTC: utc,\n                startUTC: utc,\n                status: \"inprogress\",\n                text: \"\"\n            });\n        \n            // this.refreshAllPoms(this.state.following, this.state.user);\n\n        let myPom = this.state.myPom;\n        myPom = {\n            pommer: this.state.user.userID,\n            poms: this.state.selfPomCount,\n            // self: true,\n            status: \"inprogress\",\n            text: \"\",\n            time: 25,\n        }\n        this.setState({\n            myPom: myPom,\n            selfPomCount: this.state.selfPomCount + 1,\n            latestPomElapsed: 0,\n            latestPomModified: utc,\n            latestPomStart: utc,\n            latestPomStatus: 'inprogress',\n            latestPomText: '',\n            open: true\n\n        })\n\n        beep.play();\n\n\n\n    }\n\n    resumePom() {\n\n        // const queryDate = new Date().toLocaleDateString().replace(/\\//g, '-');\n        // const queryDate = new Date().getUTCDate() + '-' + new Date().getUTCMonth() + '-' + new Date().getUTCFullYear();\n        const queryDate = new Date().getDate() + '-' + new Date().getMonth() + '-' + new Date().getFullYear();\n\n        const utc = new Date().getTime();\n\n\n        firebase.database().ref(this.deployment + '/poms').child(queryDate).child(this.state.user.uid)\n            .child(this.state.selfPomCount - 1).set({\n                elapsed: this.state.latestPomElapsed,\n                modifiedUTC: utc,\n                startUTC: this.state.latestPomStart,\n                status: \"inprogress\",\n                text: this.state.latestPomText\n            });\n\n            firebase.database().ref(this.deployment + '/pomsUser').child(this.state.user.uid).child(queryDate)\n            .child(this.state.selfPomCount - 1).set({\n                elapsed: this.state.latestPomElapsed,\n                modifiedUTC: utc,\n                startUTC: this.state.latestPomStart,\n                status: \"inprogress\",\n                text: this.state.latestPomText\n            });\n\n        // this.refreshAllPoms(this.state.following, this.state.user);\n\n        let myPom = this.state.myPom;\n        myPom.status = \"inprogress\";\n\n        this.setState({\n            myPom: myPom,\n            latestPomModified: utc,\n            latestPomStatus: 'inprogress',\n        })\n\n    }\n\n    pausePom() {\n\n        // const queryDate = new Date().toLocaleDateString().replace(/\\//g, '-');\n        // const queryDate = new Date().getUTCDate() + '-' + new Date().getUTCMonth() + '-' + new Date().getUTCFullYear();\n        const queryDate = new Date().getDate() + '-' + new Date().getMonth() + '-' + new Date().getFullYear();\n\n        const utc = new Date().getTime();\n\n        let elapsedNew = (utc - this.state.latestPomModified) + this.state.latestPomElapsed;\n\n        firebase.database().ref(this.deployment + '/poms').child(queryDate).child(this.state.user.uid)\n            .child(this.state.selfPomCount - 1).set({\n                elapsed: elapsedNew,\n                modifiedUTC: utc,\n                startUTC: this.state.latestPomStart,\n                status: \"pause\",\n                text: this.state.latestPomText\n            });\n\n        \n        firebase.database().ref(this.deployment + '/pomsUser').child(this.state.user.uid).child(queryDate)\n            .child(this.state.selfPomCount - 1).set({\n                elapsed: elapsedNew,\n                modifiedUTC: utc,\n                startUTC: this.state.latestPomStart,\n                status: \"pause\",\n                text: this.state.latestPomText\n            });\n\n        // this.refreshAllPoms(this.state.following, this.state.user);\n\n        let myPom = this.state.myPom;\n        myPom.status = \"pause\";\n        this.setState({\n            myPom: myPom,\n            latestPomElapsed: elapsedNew,\n            latestPomModified: utc,\n            latestPomStatus: 'pause',\n        })\n\n    }\n\n    textPom(txt) {\n\n        // const queryDate = new Date().toLocaleDateString().replace(/\\//g, '-');\n        // const queryDate = new Date().getUTCDate() + '-' + new Date().getUTCMonth() + '-' + new Date().getUTCFullYear();\n        const queryDate = new Date().getDate() + '-' + new Date().getMonth() + '-' + new Date().getFullYear();\n\n\n        firebase.database().ref(this.deployment + '/poms').child(queryDate).child(this.state.user.uid)\n            .child(this.state.selfPomCount - 1).child('text').set(txt);\n\n        firebase.database().ref(this.deployment + '/pomsUser').child(this.state.user.uid).child(queryDate)\n            .child(this.state.selfPomCount - 1).child('text').set(txt);\n\n            // this.refreshAllPoms(this.state.following, this.state.user);\n\n        let myPom = this.state.myPom;\n        myPom.text = txt;\n\n        this.setState({\n            myPom: myPom,\n            latestPomText: txt,\n            open: false\n        })\n\n    }\n\n    handleClose() {\n        this.setState({ open: false })\n    }\n\n\n\n    render() {\n        const { classes, following, user } = this.props;\n\n        console.log('state of poms', this.state.poms);\n        console.log('state of mypoms', this.state.myPom);\n\n\n\n\n        return (\n            <Paper elevation={0}>\n                <Grid container className={classes.brumb} direction=\"row\" justify=\"space-between\" alignItems=\"center\">\n                    <Breadcrumbs aria-label=\"breadcrumb\">\n                        {/* <Typography color=\"inherit\">CoPom [{new Date().toLocaleDateString()}]</Typography> */}\n                        <Typography color=\"inherit\">CoPom [{new Date().getUTCDate() + '-' + new Date().getUTCMonth() + '-' + new Date().getUTCFullYear()}]</Typography>\n                    </Breadcrumbs>\n                </Grid>\n                <Grid container direction=\"row\" justify=\"center\">\n                    <PomCard selfPom={true} pomData={this.state.myPom} key={0} startPom={this.startPom} pausePom={this.pausePom} textPom={this.textPom} resumePom={this.resumePom}></PomCard>\n\n                </Grid>\n                <Grid container direction=\"row\" justify=\"flex-start\">\n                    <Typography className={classes.brumb}>Following</Typography>\n                </Grid>\n\n                <Grid container direction=\"row\" justify=\"flex-start\">\n                    {\n                        this.state.poms.map((d, i) => (\n                            <PomCard selfPom={false} pomData={d} key={i + 1} startPom={this.startPom} pausePom={this.pausePom} textPom={this.textPom} resumePom={this.resumePom}></PomCard>\n                        ))\n                    }\n                </Grid>\n                <Snackbar\n                    anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n                    autoHideDuration={15000}\n                    onClose={() => { this.setState({ open: false }) }}\n                    open={this.state.open}\n                    key={'bottom-right'}\n                >\n                    <SnackbarContent className={classes.snack}\n                        message=\"Yay, A new Pom!\"\n                    />\n                </Snackbar>\n            </Paper>\n\n        )\n    }\n}\n\nexport default withStyles(styles)(CoPom);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport TrendingUpIcon from '@material-ui/icons/TrendingUp';\nimport AddIcon from '@material-ui/icons/Add';\nimport CloseIcon from '@material-ui/icons/Close';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport SaveIcon from '@material-ui/icons/Save';\n\nimport {\n    Typography, Button, Dialog, AppBar, Avatar, Fab,\n    Toolbar, IconButton, Grid, TextField, FormControl, InputLabel, Select, MenuItem\n} from '@material-ui/core';\n\nimport TextFieldCharCount from '../components/textfieldcharcount'\n\n\nconst styles = theme => ({\n    root: {\n        background: '#eaeff0',\n        padding: '12px'\n    },\n    bold: {\n        fontWeight: 800,\n        padding: \"10px\"\n    },\n    tableCenter: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n    },\n    heading: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        padding: \"10px\",\n    },\n    col: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        padding: \"10px\",\n        flexDirection: \"row\",\n        width: '100%'\n    },\n    row: {\n        display: \"flex\",\n        // padding: \"10px\",\n        flexDirection: \"column\",\n        alignItems: 'flex-start'\n    },\n    brumb: {\n        padding: 20,\n    },\n    bound: {\n        borderRadius: \"5px\",\n        border: \"1px solid #aaa\",\n        padding: \"10px\"\n    },\n    goal: {\n        fontWeight: 800,\n        fontSize: 15\n    },\n    goalMetric: {\n        fontSize: 10\n    },\n    description: {\n        paddingBottom: \"20px\"\n    },\n    fail: {\n        marginTop: \"10px\"\n    },\n    darkBackground: {\n        background: \"#333\",\n        \"&:hover\": {\n            color: \"#333\",\n            background: '#fff'\n        },\n    },\n    dark: {\n        background: \"#333\",\n    },\n    appBar: {\n        position: 'relative',\n        background: '#333'\n    },\n    toolBar: {\n        justifyContent: 'space-between'\n    },\n    form: {\n        padding: \"50px\"\n    },\n    category: {\n        background: \"#fff\",\n        padding: \"1px\",\n    },\n    formControl: {\n        width: '100%'\n    },\n    obj: {\n        paddingTop: \"30px\",\n        fontSize: \"20px\",\n        letterSpacing: \"10px\",\n        textAlign: \"center\",\n        width: \"100%\"\n    },\n    buttonify: {\n        cursor: \"pointer\"\n    }\n});\n\n\n\nclass Edit extends React.Component {\n\n    constructor(props) {\n        super(props);\n        const { showOKR } = props;\n        const objective = {\n            id: showOKR.id,\n            title: showOKR.title,\n            description: showOKR.description,\n            failureMode: showOKR.failureMode,\n            category: showOKR.category\n        }\n        const keyResults = [];\n        showOKR.keyResults.forEach((d, i) => {\n            keyResults.push({ id: i, result: d.result, metric: d.metric, progress: d.progress });\n        })\n\n\n        this.state = {\n            objective, keyResults\n        }\n\n        this.addKR = this.addKR.bind(this);\n        this.deleteKR = this.deleteKR.bind(this);\n        this.changeCategory = this.changeCategory.bind(this);\n        this.changeTitle = this.changeTitle.bind(this);\n        this.changeDescription = this.changeDescription.bind(this);\n        this.changeFailureMode = this.changeFailureMode.bind(this);\n        this.changeKRResult = this.changeKRResult.bind(this);\n        this.changeKRMetric = this.changeKRMetric.bind(this);\n    }\n\n    componentWillReceiveProps({ showOKR }) {\n        const objective = {\n            id: showOKR.id,\n            title: showOKR.title,\n            description: showOKR.description,\n            failureMode: showOKR.failureMode,\n            category: showOKR.category\n        }\n\n        const keyResults = [];\n        showOKR.keyResults.forEach((d, i) => {\n            keyResults.push({ id: i, result: d.result, metric: d.metric, progress: d.progress });\n        })\n\n\n        this.setState({ objective, keyResults })\n    }\n\n    addKR = event => {\n        this.setState(state => {\n            const newKR = state.keyResults;\n            newKR.push({ id: newKR.length, result: \"\", metric: \"\", progress: [0,0,0,0,0,0,0,0,0,0,0,0] });\n            let temp = {\n                ...state,\n                keyResults: newKR\n            }\n            return temp\n        });\n\n    };\n\n    changeCategory = event => {\n        const newCategory = event.target.value;\n        this.setState({ objective: { ...this.state.objective, category: newCategory } });\n    };\n\n    deleteKR = deleteID => {\n        const newKR = this.state.keyResults.filter((d) => (d.id !== deleteID));\n        this.setState({ keyResults: newKR });\n    };\n\n    changeTitle = event => {\n        this.setState({ objective: { ...this.state.objective, title: event.target.value } });\n    }\n    changeDescription = event => {\n        this.setState({ objective: { ...this.state.objective, description: event.target.value } });\n    }\n    changeFailureMode = event => {\n        this.setState({ objective: { ...this.state.objective, failureMode: event.target.value } });\n    }\n    changeKRResult = (event, id) => {\n        const newKR = this.state.keyResults.map((d, i) => {\n            if (d.id === id) {\n                d.result = event.target.value;\n            }\n            return d;\n        });\n        this.setState({ keyResults: newKR });\n    }\n    changeKRMetric = (event, id) => {\n        const newKR = this.state.keyResults.map((d, i) => {\n            if (d.id === id) {\n                d.metric = event.target.value;\n            }\n            return d;\n        });\n        this.setState({ keyResults: newKR });\n    }\n\n\n    render() {\n\n        const { classes, openDialog, handleCloseDialog } = this.props;\n        return (\n            <Dialog fullScreen open={openDialog} onClose={() => handleCloseDialog('old', this.state.objective, this.state.keyResults)}>\n                <AppBar className={classes.appBar}>\n                    <Toolbar className={classes.toolBar}>\n                        <IconButton edge=\"start\" color=\"inherit\" onClick={() => handleCloseDialog('old', this.state.objective, this.state.keyResults)} aria-label=\"close\">\n                            <CloseIcon />\n                        </IconButton>\n                        <Typography variant=\"h6\" className={classes.title}>\n                            Edit OKR\n            </Typography>\n                        <Button startIcon={<SaveIcon />} autoFocus color=\"inherit\" variant=\"outlined\" onClick={() => handleCloseDialog('new', this.state.objective, this.state.keyResults)}>\n                            Save\n            </Button>\n                    </Toolbar>\n                </AppBar>\n                <Grid container direction=\"row\" justify=\"center\" className={classes.form} spacing={3}>\n                    <Grid item xs={false} sm={false} md={2} lg={3} xl={3}>\n                    </Grid>\n                    <Grid container item xs={12} sm={12} md={8} lg={6} xl={6} spacing={3} justify=\"center\">\n                        <Typography variant=\"overline\" className={classes.obj}>Objective</Typography>\n\n                        <Grid item container direction=\"row\" spacing={3} alignItems=\"center\" justify=\"space-between\">\n                            <Grid item xs={8}>\n                                <TextFieldCharCount\n                                    required\n                                    id=\"outlined-required\"\n                                    label=\"Objective\"\n                                    onChange={this.changeTitle}\n                                    value={this.state.objective.title}\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    inputProps={{\n                                        maxLength: 70,\n                                    }}\n                                />\n                            </Grid>\n                            <Grid item xs={4}>\n                                <FormControl variant=\"outlined\" className={classes.formControl}>\n                                    <InputLabel id=\"demo-simple-select-outlined-label\" className={classes.category}>\n                                        Category *\n                                    </InputLabel>\n\n                                    <Select\n                                        labelId=\"demo-simple-select-outlined-label\"\n                                        id=\"demo-simple-select-outlined\"\n                                        value={this.state.objective.category}\n                                        onChange={this.changeCategory}\n\n                                    >\n                                        <MenuItem value={'relationships'}>Relationships</MenuItem>\n                                        <MenuItem value={'fitness'}>Fitness</MenuItem>\n                                        <MenuItem value={'work'}>Work</MenuItem>\n                                        <MenuItem value={'creative'}>Creative</MenuItem>\n                                        <MenuItem value={'other'}>Other</MenuItem>\n                                    </Select>\n                                </FormControl>\n                            </Grid>\n\n\n                        </Grid>\n                        <TextFieldCharCount\n                            required\n                            id=\"outlined-required-decription\"\n                            label=\"Description\"\n                            onChange={this.changeDescription}\n                            value={this.state.objective.description}\n                            variant=\"outlined\"\n                            fullWidth\n                            multiline\n                            rows={2}\n                            inputProps={{\n                                maxLength: 140,\n                            }}\n                        />\n                        <Typography variant=\"overline\" className={classes.obj}>Key Results</Typography>\n                        {\n                            this.state.keyResults.map((kr, i) => {\n                                // console.log(\"kr\",kr,i)\n                                return (\n                                    <Grid container direction=\"row\" style={{ padding: \"10px\" }} key={kr.id} alignItems=\"center\">\n                                        <Grid item container justify=\"center\" xs={1} key={i}>\n                                            <Avatar variant=\"rounded\" className={classes.dark} key={i}>\n                                                <TrendingUpIcon />\n                                            </Avatar>\n                                        </Grid>\n\n                                        <Grid item xs={7}>\n                                            <TextFieldCharCount\n                                                required\n                                                label=\"Key Result\"\n                                                onChange={(e) => this.changeKRResult(e, kr.id)}\n                                                value={kr.result}\n                                                variant=\"outlined\"\n                                                style={{ width: \"100%\" }}\n                                                fullWidth\n                                                inputProps={{\n                                                    maxLength: 140,\n                                                }}\n                                            />\n                                        </Grid>\n                                        <Grid item xs={3}>\n                                            <TextFieldCharCount\n                                                required\n                                                label=\"System Metric\"\n                                                onChange={(e) => this.changeKRMetric(e, kr.id)}\n                                                value={kr.metric}\n                                                variant=\"outlined\"\n                                                style={{ width: \"100%\" }}\n                                                inputProps={{\n                                                    maxLength: 3,\n                                                }}\n                                            />\n                                        </Grid>\n                                        <Grid container justify=\"center\" item xs={1}>\n\n                                            <CancelIcon fontSize=\"small\" onClick={() => this.deleteKR(kr.id)} className={classes.buttonify} />\n\n                                        </Grid>\n\n\n\n                                    </Grid>\n\n                                )\n                            })\n                        }\n\n                        <Grid container direction=\"column\" alignItems=\"center\" style={{ margin: \"20px\" }}>\n                            <Grid container direction=\"column\" alignItems=\"center\" justify=\"center\">\n                                <Fab color=\"primary\" aria-label=\"add\" className={classes.darkBackground}\n                                    onClick={this.addKR}\n                                >\n                                    <AddIcon />\n                                </Fab>\n                                <Typography variant=\"caption\">Add New Key Result</Typography>\n                            </Grid>\n                            <TextFieldCharCount\n                            required\n                            id=\"outlined-required-failure-mode\"\n                            label=\"Possible Failure Mode\"\n                            onChange={this.changeFailureMode}\n                            value={this.state.objective.failureMode}\n                            variant=\"outlined\"\n                            className={classes.fail}\n                            fullWidth\n                            multiline\n                            rows={2}\n                            inputProps={{\n                                maxLength: 140,\n                            }}\n                        />\n                            <Grid container direction=\"row\" justify=\"space-evenly\" style={{ paddingTop: \"50px\" }}>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    className={classes.darkBackground}\n                                    startIcon={<CloseIcon />}\n                                    onClick={() => handleCloseDialog('old', this.state.objective, this.state.keyResults)}\n                                >\n                                    Cancel\n                            </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    className={classes.darkBackground}\n                                    startIcon={<DeleteIcon />}\n                                    onClick={() => handleCloseDialog('delete', this.state.objective, this.state.keyResults)}\n                                >\n                                    Delete\n                            </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    className={classes.darkBackground}\n                                    startIcon={<SaveIcon />}\n                                    onClick={() => handleCloseDialog('new', this.state.objective, this.state.keyResults)}\n                                >\n                                    Save\n                            </Button>\n                            </Grid>\n                        </Grid>\n\n                    </Grid>\n                    <Grid item xs={false} sm={false} md={2} lg={3} xl={3}></Grid>\n\n\n                </Grid>\n\n            </Dialog>\n\n        )\n    }\n}\n\nexport default withStyles(styles)(Edit);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport {\n    Paper, Grid, Typography, ListItem, Button, Divider, Link, Card, CardActionArea, CardMedia, CardContent\n} from '@material-ui/core';\n\n\nimport firebase from '../firebase';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\n\n\nimport { textAlign } from '@material-ui/system';\n\nimport img1 from \"../assets/1.png\";\nimport img2 from \"../assets/2.png\";\nimport img3 from \"../assets/3.png\";\nimport img4 from \"../assets/4.png\";\n\nconst styles = theme => ({\n    root: {\n        background: '#fff',\n        flexGrow: 1,\n        textAlign: 'center',\n        minHeight: '100vh',\n        margin: '0px'\n    },\n    jumbo: {\n        fontWeight: 600,\n        cursor: 'pointer',\n        color: \"#333\",\n        padding: \"20px\",\n        marginBottom: '20px'\n    },\n    section1: {\n        'display': 'flex',\n        'flexDirection': 'column',\n        'justifyContent': 'center',\n        'alignItems': 'center',\n        margin: \"50px\",\n        marginBottom: \"50px\"\n    },\n    section2: {\n        padding: \"50px\",\n        background: \"#0d0c0c\",\n        color: \"#fff\",\n        borderRadius: \"0px\",\n        textAlign: 'justify'\n    },\n    section3: {\n        padding: \"50px\",\n        color: \"#000\",\n        borderRadius: \"0px\",\n        textAlign: 'justify'\n    },\n    what: {\n        textTransform: 'uppercase',\n        letterSpacing: '20px',\n        fontWeight: 100,\n        fontSize: '2rem',\n        marginTop: '30px',\n        marginBottom: '30px',\n        textAlign: 'center'\n    },\n    why: {\n        textAlign: 'left'\n    },\n    img:{\n        width: \"100%\",\n        border: \"5px solid #0d0c0c\",\n        borderRadius: \"10px\"\n    },\n    example:{\n        width: \"100%\",\n        margin: \"50px 0px\"\n    }\n});\n\n\n\nclass FrontPage extends React.Component {\n\n    constructor(props) {\n        super(props);\n        let _isMounted = false;\n        this.uiConfig = {\n            signInFlow: 'popup',\n            signInOptions: [firebase.auth.GoogleAuthProvider.PROVIDER_ID],\n            callbacks: {\n                signInSuccess: () => false\n            }\n        }\n\n\n    }\n\n\n    render() {\n        const { classes, theme } = this.props;\n\n\n        return (\n            <Paper className={classes.root} elevation={0}>\n                <Paper elevation={0} className={classes.section1}>\n\n                    <Typography variant=\"h1\" className={classes.jumbo}>\n                        <Link href=\"/\" underline=\"none\" color=\"textPrimary\">okru</Link>\n                    </Typography>\n                    <Typography variant=\"caption\">Set Personal OKRs, Be Accountable to Friends</Typography>\n                    <Typography variant=\"caption\">Become a Better Version of You</Typography>\n                    <StyledFirebaseAuth\n                        uiConfig={this.uiConfig}\n                        firebaseAuth={firebase.auth()}\n                    />\n                    <Divider style={{ width: \"30%\", margin: \"30px\" }} />\n                    <Grid container direction=\"column\" item xs={10} sm={6} md={6} lg={4} xl={4}>\n                        <Typography variant=\"subtitle1\">This is a <b><i>Measure What Matters</i></b> meets <b><i>Elephant In The Brain</i></b> meets <b><i>Atomic Habits</i></b> effort to\n                        use personal OKRs to define goals, track progress and positively deceive our silly brains. You can set your quarterly OKRs, pre-commit metrics, estimate possible failure modes and follow your friends.</Typography>\n\n                        {/* <Typography variant=\"overline\">More features are coming soon!</Typography> */}\n                        <Button color=\"inherit\" variant=\"outlined\"  className={classes.example} onClick={() => (window.location.href = '/?m=okrs&user=vivekaithal44&q=1&y=2020')}>Check out an example</Button>\n                    </Grid>\n\n\n                </Paper>\n                <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" className={classes.section2} elevation={0}>\n                    <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" item xs={10} sm={6} md={6} lg={6} xl={4}>\n                        <Typography className={classes.what}>\n                            What is OKRU?\n                    </Typography>\n                        <Typography variant=\"body1\" style={{ textAlign: 'justify' }}>OKRU is a bunch of scratch-your-own-itch, experimental and open-source tools to track goals for ensuring both long and short term accountability. Most things of any value in life are hard and it takes an unbelievable amount of discipline to be even half decent at them. Getting fit in hard. Getting competent is hard. Building useful products is hard. And we can use all the help we can get.\n                        \n                        <br></br> \n                        <br></br> \n                        But from the moment we wake up every morning to the moment we fall asleep, we are subject to an onslaught of tools weaponized to capture our attention, and distract us, in some shape or form. I am convinced that discipline and self accountability separate people who do kickass things from people who do not, far more than intelligence or 'talent' (There's of course a lot of self-selection and positive feedback loops, but I think this broadly holds). Deceiving oneself with feel-good narratives is one of the easiest things to do. There are always legitimate and valid reasons for not spending time on our goals, right? I want to be more accountable to myself. I want to set ambitious goals, make public commitments and track this over a long time. I want to talk less, and act more - deliberately and decisively - with delightfully fun tools helping me navigate the terrain. I hope OKRU will eventually evolve to solve some of this need.</Typography>\n                        <Typography variant=\"h2\" style={{ textAlign: 'left', width: \"100%\"}}>\n                            “Is this yet-another-habit-tracking-app?”\n                        </Typography>\n                        <Typography variant=\"h2\" style={{ textAlign: 'right', width: \"100%\" }}>\n                            No. Hopefully :)\n                        </Typography>\n                    </Grid>\n                </Grid>\n                <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" className={classes.section3} elevation={0}>\n                    <Grid container direction=\"column\" item xs={10} sm={6} md={6} lg={6} xl={4}>\n\n\n                        <Typography variant=\"h4\" className={classes.what}>\n                            Why I think OKRU might actually work\n                        </Typography>\n\n                        <Typography variant=\"h5\" className={classes.why}>\n\n                            - Tracking daily habits ≠ Tracking life goals </Typography>\n                        <Typography>\n                        I have used almost all popular habit tracking apps. Some of them are great, most of them aren't. But they almost always focuss on immediate, daily tasks - with the final goals residing vaguely in our heads. With OKRU, we begin with the broad goals, make them explicit, put them down and then work out specific steps to get to those goals. It gets very real when it's out of our heads, for people to see.<br></br><br></br></Typography>\n                        <Typography variant=\"h5\" className={classes.why}>- OKRU will never have a leaderboard </Typography>\n                        <Typography>\n                        Accountability with close friends and onerself, are the only things that work, and scale. All tools that intend to hoodwink people into doing 'The Right Thing', are nonsense. Wanting to be better, and putting in the work are necessary conditions to being better. Personally, social-media related incentive structures do not work with me. But I care very deeply about what my closest friends think of me. I suspect if they asked me how I was doing on my goals each week, I'd actually make more progress than otherwise. OKRU tries to facilitate this. I do not want paternalistic apps \"nudging\" me. I want my goals to be surfaced frequently, and collaboratively so that I can avoid getting  caught up in the humdrum of life. The self evaluations on OKRU are also only indicative, by design. There will be no averaging of any score to rank you on your goal-orientedness that you can put on your LinkedIn profile. I could potentially cheat on my updates. Nobody cares. There's no audience to play to.<br></br><br></br></Typography>\n                        <Typography variant=\"h5\" className={classes.why}>- Goals are fluid</Typography>\n                        <Typography>\n                        There's a lot to learn from how fluid our goals are, when not on paper. Self clarification leads to most gains in terms of evaluating what we want. OKRU wants to facilitate this self confrontation (not in a negative way). I believe that over 4–5 quarters I'll have a colourful view of my claimed priorities, my actual priorities, and how much they align. I'm excited for this. :)<br></br><br></br>\n                        </Typography>\n\n                        <Typography variant=\"caption\">\n                            * Much of the content here is just a condensed, and cached form of things said by much smarter people in <a href=\"https://jamesclear.com/atomic-habits\">books</a>, <a href=\"https://twitter.com/naval/status/1084739181593559040\">tweets</a> and <a href=\"https://nav.al/addiction\">talks</a>.\n                    </Typography>\n                    </Grid>\n                </Grid>\n\n                <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" className={classes.section2} elevation={0}>\n\n\n                    <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" item xs={10} sm={6} md={6} lg={6} xl={4}>\n                        <Typography className={classes.what}>\n                            Tool 1 : Personal OKRs\n                    </Typography>\n                        <Typography variant=\"body1\" style={{ textAlign: 'justify' }}>\n                        Objectives and Key Results is a goal-setting system used in teams at Intel, Google etc. to outline broad (quarterly) goals for teams (and individuals), track progress and ensure accountability. Objectives are meant to be directional and Key Results, actionable means to reasonably satisfy an objective. OKRU follows a quarterly cycle - I think it is a reasonable amount of time to make progress on goals. Objectives are ideally vague and ambitious, but Key results tend to be very very specific, simple, and measurable. An important addition is to measure systems and not goals - measuring the number of times you go to the gym is useful, but measuring your weight everyday may not be very actionable. <br></br>\n                        <br></br> \n                        \n                        Spending time thinking about Possible Failure Modes can help preempt and mitigate them. Do not add more than 4–5 objectives, and 3–4 key results per objective. Make sure you round the goals out to everything important to you - fitness, work, academics etc. A common failure mode is to use this as an extra-work-hobby-only space. A good indication of well crafted OKRs is the overlap of your time approximate distribution of time on OKRs and other activities each day. Note that all OKRs on OKRU are currently public. At the end of each week, indicate how you're doing on your goals - by clicking on bubbles below each KR [Red : Haven't made much progress; Yellow : Made some progress, need to step it up; Green : This is a pace I'd like to continue next week]\n                            <br></br><br></br> \n                            You can also search for friends, follow them, and check out their OKRs. Finally, print your OKRs! Because it looks really cool on paper, trust me. I have my OKRs printed and stuck to my room wall, office desk, and my bathroom mirror. :)\n                    </Typography>\n                    <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n                    \n                    <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" item xs={12} sm={12} md={6} lg={6} xl={6}>\n                    <img  className={classes.img} src={img1}></img>\n                                    <Typography>\n                                        Add your OKRs\n                                    </Typography>\n                    </Grid>\n                    \n                    <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" item xs={12} sm={12} md={6} lg={6} xl={6}>\n                    <img  className={classes.img}src={img2}></img>\n                                    <Typography>\n                                        Update your Progress\n                                    </Typography>\n                    </Grid>\n                    \n                    <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" item xs={12} sm={12} md={12} lg={12} xl={12}>\n                    <img className={classes.img} src={img3}></img>\n                    <Typography>\nPrint 'em out!                                    </Typography>\n                    </Grid>\n                    \n                    \n                    </Grid>\n                        \n                    </Grid>\n\n                    <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" item xs={10} sm={6} md={6} lg={6} xl={4}>\n                        <Typography className={classes.what}>\n                            Tool 2 : CoPom\n                    </Typography>\n                        <Typography variant=\"body1\" style={{ textAlign: 'justify' }}>\n                        In the Pomodoro Technique, you work in chunks of 25 minutes with a break of 5 minutes in between. I've been using this for a while everyday, with decent success. I love co-pomming with friends and decided to build it into OKRU. It can get pretty lonely and disconnected working alone at homes, right now. Currently on OKRU, you can :\n                        <br></br>- Start, pause, resume Poms\n                        <br></br>- Add a one line description to each Pom to let other people know what you’re working on\n                        <br></br>- Copom with friends you follow on OKRU\n                    </Typography>\n                    <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n                    \n                    \n                    <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" item xs={12} sm={12} md={6} lg={6} xl={6}>\n                    <img className={classes.img} src={img4}></img>\n                    <Typography>\n                    CoPom now!                                    </Typography>\n                    </Grid>\n                    \n                    \n                    </Grid>\n                    <Button color=\"inherit\" variant=\"outlined\" className={classes.example} onClick={() => (window.location.href = '/?m=okrs&user=vivekaithal44&q=1&y=2020')}>Check out an example</Button>    \n                    </Grid>\n                </Grid>\n\n\n                <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" className={classes.section3} elevation={0}>\n                    <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\"  item xs={10} sm={6} md={6} lg={6} xl={4}>\n                        <Typography>\n                        The idea is to build OKRU, over time, to be useful. So, you can fully expect current useless features to be mercilessly removed, and new features to be added. I'm working on more minute privacy controls and a short mail digest each week of friends' updates, as you read this. Do add your OKRs, CoPom with friends, and let me know how it goes!\n                        <br></br>You can also add issues/new feature requests on <a href=\"https://github.com/nuwandavek/okru/issues\">Github Issues</a>.\n                        <br></br><br></br> \n                        Reach out to me in case you have any questions or want to discuss about it, at vivekaithal44[at]gmail[dot]com or <a href=\"https://twitter.com/nuwandavek\">@nuwandavek</a>. Hope you get cracking on your goals! I send you much love from my end. :)\n                        </Typography>\n                        <Typography> Made with ❤︎ by Vivek</Typography>    \n\n                    </Grid>\n                </Grid>\n\n\n            </Paper>\n\n        )\n    }\n}\n\nexport default withStyles(styles)(FrontPage);\n","import React from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport { Grid, Typography, Menu, Button, MenuItem, Link, Divider, Avatar, BottomNavigation, \n    BottomNavigationAction, Tabs, Tab } from '@material-ui/core';\nimport FollowingTable from '../components/followingtable';\nimport Okrs from '../components/okrs';\nimport CoPom from '../components/copom';\nimport Edit from '../components/dialog';\nimport FrontPage from '../components/frontpage';\nimport firebase from '../firebase';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\n\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\nimport GroupWorkIcon from '@material-ui/icons/GroupWork';\n\n\nconst dummyData = require('../components/dummyData.json');\n\n\nconst styles = theme => ({\n    root: {\n        background: '#fff',\n        flexGrow: 1,\n        textAlign: 'center',\n        minHeight: '100vh',\n        margin: '0px'\n    },\n    jumbo: {\n        fontWeight: 600,\n        cursor: 'pointer',\n        color: \"#333\",\n        padding: \"20px\",\n        marginBottom: '20px'\n    },\n    dark: {\n        background: '#333'\n    },\n    accountButton: {\n        position: \"absolute\",\n        top: \"20px\",\n        right: \"20px\",\n        cursor: \"pointer\"\n    },\n    stickToBottom: {\n        width: '100%',\n        position: 'fixed',\n        bottom: 0,\n        borderTop: '1px solid #eee',\n        zIndex: '10',\n    },\n    edit: {\n        maxWidth: '100%',\n        borderRight: '1px solid #888',\n        borderLeft: '1px solid #888',\n        background: \"#333\",\n        color: '#888',\n        // boxShadow: \"none\",\n        \"&:hover\": {\n            color: \"#fff\",\n            // background: '#fff'\n        },\n    },\n    tab:{\n        background: '#333',\n        borderRadius: \"5px\"\n    },\n    rightpane:{\n        paddingRight: \"5px\",\n        paddingLeft: \"5px\"\n    },\n    leftpane:{\n        paddingRight: \"5px\",\n        paddingLeft: \"5px\"\n    }\n});\n\n\n\nclass HomeScreen extends React.Component {\n\n\n\n    constructor(props) {\n        super(props);\n        let _isMounted = false;\n        this.uiConfig = {\n            signInFlow: 'popup',\n            signInOptions: [firebase.auth.GoogleAuthProvider.PROVIDER_ID],\n            callbacks: {\n                signInSuccess: () => false\n            }\n        }\n\n\n\n        this.state = {\n            anchorEl: null,\n            mode: props.mode,\n            isSignedIn: false,\n            showDialog: false,\n            showDialogContent: null,\n            curUserOKRs: [],\n            curUser: {},\n            userlist: [],\n            pommers: [],\n            followlist: {},\n            followerslist: {},\n            poms: {},\n            isFollowing: false,\n            userRequested: new URLSearchParams(window.location.search).get('user'),\n            quarter: 'Q' + (new URLSearchParams(window.location.search).get('q') || Math.ceil((new Date().getMonth() + 1) / 3)),\n            year: 'Y' + (new URLSearchParams(window.location.search).get('y') || new Date().getFullYear()),\n            ...dummyData\n        }\n\n\n        this.handleCloseDialog = this.handleCloseDialog.bind(this);\n        this.handleOpenDialog = this.handleOpenDialog.bind(this);\n        this.handleFollow = this.handleFollow.bind(this);\n        this.signOut = this.signOut.bind(this);\n        this.updateProgress = this.updateProgress.bind(this);\n    }\n\n    signOut() {\n        this.setState({\n            anchorEl: null,\n            isSignedIn: false,\n            curUserOKRs: [],\n            curUser: {},\n            // userlist: [],\n            followlist: {},\n            followerslist: {},\n            poms: {},\n            userRequested: null\n        })\n\n        firebase.auth().signOut();\n    }\n\n    handleFollow = (event) => {\n        if (!this.state.isFollowing) {\n            this.setState({ isFollowing: !this.state.isFollowing });\n            // console.log(this.deployment + '/userlist/' + this.state.curUser.uid,this.state.curUser);\n            const newFollowRef = firebase.database().ref(this.deployment + '/userlist/' + this.state.curUser.uid).push();\n            newFollowRef.set(this.state.userRequested);\n        }\n        else {\n            this.setState({ isFollowing: !this.state.isFollowing });\n\n            const followID = Object.keys(this.state.followlist).filter(d => {\n                // console.log(d, this.state.followlist[d]);\n                return this.state.followlist[d] === this.state.userRequested\n            }\n            )\n            firebase.database().ref(this.deployment + '/userlist/' + this.state.curUser.uid + '/' + followID).remove();\n\n        }\n\n    }\n\n\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n\n    componentDidMount() {\n        this._isMounted = true;\n        if (process.env.NODE_ENV !== 'production') {\n            this.deployment = 'dev';\n        }\n        else {\n            this.deployment = 'prod';\n        }\n\n        firebase.auth().onAuthStateChanged(user => {\n            if (user !== null) {\n                this.setState({ isSignedIn: !!user })\n                if (this._isMounted) {\n                    console.log(this.deployment);\n\n\n                    // this is all users ref on firebase\n                    const usersRef = firebase.database().ref(this.deployment + '/users')\n\n\n                    const userID = user.email.split('@')[0].replace('.', '');\n                    usersRef.child(user.uid).once('value', (snapshot) => {\n                        if (snapshot.exists()) {\n                            this.setState({ 'curUser': snapshot.val() });\n                            // This user exists, so we need to get them\n                            if (this.state.userRequested === null) {\n                                this.setState({ 'userRequested': snapshot.val().userID })\n                            }\n\n                        }\n                        else {\n                            // This user does not exists, so we need to add the user to our userlist\n                            const userToStore = {\n                                name: user.displayName,\n                                firstName: user.displayName.split(' ')[0],\n                                photoURL: user.photoURL,\n                                email: user.email,\n                                uid: user.uid,\n                                userID: userID\n                            }\n                            firebase.database().ref(this.deployment + '/users/' + user.uid).set(userToStore);\n                            const newUserRef = firebase.database().ref(this.deployment + '/userlist/all/' + user.uid);\n                            newUserRef.set(userID);\n                            this.setState({ 'curUser': userToStore })\n                            if (this.state.userRequested === null) {\n                                this.setState({ 'curUser': snapshot.val(), 'userRequested': snapshot.val().userID })\n                            }\n\n                        }\n\n                        // Get Current User OKRs\n                        if (this.state.userRequested === null) {\n\n                            firebase.database().ref(this.deployment + '/okrs/').child(user.uid).child(this.state.year).child(this.state.quarter).once('value', (snapshot) => {\n                                if (snapshot.val() !== null) {\n                                    this.setState({ 'curUserOKRs': snapshot.val() }, () => {\n                                    });\n                                }\n\n                            })\n\n\n                        }\n                        else {\n                            firebase.database().ref(this.deployment + '/userlist/all').once('value', (d) => {\n                                const dd = d.val();\n                                const userX = Object.keys(dd).find(key => dd[key] === this.state.userRequested);\n\n                                if (userX !== undefined && userX !== null) {\n                                    firebase.database().ref(this.deployment + '/okrs').child(userX).child(this.state.year).child(this.state.quarter).once('value', (snapshot) => {\n                                        if (snapshot.val() !== null) {\n                                            this.setState({ 'curUserOKRs': snapshot.val() }, () => {\n                                            });\n                                        }\n\n                                    })\n                                }\n\n                            })\n                        }\n\n                        // Get All following list\n                        firebase.database().ref(this.deployment + '/userlist/' + user.uid).on('value', (snapshot) => {\n                            if (snapshot.val() !== null) {\n                                this.setState({ followlist: snapshot.val() }, () => {\n                                    // console.log('follow-list-updated!', snapshot.val());\n                                });\n                                if (Object.values(snapshot.val()).indexOf(this.state.userRequested) >= 0) {\n                                    this.setState({ isFollowing: true });\n                                }\n                            }\n                            else {\n                                this.setState({ followlist: {} })\n                            }\n                        })\n\n                        // Get all followers list\n                        firebase.database().ref(this.deployment + '/userlist').once('value', (snapshot) => {\n                            // console.log('alluserlist',snapshot.val());\n                            let obj = snapshot.val();\n                            let allUsers = obj.all;\n                            let followers = {};\n                            let followOpt;\n                            if (obj !== null) {\n                                followOpt = Object.keys(obj).filter(d => {\n                                    if (d !== 'all') {\n                                        let tempUserFollows = obj[d];\n                                        if (Object.values(tempUserFollows).includes(this.state.curUser.userID)) {\n                                            followers[d] = allUsers[d];\n                                            return d;\n                                        }\n                                    }\n                                })\n\n                                this.setState({ followerslist: followers })\n\n\n\n                            }\n                            else {\n                                this.setState({ followerslist: {} })\n                            }\n                        })\n\n\n\n\n                    });\n\n\n                    // const tempDataLoader = firebase.database().ref(this.deployment+'/okrs/temp');\n                    // tempDataLoader.set(dummyData.okrList);\n\n\n\n\n\n                }\n            }\n            else {\n                // window.location.href='/okrs';\n            }\n\n        })\n\n        // Get Another User OKRs (Not signed in, maybe)\n        if (!this.state.isSignedIn && this.state.userRequested !== null) {\n            firebase.database().ref(this.deployment + '/userlist/all').once('value', (d) => {\n                const dd = d.val();\n                const userX = Object.keys(dd).find(key => {\n                    return dd[key] === this.state.userRequested;\n                });\n\n                if (userX !== undefined && userX !== null) {\n\n                    firebase.database().ref(this.deployment + '/okrs').child(userX).child(this.state.year).child(this.state.quarter).once('value', (snapshot) => {\n                        if (snapshot.val() !== null) {\n                            this.setState({ 'curUserOKRs': snapshot.val() }, () => {\n                                // console.log('user-okrs-updated!', snapshot.val(), this.state);\n                            });\n                        }\n\n                    })\n                }\n            })\n\n        }\n\n        // Get all users\n        firebase.database().ref(this.deployment + '/userlist/all').once('value', (snapshot) => {\n            if (snapshot.val() !== null) {\n                this.setState({ userlist: Object.values(snapshot.val()) }, () => {\n                });\n            }\n        })\n\n\n        // Get all pommers\n        firebase.database().ref(this.deployment + '/userlist/all').once('value', (d) => {\n            const dd = d.val();\n\n\n            // const queryDate = new Date().toLocaleDateString().replace(/\\//g, '-');\n            // const queryDate = new Date().getUTCDate() + '-'+new Date().getUTCMonth() + '-' + new Date().getUTCFullYear();\n            const queryDate = new Date().getDate() + '-' + new Date().getMonth() + '-' + new Date().getFullYear();\n\n            firebase.database().ref(this.deployment + '/poms').child(queryDate)\n                .once('value', (snapshot) => {\n                    const pomIds = snapshot.val();\n                    const pommers = [];\n                    if (pomIds !== null) {\n\n                        for (var key in pomIds) {\n                            pommers.push(dd[key]);\n                        }\n                        this.setState({ pommers });\n                    }\n                })\n        })\n\n\n\n\n    }\n\n\n    handleCloseDialog = (flag, objective, keyResults) => {\n        // console.log('closed! NEW', objective, keyResults);\n        const showDialogContent = this.state.showDialogContent;\n        const okrItem = {\n            id: objective.id,\n            title: objective.title,\n            description: objective.description,\n            failureMode: objective.failureMode,\n            category: objective.category,\n            keyResults: keyResults\n        }\n\n        const newOKRList = this.state.curUserOKRs;\n        if (this.state.showDialogContent === null) {\n            if (flag === 'new') {\n                okrItem.id = newOKRList.length;\n                newOKRList.push(okrItem);\n            }\n        }\n        else {\n            if (flag === 'delete') {\n                newOKRList.splice(showDialogContent, 1);\n            }\n            if (flag === 'old') {\n                newOKRList[showDialogContent] = this.state.editOKR;\n            }\n            else if (flag === 'new') {\n\n                newOKRList[showDialogContent] = okrItem;\n            }\n        }\n\n\n        this.setState({\n            ...this.state,\n            showDialog: false,\n            curUserOKRs: newOKRList\n        });\n\n\n        firebase.database().ref(this.deployment + '/okrs/' + this.state.curUser.uid + '/' + this.state.year + '/' + this.state.quarter).set({\n            ...newOKRList\n        });\n\n    };\n\n    handleOpenDialog = (showDialogContent) => {\n        this.setState({ showDialog: true });\n        this.setState({ showDialogContent: showDialogContent });\n        this.setState({ editOKR: this.state.curUserOKRs[showDialogContent] });\n        if (showDialogContent === null) {\n            this.setState({ dialogContent: this.state.defaultDialogContent });\n        }\n        else {\n            this.setState({ dialogContent: this.state.curUserOKRs[showDialogContent] });\n        }\n    };\n\n    updateProgress = (k, i, j) => {\n        if (this.state.curUser.userID === this.state.userRequested && this.state.isSignedIn) {\n            console.log('updateprogress', k, i, j);\n            let allOKRs = this.state.curUserOKRs;\n            let curOKR = allOKRs[k];\n            let curKR = curOKR.keyResults[i];\n\n\n            let newProgress = curKR.progress.map((p, q) => {\n                if (q !== j) {\n                    return p;\n                }\n                else {\n                    return (p + 1) % 4;\n                }\n            });\n\n            let newKRs = curOKR.keyResults.map((p, q) => {\n                if (q !== i) {\n                    return p;\n                }\n                else {\n                    return {\n                        ...curKR,\n                        progress: newProgress\n                    };\n                }\n            })\n\n            let newAllOKRs = allOKRs.map((p, q) => {\n                if (q !== k) {\n                    return p;\n                }\n                else {\n                    return {\n                        ...curOKR,\n                        keyResults: newKRs\n                    };\n                }\n            })\n\n            this.setState({ curUserOKRs: newAllOKRs })\n\n            firebase.database().ref(this.deployment + '/okrs/' + this.state.curUser.uid + '/' + this.state.year + '/' + this.state.quarter).set({\n                ...newAllOKRs\n            });\n        }\n\n\n    }\n\n    navHandleClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n    navHandleClose = event => {\n        this.setState({ anchorEl: null });\n    };\n\n    navSignin = () => {\n        window.location.href = '/?m=okrs'\n        // window.history.pushState({}, null, '/?m=okrs');\n\n    };\n\n\n    render() {\n        // console.log(this.state);\n        const { classes, theme } = this.props;\n\n        // console.log('fresh hell :(', this.state);\n        return (\n\n            <div className={classes.root}>\n                {(this.state.isSignedIn || this.state.userRequested !== null) ?\n                    (<Grid container direction=\"column\">\n                        {/* <Grid container justify=\"flex-end\" direction=\"row\" className={classes.dark}> */}\n                        {this.state.curUser && this.state.isSignedIn ?\n                            (this.state.curUser.photoURL ? <Avatar className={classes.accountButton} alt=\"Remy Sharp\" src={this.state.curUser.photoURL} onClick={this.navHandleClick} />\n                                :\n                                <AccountCircleIcon aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={this.navHandleClick}\n                                    className={classes.accountButton} fontSize=\"large\">\n\n                                </AccountCircleIcon>)\n                            :\n                            <AccountCircleIcon aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={this.navHandleClick}\n                                className={classes.accountButton} fontSize=\"large\">\n\n                            </AccountCircleIcon>}\n                        <Menu\n                            id=\"simple-menu\"\n                            anchorEl={this.state.anchorEl}\n                            keepMounted\n                            open={Boolean(this.state.anchorEl)}\n                            onClose={this.navHandleClose}\n                        >\n                            {!this.state.isSignedIn ? <MenuItem onClick={this.navSignin}>Login</MenuItem> :\n                                <MenuItem onClick={() => {\n                                    console.log('logged out!');\n\n                                    this.setState({ isSignedIn: false }, () => {\n                                        this.signOut();\n                                        // window.location.href = '/okrs';\n                                    });\n                                }}>Logout</MenuItem>}\n                        </Menu>\n                        {/* </Grid> */}\n                        <Grid container item direction=\"row\">\n                            <Grid item xs={false} sm={false} md={2} lg={3} xl={3}>\n                            </Grid>\n                            <Grid item xs={12} sm={12} md={8} lg={6} xl={6}>\n                                <Typography variant=\"h1\" className={classes.jumbo}>\n                                    <Link href=\"/\" underline=\"none\" color=\"textPrimary\">okru</Link>\n                                    {this.deployment === 'dev' ? '-dev' : ''}\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={false} sm={false} md={2} lg={3} xl={3}>\n                            </Grid>\n                        </Grid>\n                        <Grid container item  direction=\"row\" justify=\"center\" xs={12} sm={12} md={12} lg={12} xl={12} style={{ marginBottom: '50px' }}>\n                            <Grid container item  xs={false} sm={false} md={1} lg={1} xl={1}></Grid>\n                            <Grid container item  className={classes.leftpane} direction=\"column\" xs={12} sm={12} md={7} lg={7} xl={7}>\n                                <Tabs\n                                    value={this.state.mode}\n                                    onChange={(event, newValue) => {\n                                        this.setState({ mode: newValue })\n                                        if (newValue === 0) {\n                                            window.history.pushState({}, null, '/?m=okrs');\n                                            // window.location.href='/?m=okrs';\n                                        }\n                                        else if (newValue === 1) {\n                                            window.history.pushState({}, null, '/?m=copom');\n                                            // window.location.href='/?m=copom';\n                                        }\n                                    }}\n                                    // indicatorColor=\"none\"\n                                    // textColor=\"none\"\n                                    className={classes.tab}\n                                >\n                                    <Tab icon={<FormatListBulletedIcon />} label=\"Personal OKRs\" />\n                                    <Tab icon={<GroupWorkIcon />} label=\"CoPom\" />\n                                </Tabs>\n                                {this.state.mode ?\n                                    (\n                                        <CoPom user={this.state.curUser} following={Object.values(this.state.followlist)}></CoPom>\n                                    ) : (\n                                        <Okrs\n                                            okrList={this.state.curUserOKRs}\n                                            handleOpenDialog={this.handleOpenDialog}\n                                            selfView={this.state.curUser.userID === this.state.userRequested}\n                                            isFollowing={this.state.isFollowing}\n                                            userBeingViewed={this.state.userRequested}\n                                            handleFollow={this.handleFollow}\n                                            isSignedIn={this.state.isSignedIn}\n                                            quarter={this.state.quarter}\n                                            year={this.state.year}\n                                            updateProgress={this.updateProgress}></Okrs>\n                                    )}\n                            </Grid>\n                            <Grid container item  className={classes.rightpane} direction=\"column\" xs={12} sm={12} md={3} lg={3} xl={3}>\n                                <Grid >\n\n                                    <FollowingTable following={this.state.userlist} name=\"All Users\" initText=\"No Users :(\" />\n                                    <FollowingTable following={this.state.pommers} name=\"All Pommers\" initText=\"No Pommers Today!\" />\n\n                                </Grid>\n                                {this.state.isSignedIn ?\n                                    <Grid>\n\n                                            <FollowingTable following={Object.values(this.state.followlist)} name=\"Following\" initText=\"You're not following anyone!\" />\n                                            <FollowingTable following={Object.values(this.state.followerslist)} name=\"Followers\" initText=\"You do not have any followers yet!\" />\n\n                                    </Grid>\n                                    : ''}\n                            </Grid>\n                            <Grid container item  xs={false} sm={false} md={1} lg={1} xl={1}></Grid>\n\n                        </Grid>\n                        {/* <BottomNavigation value={this.state.mode} onChange={(event, newValue) => {\n                            this.setState({ mode: newValue })\n                            if (newValue === 0) {\n                                window.history.pushState({}, null, '/?m=okrs');\n                                // window.location.href='/?m=okrs';\n                            }\n                            else if (newValue === 1) {\n                                window.history.pushState({}, null, '/?m=copom');\n                                // window.location.href='/?m=copom';\n                            }\n                        }}\n                            showLabels\n                            className={classes.stickToBottom}\n                        >\n                            <BottomNavigationAction className={classes.edit} label=\"OKRs\" icon={<FormatListBulletedIcon />} />\n                            {this.state.isSignedIn ? <BottomNavigationAction className={classes.edit} label=\"CoPom\" icon={<GroupWorkIcon />} /> : ''}\n                        </BottomNavigation> */}\n\n                        {this.state.curUser.userID === this.state.userRequested ? <Edit openDialog={this.state.showDialog} handleCloseDialog={this.handleCloseDialog} showOKR={this.state.dialogContent} /> : ''}\n\n\n\n                    </Grid>\n\n\n                    )\n                    :\n                    (\n                        <FrontPage></FrontPage>\n                    )\n                }\n            </div>\n\n        )\n    }\n}\n\nexport default withStyles(styles)(HomeScreen);\n","import React from 'react';\n\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport HomeScreen from './screens/homescreen';\n\nimport './App.css';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {main: \"#1976d2\", light: \"rgb(71, 145, 219)\", dark: \"rgb(17, 82, 147)\", contrastText: \"#fff\"},\n    secondary: {main: \"rgb(220, 0, 78)\", light: \"rgb(227, 51, 113)\", dark: \"rgb(154, 0, 54)\", contrastText: \"#fff\"},\n    text: {primary: \"rgba(0, 0, 0, 0.87)\", secondary: \"rgba(0, 0, 0, 0.54)\", disabled: \"rgba(0, 0, 0, 0.38)\", hint: \"rgba(0, 0, 0, 0.38)\"},\n    chips:{relationships:\"#c0392b\", fitness:\"#f39c12\", work:\"#2980b9\", creative:\"#16a085\", other:\"#2c3e50\"}\n  }\n},\n)\n\n\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = { 'currentPage': window.location.pathname }\n  }\n\n  render() {\n\n    if (this.state.currentPage === \"/\") {\n      let mode = new URLSearchParams(window.location.search).get('m') || 'okrs';\n      if (mode==='okrs'){\n        return (\n          <MuiThemeProvider theme={theme}>\n            <HomeScreen mode={0}/>\n          </MuiThemeProvider>\n        )\n      }\n      else if (mode==='copom'){\n        return (\n          <MuiThemeProvider theme={theme}>\n            <HomeScreen mode={1}/>\n          </MuiThemeProvider>\n        )\n      }\n      \n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}